 Fri, 31 Aug 2018 16:26:30  INFO myLogger2.py <module> [ line:20 ] =========test start=========
 Fri, 31 Aug 2018 16:26:30  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{
 "subamt":"5000",
 "paymodel":"05",
 "channel":"JX",
 "bankid":"205B0CF78550959969",
 "bankno":"102",
 "bankacco":"6222620110038594231",
 "serialno":"201808311626300887pF",
 "custno":"1604578759",
 "apkind":"922",
 "subapkind":"922001",
 "apdt":"20180516",
 "aptm":"093540",
 "workdate":"20180516",
 "tradeacco":"001035098604578762",
 "taaccountid":"475B0CB66D40432285",
 "tano":"47",
 "sharetype":"A",
 "accptmd":"1",
 "branchcode":"247000",
 "distributorcode":"247",
"extFields":{"rechargeFlag":"1"}
}
 Fri, 31 Aug 2018 16:26:30  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626300887pF';"]
 Fri, 31 Aug 2018 16:26:30  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{'serialno':'201808311540580752Ts','extFields':{'errCode':'0000', 'errMsg':'交易成功', 'tranSt':'Y'}}
 Fri, 31 Aug 2018 16:26:30  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311540580752Ts' AND PAYST='Y';", "SELECT * from cts.cts_tradequtychg WHERE REFERNO='201808311540580752Ts' AND CHANGEQUTY='-5000';"]
 Fri, 31 Aug 2018 16:26:30  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{
 "subamt":"5000",
 "paymodel":"05",
 "channel":"JX",
 "bankid":"205B0CF78550959969",
 "bankno":"102",
 "bankacco":"6222620110038594231",
 "serialno":"201808311626300625ns",
 "custno":"1604578759",
 "apkind":"922",
 "subapkind":"922001",
 "apdt":"20180516",
 "aptm":"093540",
 "workdate":"20180516",
 "tradeacco":"001035098604578762",
 "taaccountid":"475B0CB66D40432285",
 "tano":"47",
 "sharetype":"A",
 "accptmd":"1",
 "branchcode":"247000",
 "distributorcode":"247",
"extFields":{'rechargeFlag':'1'}
}
 Fri, 31 Aug 2018 16:26:30  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626300625ns';"]
 Fri, 31 Aug 2018 16:26:30  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"serialno":"201808311540580511KE",'extFields':{"errCode":"0001", "errMsg":"交易失败", "tranSt":"F"}}
 Fri, 31 Aug 2018 16:26:30  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311540580511KE' AND PAYST='F';"]
 Fri, 31 Aug 2018 16:26:30  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{
 "subamt":"1000",
 "paymodel":"05",
 "channel":"JX",
 "bankid":"205AE16EA606342921",
 "bankno":"103",
 "bankacco":"6222620110038594231",
 "serialno":"201808311626300598VG",
 "custno":"1538967652",
 "apkind":"922",
 "subapkind":"922001",
 "apdt":"20180501",
 "aptm":"133540",
 "workdate":"20180501",
 "tradeacco":"000621718538967655",
 "taaccountid":"475AE141EE07252223",
 "tano":"47",
 "sharetype":"A",
 "accptmd":"2",
 "branchcode":"247000",
 "distributorcode":"247",
"extFields":{'rechargeFlag':'1'}
}
 Fri, 31 Aug 2018 16:26:30  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626300598VG';"]
 Fri, 31 Aug 2018 16:26:30  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"serialno":"201808311540580770aN",'extFields':{"errCode":"0000", "errMsg":"交易成功", "tranSt":"Y"}}
 Fri, 31 Aug 2018 16:26:30  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311540580770aN' AND PAYST='Y';", "SELECT * from cts.cts_tradequtychg WHERE REFERNO='201808311540580770aN' AND CHANGEQUTY='-1000';"]
 Fri, 31 Aug 2018 16:26:30  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{
 "subamt":"1000",
 "paymodel":"05",
 "channel":"JX",
 "bankid":"205AE16EA606342921",
 "bankno":"103",
 "bankacco":"6222620110038594231",
 "serialno":"201808311626300285iY",
 "custno":"1538967652",
 "apkind":"922",
 "subapkind":"922001",
 "apdt":"20180501",
 "aptm":"133540",
 "workdate":"20180501",
 "tradeacco":"000621718538967655",
 "taaccountid":"475AE141EE07252223",
 "tano":"47",
 "sharetype":"A",
 "accptmd":"2",
 "branchcode":"247000",
 "distributorcode":"247",
"extFields":{'rechargeFlag':'1'}
}
 Fri, 31 Aug 2018 16:26:30  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626300285iY';"]
 Fri, 31 Aug 2018 16:26:30  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"serialno":"201808311540580284ZM",'extFields':{"errCode":"0001", "errMsg":"交易失败", "tranSt":"F"}}
 Fri, 31 Aug 2018 16:26:30  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311540580284ZM' AND PAYST='F';"]
 Fri, 31 Aug 2018 16:26:30  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{
 "subamt":"500",
 "paymodel":"05",
 "channel":"JX",
 "bankid":"205AE16EA606342921",
 "bankno":"104",
 "bankacco":"6222620110038594231",
 "serialno":"201808311626300214hq",
 "custno":"1538967652",
 "apkind":"922",
 "subapkind":"922001",
 "apdt":"20180509",
 "aptm":"133540",
 "workdate":"20180509",
 "tradeacco":"000621718538967655",
 "taaccountid":"475AE141EE07252223",
 "tano":"47",
 "sharetype":"A",
 "accptmd":"3",
 "branchcode":"247000",
 "distributorcode":"247",
"extFields":{'rechargeFlag':'1'}
}
 Fri, 31 Aug 2018 16:26:30  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626300214hq';"]
 Fri, 31 Aug 2018 16:26:30  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"serialno":"201808311540580616CR","isSend":"1",'extFields':{"errCode":"0000", "errMsg":"交易成功", "tranSt":"Y"}}
 Fri, 31 Aug 2018 16:26:30  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311540580616CR' AND PAYST='Y';", "SELECT * from cts.cts_tradequtychg WHERE REFERNO='201808311540580616CR' AND CHANGEQUTY='-500';"]
 Fri, 31 Aug 2018 16:26:30  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{
 "subamt":"500",
 "paymodel":"05",
 "channel":"JX",
 "bankid":"205AE16EA606342921",
 "bankno":"104",
 "bankacco":"6222620110038594231",
 "serialno":"201808311626300143ld",
 "custno":"1538967652",
 "apkind":"922",
 "subapkind":"922001",
 "apdt":"20180509",
 "aptm":"133540",
 "workdate":"20180509",
 "tradeacco":"000621718538967655",
 "taaccountid":"475AE141EE07252223",
 "tano":"47",
 "sharetype":"A",
 "accptmd":"3",
 "branchcode":"247000",
 "distributorcode":"247",
"extFields":{'rechargeFlag':'1'}
}
 Fri, 31 Aug 2018 16:26:30  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626300143ld';"]
 Fri, 31 Aug 2018 16:26:30  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"serialno":"201808311540580331ks",'extFields':{"errCode":"0001", "errMsg":"交易失败", "tranSt":"F"}}
 Fri, 31 Aug 2018 16:26:30  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311540580331ks' AND PAYST='F';"]
 Fri, 31 Aug 2018 16:26:30  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{
 "subamt":"4000",
 "paymodel":"05",
 "channel":"JX",
 "bankid":"205AE16EA606342921",
 "bankno":"105",
 "bankacco":"6222620110038594231",
 "serialno":"201808311626300635Cx",
 "custno":"1538967652",
 "apkind":"922",
 "subapkind":"922001",
 "apdt":"20180228",
 "aptm":"223540",
 "workdate":"20180228",
 "tradeacco":"000621718538967655",
 "taaccountid":"475AE141EE07252223",
 "tano":"47",
 "sharetype":"A",
 "accptmd":"2",
 "branchcode":"247000",
 "distributorcode":"247",
"extFields":{'rechargeFlag':'1'}
}
 Fri, 31 Aug 2018 16:26:30  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626300635Cx';"]
 Fri, 31 Aug 2018 16:26:30  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"serialno":"201808311540580955Hy","isSend":"1",'extFields':{"errCode":"0000", "errMsg":"交易成功", "tranSt":"Y"}}
 Fri, 31 Aug 2018 16:26:30  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311540580955Hy' AND PAYST='Y';", "SELECT * from cts.cts_tradequtychg WHERE REFERNO='201808311540580955Hy' AND CHANGEQUTY='-4000';"]
 Fri, 31 Aug 2018 16:26:30  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{
 "subamt":"4000",
 "paymodel":"05",
 "channel":"JX",
 "bankid":"205AE16EA606342921",
 "bankno":"105",
 "bankacco":"6222620110038594231",
 "serialno":"201808311626300744GD",
 "custno":"1538967652",
 "apkind":"922",
 "subapkind":"922001",
 "apdt":"20180228",
 "aptm":"223540",
 "workdate":"20180228",
 "tradeacco":"000621718538967655",
 "taaccountid":"475AE141EE07252223",
 "tano":"47",
 "sharetype":"A",
 "accptmd":"2",
 "branchcode":"247000",
 "distributorcode":"247",
"extFields":{'rechargeFlag':'1'}
}
 Fri, 31 Aug 2018 16:26:30  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626300744GD';"]
 Fri, 31 Aug 2018 16:26:30  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"serialno":"201808311540580934WS",'extFields':{"errCode":"0001", "errMsg":"交易失败", "tranSt":"F"}}
 Fri, 31 Aug 2018 16:26:30  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311540580934WS' AND PAYST='F';"]
 Fri, 31 Aug 2018 16:26:30  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{
 "subamt":"8999.12",
 "paymodel":"05",
 "channel":"JX",
 "bankid":"205AE16EA606342921",
 "bankno":"301",
 "bankacco":"6222620110038594231",
 "serialno":"201808311626300792ya",
 "custno":"1538967652",
 "apkind":"922",
 "subapkind":"922001",
 "apdt":"20180302",
 "aptm":"233540",
 "workdate":"20180302",
 "tradeacco":"000621718538967655",
 "taaccountid":"475AE141EE07252223",
 "tano":"47",
 "sharetype":"A",
 "accptmd":"1",
 "branchcode":"247000",
 "distributorcode":"247","extFields":{'rechargeFlag':'1'}
}
 Fri, 31 Aug 2018 16:26:30  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626300792ya';"]
 Fri, 31 Aug 2018 16:26:30  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"serialno":"201808311540580728aC","isSend":"1",'extFields':{"errCode":"0000", "errMsg":"交易成功", "tranSt":"Y"}}
 Fri, 31 Aug 2018 16:26:30  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311540580728aC' AND PAYST='Y';", "SELECT * from cts.cts_tradequtychg WHERE REFERNO='201808311540580728aC' AND CHANGEQUTY='-8999.12';"]
 Fri, 31 Aug 2018 16:26:30  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{
 "subamt":"8999.12",
 "paymodel":"05",
 "channel":"JX",
 "bankid":"205AE16EA606342921",
 "bankno":"301",
 "bankacco":"6222620110038594231",
 "serialno":"201808311626300429Fi",
 "custno":"1538967652",
 "apkind":"922",
 "subapkind":"922001",
 "apdt":"20180302",
 "aptm":"233540",
 "workdate":"20180302",
 "tradeacco":"000621718538967655",
 "taaccountid":"475AE141EE07252223",
 "tano":"47",
 "sharetype":"A",
 "accptmd":"1",
 "branchcode":"247000",
 "distributorcode":"247","extFields":{'rechargeFlag':'1'}
}
 Fri, 31 Aug 2018 16:26:30  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626300429Fi';"]
 Fri, 31 Aug 2018 16:26:30  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"serialno":"201808311540580660UP",'extFields':{"errCode":"0001", "errMsg":"交易失败", "tranSt":"F"}}
 Fri, 31 Aug 2018 16:26:30  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311540580660UP' AND PAYST='F';"]
 Fri, 31 Aug 2018 16:26:30  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{
 "subamt":"200.12",
 "paymodel":"05",
 "channel":"JX",
 "bankid":"205AE16EA606342921",
 "bankno":"302",
 "bankacco":"6222620110038594231",
 "serialno":"201808311626300904xZ",
 "custno":"1538967652",
 "apkind":"922",
 "subapkind":"922001",
 "apdt":"20180501",
 "aptm":"093540",
 "workdate":"20180516",
 "tradeacco":"000621718538967655",
 "taaccountid":"475AE141EE07252223",
 "tano":"47",
 "sharetype":"A",
 "accptmd":"2",
 "branchcode":"247000",
 "distributorcode":"247","extFields":{'rechargeFlag':'1'}
}
 Fri, 31 Aug 2018 16:26:30  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626300904xZ';"]
 Fri, 31 Aug 2018 16:26:30  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"serialno":"201808311540580137mX","isSend":"1",'extFields':{"errCode":"0000", "errMsg":"交易成功", "tranSt":"Y"}}
 Fri, 31 Aug 2018 16:26:30  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311540580137mX' AND PAYST='Y';", "SELECT * from cts.cts_tradequtychg WHERE REFERNO='201808311540580137mX' AND CHANGEQUTY='-200.12';"]
 Fri, 31 Aug 2018 16:26:30  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{
 "subamt":"200.12",
 "paymodel":"05",
 "channel":"JX",
 "bankid":"205AE16EA606342921",
 "bankno":"302",
 "bankacco":"6222620110038594231",
 "serialno":"201808311626300198PE",
 "custno":"1538967652",
 "apkind":"922",
 "subapkind":"922001",
 "apdt":"20180501",
 "aptm":"093540",
 "workdate":"20180516",
 "tradeacco":"000621718538967655",
 "taaccountid":"475AE141EE07252223",
 "tano":"47",
 "sharetype":"A",
 "accptmd":"2",
 "branchcode":"247000",
 "distributorcode":"247","extFields":{'rechargeFlag':'1'}
}
 Fri, 31 Aug 2018 16:26:30  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626300198PE';"]
 Fri, 31 Aug 2018 16:26:30  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"serialno":"201808311540580101iS",'extFields':{"errCode":"0001", "errMsg":"交易失败", "tranSt":"F"}}
 Fri, 31 Aug 2018 16:26:30  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311540580101iS' AND PAYST='F';"]
 Fri, 31 Aug 2018 16:26:30  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{
 "subamt":"5000",
 "paymodel":"05",
 "channel":"JX",
 "bankid":"205AE16EA606342921",
 "bankno":"303",
 "bankacco":"6222620110038594231",
 "serialno":"201808311626300439At",
 "custno":"1538967652",
 "apkind":"922",
 "subapkind":"922001",
 "apdt":"20180201",
 "aptm":"093540",
 "workdate":"20180201",
 "tradeacco":"000621718538967655",
 "taaccountid":"475AE141EE07252223",
 "tano":"47",
 "sharetype":"A",
 "accptmd":"3",
 "branchcode":"247000",
 "distributorcode":"247","extFields":{'rechargeFlag':'1'}
}
 Fri, 31 Aug 2018 16:26:30  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626300439At';"]
 Fri, 31 Aug 2018 16:26:30  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"serialno":"201808311540580787ei","isSend":"1",'extFields':{"errCode":"0000", "errMsg":"交易成功", "tranSt":"Y"}}
 Fri, 31 Aug 2018 16:26:30  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311540580787ei' AND PAYST='Y';", "SELECT * from cts.cts_tradequtychg WHERE REFERNO='201808311540580787ei' AND CHANGEQUTY='-5000';"]
 Fri, 31 Aug 2018 16:26:30  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{
 "subamt":"5000",
 "paymodel":"05",
 "channel":"JX",
 "bankid":"205AE16EA606342921",
 "bankno":"303",
 "bankacco":"6222620110038594231",
 "serialno":"201808311626300388qE",
 "custno":"1538967652",
 "apkind":"922",
 "subapkind":"922001",
 "apdt":"20180201",
 "aptm":"093540",
 "workdate":"20180201",
 "tradeacco":"000621718538967655",
 "taaccountid":"475AE141EE07252223",
 "tano":"47",
 "sharetype":"A",
 "accptmd":"3",
 "branchcode":"247000",
 "distributorcode":"247","extFields":{'rechargeFlag':'1'}
}
 Fri, 31 Aug 2018 16:26:30  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626300388qE';"]
 Fri, 31 Aug 2018 16:26:30  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"serialno":"201808311540580912Xk",'extFields':{"errCode":"0001", "errMsg":"交易失败", "tranSt":"F"}}
 Fri, 31 Aug 2018 16:26:30  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311540580912Xk' AND PAYST='F';"]
 Fri, 31 Aug 2018 16:26:30  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{
 "subamt":"500.8",
 "paymodel":"05",
 "channel":"JX",
 "bankid":"205AE16EA606342921",
 "bankno":"304",
 "bankacco":"6222620110038594231",
 "serialno":"201808311626300576lY",
 "custno":"1538967652",
 "apkind":"922",
 "subapkind":"922001",
 "apdt":"20180501",
 "aptm":"093540",
 "workdate":"20180516",
 "tradeacco":"000621718538967655",
 "taaccountid":"475AE141EE07252223",
 "tano":"47",
 "sharetype":"A",
 "accptmd":"1",
 "branchcode":"247000",
 "distributorcode":"247","extFields":{'rechargeFlag':'1'}
}
 Fri, 31 Aug 2018 16:26:30  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626300576lY';"]
 Fri, 31 Aug 2018 16:26:30  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"serialno":"201808311540580301mo","isSend":"1",'extFields':{"errCode":"0000", "errMsg":"交易成功", "tranSt":"Y"}}
 Fri, 31 Aug 2018 16:26:30  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311540580301mo' AND PAYST='Y';", "SELECT * from cts.cts_tradequtychg WHERE REFERNO='201808311540580301mo' AND CHANGEQUTY='-500.8';"]
 Fri, 31 Aug 2018 16:26:30  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{
 "subamt":"500.8",
 "paymodel":"05",
 "channel":"JX",
 "bankid":"205AE16EA606342921",
 "bankno":"304",
 "bankacco":"6222620110038594231",
 "serialno":"201808311626300102Et",
 "custno":"1538967652",
 "apkind":"922",
 "subapkind":"922001",
 "apdt":"20180501",
 "aptm":"093540",
 "workdate":"20180516",
  "tradeacco":"000621718538967655",
 "taaccountid":"475AE141EE07252223",
 "tano":"47",
 "sharetype":"A",
 "accptmd":"1",
 "branchcode":"247000",
 "distributorcode":"247","extFields":{'rechargeFlag':'1'}
}
 Fri, 31 Aug 2018 16:26:30  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626300102Et';"]
 Fri, 31 Aug 2018 16:26:30  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"serialno":"201808311540580222qV",'extFields':{"errCode":"0001", "errMsg":"交易失败", "tranSt":"F"}}
 Fri, 31 Aug 2018 16:26:30  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311540580222qV' AND PAYST='F';"]
 Fri, 31 Aug 2018 16:26:30  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{
 "subamt":"1001",
 "paymodel":"05",
 "channel":"JX",
 "bankid":"205AE16EA606342921",
 "bankno":"305",
 "bankacco":"6222620110038594231",
 "serialno":"201808311626300480AG",
 "custno":"1538967652",
 "apkind":"922",
 "subapkind":"922001",
 "apdt":"20181201",
 "aptm":"093540",
 "workdate":"20181201",
 "tradeacco":"000621718538967655",
 "taaccountid":"475AE141EE07252223",
 "tano":"47",
 "sharetype":"A",
 "accptmd":"1",
 "branchcode":"247000",
 "distributorcode":"247","extFields":{'rechargeFlag':'1'}
}
 Fri, 31 Aug 2018 16:26:30  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626300480AG';"]
 Fri, 31 Aug 2018 16:26:30  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"serialno":"20180831154058083We","isSend":"1",'extFields':{"errCode":"0000", "errMsg":"交易成功", "tranSt":"Y"}}
 Fri, 31 Aug 2018 16:26:30  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='20180831154058083We' AND PAYST='Y';", "SELECT * from cts.cts_tradequtychg WHERE REFERNO='20180831154058083We' AND CHANGEQUTY='-1001';"]
 Fri, 31 Aug 2018 16:26:30  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{
 "subamt":"1001",
 "paymodel":"05",
 "channel":"JX",
 "bankid":"205AE16EA606342921",
 "bankno":"305",
 "bankacco":"6222620110038594231",
 "serialno":"201808311626300718Vs",
 "custno":"1538967652",
 "apkind":"922",
 "subapkind":"922001",
 "apdt":"20181201",
 "aptm":"093540",
 "workdate":"20181201",
 "tradeacco":"000621718538967655",
 "taaccountid":"475AE141EE07252223",
 "tano":"47",
 "sharetype":"A",
 "accptmd":"1",
 "branchcode":"247000",
 "distributorcode":"247","extFields":{'rechargeFlag':'1'}
}
 Fri, 31 Aug 2018 16:26:30  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626300718Vs';"]
 Fri, 31 Aug 2018 16:26:30  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"serialno":"201808311540580588hR",'extFields':{"errCode":"0001", "errMsg":"交易失败", "tranSt":"F"}}
 Fri, 31 Aug 2018 16:26:30  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311540580588hR' AND PAYST='F';"]
 Fri, 31 Aug 2018 16:26:30  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{
 "subamt":"5000",
 "paymodel":"05",
 "channel":"JX",
 "bankid":"205B0CF78550959969",
 "bankno":"306",
 "bankacco":"6222620110038594231",
 "serialno":"20180831162630057gN",
 "custno":"1604578759",
 "apkind":"922",
 "subapkind":"922001",
 "apdt":"20180516",
 "aptm":"093540",
 "workdate":"20180516",
 "tradeacco":"001035098604578762",
 "taaccountid":"475B0CB66D40432285",
 "tano":"47",
 "sharetype":"A",
 "accptmd":"1",
 "branchcode":"247000",
 "distributorcode":"247",
"extFields":{'rechargeFlag':'1'}
}
 Fri, 31 Aug 2018 16:26:30  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='20180831162630057gN';"]
 Fri, 31 Aug 2018 16:26:30  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"serialno":"201808311540580980zj","isSend":"1",'extFields':{"errCode":"0000", "errMsg":"交易成功", "tranSt":"Y"}}
 Fri, 31 Aug 2018 16:26:30  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311540580980zj' AND PAYST='Y';", "SELECT * from cts.cts_tradequtychg WHERE REFERNO='201808311540580980zj' AND CHANGEQUTY='-5000';"]
 Fri, 31 Aug 2018 16:26:30  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{
 "subamt":"5000",
 "paymodel":"05",
 "channel":"JX",
 "bankid":"205B0CF78550959969",
 "bankno":"306",
 "bankacco":"6222620110038594231",
 "serialno":"201808311626300262bN",
 "custno":"1604578759",
 "apkind":"922",
 "subapkind":"922001",
 "apdt":"20180516",
 "aptm":"093540",
 "workdate":"20180516",
 "tradeacco":"001035098604578762",
 "taaccountid":"475B0CB66D40432285",
 "tano":"47",
 "sharetype":"A",
 "accptmd":"1",
 "branchcode":"247000",
 "distributorcode":"247",
"extFields":{'rechargeFlag':'1'}
}
 Fri, 31 Aug 2018 16:26:30  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626300262bN';"]
 Fri, 31 Aug 2018 16:26:30  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"serialno":"201808311540580931RS",'extFields':{"errCode":"0001", "errMsg":"交易失败", "tranSt":"F"}}
 Fri, 31 Aug 2018 16:26:30  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311540580931RS' AND PAYST='F';"]
 Fri, 31 Aug 2018 16:26:30  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{
 "subamt":"400",
 "paymodel":"05",
 "channel":"JX",
 "bankid":"205B0CF78550959969",
 "bankno":"307",
 "bankacco":"6222620110038594231",
 "serialno":"201808311626300944bU",
 "custno":"1604578759",
 "apkind":"922",
 "subapkind":"922001",
 "apdt":"20180516",
 "aptm":"093540",
 "workdate":"20180516",
 "tradeacco":"001035098604578762",
 "taaccountid":"475B0CB66D40432285",
 "tano":"47",
 "sharetype":"A",
 "accptmd":"1",
 "branchcode":"247000",
 "distributorcode":"247",
"extFields":{'rechargeFlag':'1'}
}
 Fri, 31 Aug 2018 16:26:30  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626300944bU';"]
 Fri, 31 Aug 2018 16:26:30  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"serialno":"201808311540580832TP","isSend":"1",'extFields':{"errCode":"0000", "errMsg":"交易成功", "tranSt":"Y"}}
 Fri, 31 Aug 2018 16:26:30  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311540580832TP' AND PAYST='Y';", "SELECT * from cts.cts_tradequtychg WHERE REFERNO='201808311540580832TP' AND CHANGEQUTY='-400';"]
 Fri, 31 Aug 2018 16:26:30  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{
 "subamt":"400",
 "paymodel":"05",
 "channel":"JX",
 "bankid":"205B0CF78550959969",
 "bankno":"307",
 "bankacco":"6222620110038594231",
 "serialno":"201808311626300175As",
 "custno":"1604578759",
 "apkind":"922",
 "subapkind":"922001",
 "apdt":"20180516",
 "aptm":"093540",
 "workdate":"20180516",
 "tradeacco":"001035098604578762",
 "taaccountid":"475B0CB66D40432285",
 "tano":"47",
 "sharetype":"A",
 "accptmd":"1",
 "branchcode":"247000",
 "distributorcode":"247",
"extFields":{'rechargeFlag':'1'}
}
 Fri, 31 Aug 2018 16:26:30  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626300175As';"]
 Fri, 31 Aug 2018 16:26:30  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"serialno":"201808311540580934VM",'extFields':{"errCode":"0001", "errMsg":"交易失败", "tranSt":"F"}}
 Fri, 31 Aug 2018 16:26:30  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311540580934VM' AND PAYST='F';"]
 Fri, 31 Aug 2018 16:26:30  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{
 "subamt":"50000.9",
 "paymodel":"05",
 "channel":"JX",
 "bankid":"205B0CF78550959969",
 "bankno":"308",
 "bankacco":"6222620110038594231",
 "serialno":"201808311626300365pT",
 "custno":"1604578759",
 "apkind":"922",
 "subapkind":"922001",
 "apdt":"20180516",
 "aptm":"093540",
 "workdate":"20180516",
 "tradeacco":"001035098604578762",
 "taaccountid":"475B0CB66D40432285",
 "tano":"47",
 "sharetype":"A",
 "accptmd":"1",
 "branchcode":"247000",
 "distributorcode":"247",
"extFields":{'rechargeFlag':'1'}
}
 Fri, 31 Aug 2018 16:26:30  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626300365pT';"]
 Fri, 31 Aug 2018 16:26:30  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"serialno":"201808311540580678vI","isSend":"1",'extFields':{"errCode":"0000", "errMsg":"交易成功", "tranSt":"Y"}}
 Fri, 31 Aug 2018 16:26:30  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311540580678vI' AND PAYST='Y';", "SELECT * from cts.cts_tradequtychg WHERE REFERNO='201808311540580678vI' AND CHANGEQUTY='-50000.9';"]
 Fri, 31 Aug 2018 16:26:30  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{
 "subamt":"5000",
 "paymodel":"05",
 "channel":"JX",
 "bankid":"205B0CF78550959969",
 "bankno":"308",
 "bankacco":"6222620110038594231",
 "serialno":"201808311626300818dG",
 "custno":"1604578759",
 "apkind":"922",
 "subapkind":"922001",
 "apdt":"20180516",
 "aptm":"093540",
 "workdate":"20180516",
 "tradeacco":"001035098604578762",
 "taaccountid":"475B0CB66D40432285",
 "tano":"47",
 "sharetype":"A",
 "accptmd":"1",
 "branchcode":"247000",
 "distributorcode":"247",
"extFields":{'rechargeFlag':'1'}
}
 Fri, 31 Aug 2018 16:26:30  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626300818dG';"]
 Fri, 31 Aug 2018 16:26:30  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"serialno":"201808311540580734Bs",'extFields':{"errCode":"0001", "errMsg":"交易失败", "tranSt":"F"}}
 Fri, 31 Aug 2018 16:26:30  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311540580734Bs' AND PAYST='F';"]
 Fri, 31 Aug 2018 16:26:30  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{
 "subamt":"1000.00",
 "paymodel":"05",
 "channel":"JX",
 "bankid":"205B0CF78550959969",
 "bankno":"309",
 "bankacco":"6222620110038594231",
 "serialno":"20180831162630034Cv",
 "custno":"1604578759",
 "apkind":"922",
 "subapkind":"922001",
 "apdt":"20180516",
 "aptm":"093540",
 "workdate":"20180516",
 "tradeacco":"001035098604578762",
 "taaccountid":"475B0CB66D40432285",
 "tano":"47",
 "sharetype":"A",
 "accptmd":"1",
 "branchcode":"247000",
 "distributorcode":"247",
"extFields":{'rechargeFlag':'1'}
}
 Fri, 31 Aug 2018 16:26:30  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='20180831162630034Cv';"]
 Fri, 31 Aug 2018 16:26:30  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"serialno":"201808311540580425Gp","isSend":"1",'extFields':{"errCode":"0000", "errMsg":"交易成功", "tranSt":"Y"}}
 Fri, 31 Aug 2018 16:26:30  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311540580425Gp' AND PAYST='Y';", "SELECT * from cts.cts_tradequtychg WHERE REFERNO='201808311540580425Gp' AND CHANGEQUTY='-1000.00';"]
 Fri, 31 Aug 2018 16:26:30  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{
 "subamt":"5000",
 "paymodel":"05",
 "channel":"JX",
 "bankid":"205B0CF78550959969",
 "bankno":"309",
 "bankacco":"6222620110038594231",
 "serialno":"201808311626300547Rr",
 "custno":"1604578759",
 "apkind":"922",
 "subapkind":"922001",
 "apdt":"20180516",
 "aptm":"093540",
 "workdate":"20180516",
 "tradeacco":"001035098604578762",
 "taaccountid":"475B0CB66D40432285",
 "tano":"47",
 "sharetype":"A",
 "accptmd":"1",
 "branchcode":"247000",
 "distributorcode":"247",
"extFields":{'rechargeFlag':'1'}
}
 Fri, 31 Aug 2018 16:26:30  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626300547Rr';"]
 Fri, 31 Aug 2018 16:26:30  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"serialno":"201808311540580669Eu",'extFields':{"errCode":"0001", "errMsg":"交易失败", "tranSt":"F"}}
 Fri, 31 Aug 2018 16:26:30  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311540580669Eu' AND PAYST='F';"]
 Fri, 31 Aug 2018 16:26:30  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{
 "subamt":"222",
 "paymodel":"05",
 "channel":"JX",
 "bankid":"205B0CF78550959969",
 "bankno":"310",
 "bankacco":"6222620110038594231",
 "serialno":"201808311626300391WL",
 "custno":"1604578759",
 "apkind":"922",
 "subapkind":"922001",
 "apdt":"20180516",
 "aptm":"093540",
 "workdate":"20180516",
 "tradeacco":"001035098604578762",
 "taaccountid":"475B0CB66D40432285",
 "tano":"47",
 "sharetype":"A",
 "accptmd":"1",
 "branchcode":"247000",
 "distributorcode":"247",
"extFields":{'rechargeFlag':'1'}
}
 Fri, 31 Aug 2018 16:26:30  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626300391WL';"]
 Fri, 31 Aug 2018 16:26:30  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"serialno":"201808311540580841Qy","isSend":"1",'extFields':{"errCode":"0000", "errMsg":"交易成功", "tranSt":"Y"}}
 Fri, 31 Aug 2018 16:26:30  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311540580841Qy' AND PAYST='Y';", "SELECT * from cts.cts_tradequtychg WHERE REFERNO='201808311540580841Qy' AND CHANGEQUTY='-222';"]
 Fri, 31 Aug 2018 16:26:30  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{
 "subamt":"5000",
 "paymodel":"05",
 "channel":"JX",
 "bankid":"205B0CF78550959969",
 "bankno":"310",
 "bankacco":"6222620110038594231",
 "serialno":"201808311626300435XD",
 "custno":"1604578759",
 "apkind":"922",
 "subapkind":"922001",
 "apdt":"20180516",
 "aptm":"093540",
 "workdate":"20180516",
 "tradeacco":"001035098604578762",
 "taaccountid":"475B0CB66D40432285",
 "tano":"47",
 "sharetype":"A",
 "accptmd":"1",
 "branchcode":"247000",
 "distributorcode":"247",
"extFields":{'rechargeFlag':'1'}
}
 Fri, 31 Aug 2018 16:26:30  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626300435XD';"]
 Fri, 31 Aug 2018 16:26:30  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"serialno":"201808311540580377JD",'extFields':{"errCode":"0001", "errMsg":"交易失败", "tranSt":"F"}}
 Fri, 31 Aug 2018 16:26:30  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311540580377JD' AND PAYST='F';"]
 Fri, 31 Aug 2018 16:26:30  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{
 "subamt":"555",
 "paymodel":"05",
 "channel":"JX",
 "bankid":"205B0CF78550959969",
 "bankno":"403",
 "bankacco":"6222620110038594231",
 "serialno":"201808311626300226GA",
 "custno":"1604578759",
 "apkind":"922",
 "subapkind":"922001",
 "apdt":"20180516",
 "aptm":"093540",
 "workdate":"20180516",
 "tradeacco":"001035098604578762",
 "taaccountid":"475B0CB66D40432285",
 "tano":"47",
 "sharetype":"A",
 "accptmd":"1",
 "branchcode":"247000",
 "distributorcode":"247",
"extFields":{'rechargeFlag':'1'}
}
 Fri, 31 Aug 2018 16:26:30  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626300226GA';"]
 Fri, 31 Aug 2018 16:26:30  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"serialno":"201808311540580161Mo","isSend":"1",'extFields':{"errCode":"0000", "errMsg":"交易成功", "tranSt":"Y"}}
 Fri, 31 Aug 2018 16:26:30  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311540580161Mo' AND PAYST='Y';", "SELECT * from cts.cts_tradequtychg WHERE REFERNO='201808311540580161Mo' AND CHANGEQUTY='-555';"]
 Fri, 31 Aug 2018 16:26:30  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{
 "subamt":"5000",
 "paymodel":"05",
 "channel":"JX",
 "bankid":"205B0CF78550959969",
 "bankno":"403",
 "bankacco":"6222620110038594231",
 "serialno":"201808311626300945xb",
 "custno":"1604578759",
 "apkind":"922",
 "subapkind":"922001",
 "apdt":"20180516",
 "aptm":"093540",
 "workdate":"20180516",
 "tradeacco":"001035098604578762",
 "taaccountid":"475B0CB66D40432285",
 "tano":"47",
 "sharetype":"A",
 "accptmd":"1",
 "branchcode":"247000",
 "distributorcode":"247",
"extFields":{'rechargeFlag':'1'}
}
 Fri, 31 Aug 2018 16:26:30  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626300945xb';"]
 Fri, 31 Aug 2018 16:26:30  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"serialno":"201808311540580361ff",'extFields':{"errCode":"0001", "errMsg":"交易失败", "tranSt":"F"}}
 Fri, 31 Aug 2018 16:26:30  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311540580361ff' AND PAYST='F';"]
 Fri, 31 Aug 2018 16:26:30  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{
 "subamt":"5005.1",
 "paymodel":"05",
 "channel":"JX",
 "bankid":"205B0CF78550959969",
 "bankno":"810",
 "bankacco":"6222620110038594231",
 "serialno":"201808311626300817CX",
 "custno":"1604578759",
 "apkind":"922",
 "subapkind":"922001",
 "apdt":"20180516",
 "aptm":"093540",
 "workdate":"20180516",
 "tradeacco":"001035098604578762",
 "taaccountid":"475B0CB66D40432285",
 "tano":"47",
 "sharetype":"A",
 "accptmd":"1",
 "branchcode":"247000",
 "distributorcode":"247",
"extFields":{'rechargeFlag':'1'}
}
 Fri, 31 Aug 2018 16:26:30  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626300817CX';"]
 Fri, 31 Aug 2018 16:26:30  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"serialno":"201808311540580835sh","isSend":"1",'extFields':{"errCode":"0000", "errMsg":"交易成功", "tranSt":"Y"}}
 Fri, 31 Aug 2018 16:26:30  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311540580835sh' AND PAYST='Y';", "SELECT * from cts.cts_tradequtychg WHERE REFERNO='201808311540580835sh' AND CHANGEQUTY='-5005.1';"]
 Fri, 31 Aug 2018 16:26:30  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{
 "subamt":"5000",
 "paymodel":"05",
 "channel":"JX",
 "bankid":"205B0CF78550959969",
 "bankno":"810",
 "bankacco":"6222620110038594231",
 "serialno":"201808311626300194Pq",
 "custno":"1604578759",
 "apkind":"922",
 "subapkind":"922001",
 "apdt":"20180516",
 "aptm":"093540",
 "workdate":"20180516",
 "tradeacco":"001035098604578762",
 "taaccountid":"475B0CB66D40432285",
 "tano":"47",
 "sharetype":"A",
 "accptmd":"1",
 "branchcode":"247000",
 "distributorcode":"247",
"extFields":{'rechargeFlag':'1'}
}
 Fri, 31 Aug 2018 16:26:30  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626300194Pq';"]
 Fri, 31 Aug 2018 16:26:30  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"serialno":"201808311540580873ER",'extFields':{"errCode":"0001", "errMsg":"交易失败", "tranSt":"F"}}
 Fri, 31 Aug 2018 16:26:30  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311540580873ER' AND PAYST='F';"]
 Fri, 31 Aug 2018 16:26:30  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{
 "subamt":"65555",
 "paymodel":"05",
 "channel":"JX",
 "bankid":"205B0CF78550959969",
 "bankno":"811",
 "bankacco":"6222620110038594231",
 "serialno":"201808311626300152xq",
 "custno":"1604578759",
 "apkind":"922",
 "subapkind":"922001",
 "apdt":"20180516",
 "aptm":"093540",
 "workdate":"20180516",
 "tradeacco":"001035098604578762",
 "taaccountid":"475B0CB66D40432285",
 "tano":"47",
 "sharetype":"A",
 "accptmd":"1",
 "branchcode":"247000",
 "distributorcode":"247",
"extFields":{'rechargeFlag':'1'}
}
 Fri, 31 Aug 2018 16:26:30  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626300152xq';"]
 Fri, 31 Aug 2018 16:26:30  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"serialno":"201808311540580999Ux","isSend":"1",'extFields':{"errCode":"0000", "errMsg":"交易成功", "tranSt":"Y"}}
 Fri, 31 Aug 2018 16:26:30  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311540580999Ux' AND PAYST='Y';", "SELECT * from cts.cts_tradequtychg WHERE REFERNO='201808311540580999Ux' AND CHANGEQUTY='-65555';"]
 Fri, 31 Aug 2018 16:26:30  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{
 "subamt":"5000",
 "paymodel":"05",
 "channel":"JX",
 "bankid":"205B0CF78550959969",
 "bankno":"811",
 "bankacco":"6222620110038594231",
 "serialno":"201808311626300692tQ",
 "custno":"1604578759",
 "apkind":"922",
 "subapkind":"922001",
 "apdt":"20180516",
 "aptm":"093540",
 "workdate":"20180516",
 "tradeacco":"001035098604578762",
 "taaccountid":"475B0CB66D40432285",
 "tano":"47",
 "sharetype":"A",
 "accptmd":"1",
 "branchcode":"247000",
 "distributorcode":"247",
"extFields":{'rechargeFlag':'1'}
}
 Fri, 31 Aug 2018 16:26:30  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626300692tQ';"]
 Fri, 31 Aug 2018 16:26:30  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"serialno":"201808311540580452WV",'extFields':{"errCode":"0001", "errMsg":"交易失败", "tranSt":"F"}}
 Fri, 31 Aug 2018 16:26:30  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311540580452WV' AND PAYST='F';"]
 Fri, 31 Aug 2018 16:26:30  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{
 "subamt":"5000",
 "paymodel":"05",
 "channel":"JX",
 "bankid":"205B0CF78550959969",
 "bankno":"813",
 "bankacco":"6222620110038594231",
 "serialno":"201808311626300388qP",
 "custno":"1604578759",
 "apkind":"922",
 "subapkind":"922001",
 "apdt":"20180516",
 "aptm":"093540",
 "workdate":"20180516",
 "tradeacco":"001035098604578762",
 "taaccountid":"475B0CB66D40432285",
 "tano":"47",
 "sharetype":"A",
 "accptmd":"1",
 "branchcode":"247000",
 "distributorcode":"247",
"extFields":{'rechargeFlag':'1'}
}
 Fri, 31 Aug 2018 16:26:30  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626300388qP';"]
 Fri, 31 Aug 2018 16:26:30  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"serialno":"201808311540580576Rb","isSend":"1",'extFields':{"errCode":"0000", "errMsg":"交易成功", "tranSt":"Y"}}
 Fri, 31 Aug 2018 16:26:30  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311540580576Rb' AND PAYST='Y';", "SELECT * from cts.cts_tradequtychg WHERE REFERNO='201808311540580576Rb' AND CHANGEQUTY='-5000';"]
 Fri, 31 Aug 2018 16:26:30  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{
 "subamt":"5000",
 "paymodel":"05",
 "channel":"JX",
 "bankid":"205B0CF78550959969",
 "bankno":"813",
 "bankacco":"6222620110038594231",
 "serialno":"201808311626300762Cr",
 "custno":"1604578759",
 "apkind":"922",
 "subapkind":"922001",
 "apdt":"20180516",
 "aptm":"093540",
 "workdate":"20180516",
 "tradeacco":"001035098604578762",
 "taaccountid":"475B0CB66D40432285",
 "tano":"47",
 "sharetype":"A",
 "accptmd":"1",
 "branchcode":"247000",
 "distributorcode":"247",
"extFields":{'rechargeFlag':'1'}
}
 Fri, 31 Aug 2018 16:26:30  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626300762Cr';"]
 Fri, 31 Aug 2018 16:26:30  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"serialno":"201808311540580364UT",'extFields':{"errCode":"0001", "errMsg":"交易失败", "tranSt":"F"}}
 Fri, 31 Aug 2018 16:26:30  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311540580364UT' AND PAYST='F';"]
 Fri, 31 Aug 2018 16:26:30  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{
 "subamt":"3900.67",
 "paymodel":"05",
 "channel":"JX",
 "bankid":"205B0CF78550959969",
 "bankno":"973",
 "bankacco":"6222620110038594231",
 "serialno":"201808311626300438jf",
 "custno":"1604578759",
 "apkind":"922",
 "subapkind":"922001",
 "apdt":"20180516",
 "aptm":"093540",
 "workdate":"20180516",
 "tradeacco":"001035098604578762",
 "taaccountid":"475B0CB66D40432285",
 "tano":"47",
 "sharetype":"A",
 "accptmd":"1",
 "branchcode":"247000",
 "distributorcode":"247",
"extFields":{'rechargeFlag':'1'}
}
 Fri, 31 Aug 2018 16:26:30  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626300438jf';"]
 Fri, 31 Aug 2018 16:26:30  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"serialno":"201808311540580518AA","isSend":"1",'extFields':{"errCode":"0000", "errMsg":"交易成功", "tranSt":"Y"}}
 Fri, 31 Aug 2018 16:26:30  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311540580518AA' AND PAYST='Y';", "SELECT * from cts.cts_tradequtychg WHERE REFERNO='201808311540580518AA' AND CHANGEQUTY='-3900.67';"]
 Fri, 31 Aug 2018 16:26:30  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{
 "subamt":"5000",
 "paymodel":"05",
 "channel":"JX",
 "bankid":"205B0CF78550959969",
 "bankno":"973",
 "bankacco":"6222620110038594231",
 "serialno":"201808311626300877NP",
 "custno":"1604578759",
 "apkind":"922",
 "subapkind":"922001",
 "apdt":"20180516",
 "aptm":"093540",
 "workdate":"20180516",
 "tradeacco":"001035098604578762",
 "taaccountid":"475B0CB66D40432285",
 "tano":"47",
 "sharetype":"A",
 "accptmd":"1",
 "branchcode":"247000",
 "distributorcode":"247",
"extFields":{'rechargeFlag':'1'}
}
 Fri, 31 Aug 2018 16:26:30  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626300877NP';"]
 Fri, 31 Aug 2018 16:26:30  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"serialno":"201808311540580571Nt",'extFields':{"errCode":"0001", "errMsg":"交易失败", "tranSt":"F"}}
 Fri, 31 Aug 2018 16:26:30  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311540580571Nt' AND PAYST='F';"]
 Fri, 31 Aug 2018 16:26:30  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{
 "subamt":"3500",
 "paymodel":"05",
 "channel":"JX",
 "bankid":"205B0CF78550959969",
 "bankno":"970",
 "bankacco":"6222620110038594231",
 "serialno":"201808311626300364lS",
 "custno":"1604578759",
 "apkind":"922",
 "subapkind":"922001",
 "apdt":"20180516",
 "aptm":"093540",
 "workdate":"20180516",
 "tradeacco":"001035098604578762",
 "taaccountid":"475B0CB66D40432285",
 "tano":"47",
 "sharetype":"A",
 "accptmd":"1",
 "branchcode":"247000",
 "distributorcode":"247",
"extFields":{'rechargeFlag':'1'}
}
 Fri, 31 Aug 2018 16:26:30  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626300364lS';"]
 Fri, 31 Aug 2018 16:26:30  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"serialno":"201808311540580576Sj","isSend":"1",'extFields':{"errCode":"0000", "errMsg":"交易成功", "tranSt":"Y"}}
 Fri, 31 Aug 2018 16:26:30  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311540580576Sj' AND PAYST='Y';", "SELECT * from cts.cts_tradequtychg WHERE REFERNO='201808311540580576Sj' AND CHANGEQUTY='-3500';"]
 Fri, 31 Aug 2018 16:26:30  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{
 "subamt":"5000",
 "paymodel":"05",
 "channel":"JX",
 "bankid":"205B0CF78550959969",
 "bankno":"970",
 "bankacco":"6222620110038594231",
 "serialno":"201808311626300954TS",
 "custno":"1604578759",
 "apkind":"922",
 "subapkind":"922001",
 "apdt":"20180516",
 "aptm":"093540",
 "workdate":"20180516",
 "tradeacco":"001035098604578762",
 "taaccountid":"475B0CB66D40432285",
 "tano":"47",
 "sharetype":"A",
 "accptmd":"1",
 "branchcode":"247000",
 "distributorcode":"247",
"extFields":{'rechargeFlag':'1'}
}
 Fri, 31 Aug 2018 16:26:30  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626300954TS';"]
 Fri, 31 Aug 2018 16:26:30  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"serialno":"201808311540580106lv",'extFields':{"errCode":"0001", "errMsg":"交易失败", "tranSt":"F"}}
 Fri, 31 Aug 2018 16:26:30  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311540580106lv' AND PAYST='F';"]
 Fri, 31 Aug 2018 16:26:30  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{
 "subamt":"5000",
 "paymodel":"05",
 "channel":"JX",
 "bankid":"205B0CF78550959969",
 "bankno":"974",
 "bankacco":"6222620110038594231",
 "serialno":"201808311626300131QG",
 "custno":"1604578759",
 "apkind":"922",
 "subapkind":"922001",
 "apdt":"20180516",
 "aptm":"093540",
 "workdate":"20180516",
 "tradeacco":"001035098604578762",
 "taaccountid":"475B0CB66D40432285",
 "tano":"47",
 "sharetype":"A",
 "accptmd":"1",
 "branchcode":"247000",
 "distributorcode":"247",
"extFields":{'rechargeFlag':'1'}
}
 Fri, 31 Aug 2018 16:26:30  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626300131QG';"]
 Fri, 31 Aug 2018 16:26:30  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"serialno":"201808311540580154Mj","isSend":"1",'extFields':{"errCode":"0000", "errMsg":"交易成功", "tranSt":"Y"}}
 Fri, 31 Aug 2018 16:26:30  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311540580154Mj' AND PAYST='Y';", "SELECT * from cts.cts_tradequtychg WHERE REFERNO='201808311540580154Mj' AND CHANGEQUTY='-5000';"]
 Fri, 31 Aug 2018 16:26:30  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{
 "subamt":"5000",
 "paymodel":"05",
 "channel":"JX",
 "bankid":"205B0CF78550959969",
 "bankno":"974",
 "bankacco":"6222620110038594231",
 "serialno":"201808311626300386aW",
 "custno":"1604578759",
 "apkind":"922",
 "subapkind":"922001",
 "apdt":"20180516",
 "aptm":"093540",
 "workdate":"20180516",
 "tradeacco":"001035098604578762",
 "taaccountid":"475B0CB66D40432285",
 "tano":"47",
 "sharetype":"A",
 "accptmd":"1",
 "branchcode":"247000",
 "distributorcode":"247",
"extFields":{'rechargeFlag':'1'}
}
 Fri, 31 Aug 2018 16:26:30  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626300386aW';"]
 Fri, 31 Aug 2018 16:26:30  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"serialno":"20180831154058046Qb",'extFields':{"errCode":"0001", "errMsg":"交易失败", "tranSt":"F"}}
 Fri, 31 Aug 2018 16:26:30  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='20180831154058046Qb' AND PAYST='F';"]
 Fri, 31 Aug 2018 16:26:30  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{
 "subamt":"40000.12",
 "paymodel":"05",
 "channel":"JX",
 "bankid":"205B0CF78550959969",
 "bankno":"315",
 "bankacco":"6222620110038594231",
 "serialno":"201808311626300342Vz",
 "custno":"1604578759",
 "apkind":"922",
 "subapkind":"922001",
 "apdt":"20180516",
 "aptm":"093540",
 "workdate":"20180516",
 "tradeacco":"001035098604578762",
 "taaccountid":"475B0CB66D40432285",
 "tano":"47",
 "sharetype":"A",
 "accptmd":"1",
 "branchcode":"247000",
 "distributorcode":"247",
"extFields":{'rechargeFlag':'1'}
}
 Fri, 31 Aug 2018 16:26:30  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626300342Vz';"]
 Fri, 31 Aug 2018 16:26:30  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"serialno":"201808311540580869dj","isSend":"1",'extFields':{"errCode":"0000", "errMsg":"交易成功", "tranSt":"Y"}}
 Fri, 31 Aug 2018 16:26:30  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311540580869dj' AND PAYST='Y';", "SELECT * from cts.cts_tradequtychg WHERE REFERNO='201808311540580869dj' AND CHANGEQUTY='-40000.12';"]
 Fri, 31 Aug 2018 16:26:30  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{
 "subamt":"5000",
 "paymodel":"05",
 "channel":"JX",
 "bankid":"205B0CF78550959969",
 "bankno":"315",
 "bankacco":"6222620110038594231",
 "serialno":"201808311626300656ZG",
 "custno":"1604578759",
 "apkind":"922",
 "subapkind":"922001",
 "apdt":"20180516",
 "aptm":"093540",
 "workdate":"20180516",
 "tradeacco":"001035098604578762",
 "taaccountid":"475B0CB66D40432285",
 "tano":"47",
 "sharetype":"A",
 "accptmd":"1",
 "branchcode":"247000",
 "distributorcode":"247",
"extFields":{'rechargeFlag':'1'}
}
 Fri, 31 Aug 2018 16:26:30  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626300656ZG';"]
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"serialno":"20180831154058068Ng",'extFields':{"errCode":"0001", "errMsg":"交易失败", "tranSt":"F"}}
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='20180831154058068Ng' AND PAYST='F';"]
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{
 "subamt":"40￥2",
 "paymodel":"05",
 "channel":"JX",
 "bankid":"205AE16EA606342921",
 "bankno":"315",
 "bankacco":"6222620110038594231",
 "serialno":"201808311626310213Mo",
 "custno":"1538967652",
 "apkind":"922",
 "subapkind":"922001",
 "apdt":"20180501",
 "aptm":"093540",
 "workdate":"20180516",
 "tradeacco":"008395590573718304",
 "taaccountid":"475AF52F9665610507",
 "tano":"47",
 "sharetype":"A",
 "accptmd":"1",
 "branchcode":"247000",
 "distributorcode":"247","extFields":{'rechargeFlag':'1'}
}
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
""
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{
 "subamt":"1200",
 "paymodel":"05",
 "channel":"JX",
 "bankid":"205AE16EA606342921",
 "bankno":"315",
 "bankacco":"6222620110038594231",
 "serialno":"201808311626310776tY",
 "custno":"1538967654",
 "apkind":"922",
 "subapkind":"922001",
 "apdt":"20180501",
 "aptm":"093540",
 "workdate":"20180516",
 "tradeacco":"008395590573718304",
 "taaccountid":"475AF52F9665610507",
 "tano":"47",
 "sharetype":"A",
 "accptmd":"1",
 "branchcode":"247000",
 "distributorcode":"247","extFields":{'rechargeFlag':'1'}
}
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
""
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{
 "subamt":"1200",
 "paymodel":"05",
 "channel":"JX",
 "bankid":"205AE16EA606342921",
 "bankno":"315",
 "bankacco":"6222620110038594231",
 "serialno":"201808311626310517rW",
 "custno":"1538",
 "apkind":"922",
 "subapkind":"922001",
 "apdt":"20180501",
 "aptm":"093540",
 "workdate":"20180516",
 "tradeacco":"008395590573718304",
 "taaccountid":"475AF52F9665610507",
 "tano":"47",
 "sharetype":"A",
 "accptmd":"1",
 "branchcode":"247000",
 "distributorcode":"247","extFields":{'rechargeFlag':'1'}
}
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
""
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"subquty":"100",
        "bankid":"205AE16EA606342921",
        "paymodel":"04",
        "channel":"JX",       "returnUrl":"https://www5.91wutong.com/acco/yhcgTrade/drawCashResult.htm",
        "routeCode":"1",        "forgetPwdUrl":"https://www5.91wutong.com/user/account/passwordResetJx.htm",
        "serialno":"201808311626310235eZ",
        "custno":"1538967652",
        "apkind":"952",
        "subapkind":"952001",
        "apdt":"20180525",
        "aptm":"155807",
        "workdate":"20180525",
        "tradeacco":"000621718538967655",
 "taaccountid":"475AE141EE07252223",
        "tano":"47",
        "sharetype":"A",
        "accptmd":"1",
        "branchcode":"247000",
        "distributorcode":"247"}
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626310235eZ';"]
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"serialno":"201808311540580304Bh",'extFields':{"errCode":"0000", "errMsg":"交易成功", "tranSt":"Y"}}
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311540580304Bh' AND PAYST='Y';", "SELECT * from cts.cts_tradequtychg WHERE REFERNO='201808311540580304Bh'  AND CHANGEQUTY='1000';"]
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"subquty":"100",
        "bankid":"205AE16EA606342921",
        "paymodel":"04",
        "channel":"JX",       "returnUrl":"https://www5.91wutong.com/acco/yhcgTrade/drawCashResult.htm",
        "routeCode":"1",        "forgetPwdUrl":"https://www5.91wutong.com/user/account/passwordResetJx.htm",
        "serialno":"201808311626310558nt",
        "custno":"1538967652",
        "apkind":"952",
        "subapkind":"952001",
        "apdt":"20180525",
        "aptm":"155807",
        "workdate":"20180525",
        "tradeacco":"000621718538967655",
 "taaccountid":"475AE141EE07252223",
        "tano":"47",
        "sharetype":"A",
        "accptmd":"1",
        "branchcode":"247000",
        "distributorcode":"247"}
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626310558nt';"]
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"serialno":"201808311540580628FF",'extFields':{"errCode":"0001", "errMsg":"交易失败", "tranSt":"F"}}
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311540580628FF' AND PAYST='F';"]
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"subquty":"10 0",
        "bankid":"205B0CF78550959969",
        "paymodel":"04",
        "channel":"JX",       "returnUrl":"https://www5.91wutong.com/acco/yhcgTrade/drawCashResult.htm",
        "routeCode":"1",        "forgetPwdUrl":"https://www5.91wutong.com/user/account/passwordResetJx.htm",
        "serialno":"20180831162631026Tr",
        "custno":"1604578759",
        "apkind":"952",
        "subapkind":"952001",
        "apdt":"20180525",
        "aptm":"155807",
        "workdate":"20180525",
         "tradeacco":"001035098604578762",
        "taaccountid":"475B0CB66D40432285",
        "tano":"47",
        "sharetype":"A",
        "accptmd":"1",
        "branchcode":"247000",
        "distributorcode":"247"}
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='20180831162631026Tr';"]
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{ "subquty":"1%00",
        "bankid":"205B0CF78550959969",
        "paymodel":"04",
        "channel":"JX",
        "returnUrl":"https://www5.91wutong.com/acco/yhcgTrade/drawCashResult.htm",
        "routeCode":"1",
        "forgetPwdUrl":"https://www5.91wutong.com/user/account/passwordResetJx.htm",
        "serialno":"20180831162631062zu",
        "custno":"1604578759",
        "apkind":"952",
        "subapkind":"952001",
        "apdt":"20180525",
        "aptm":"155807",
        "workdate":"20180525",
        "tradeacco":"001035098604578762",
        "taaccountid":"475B0CB66D40432285",
        "tano":"47",
        "sharetype":"A",
        "accptmd":"1",
        "branchcode":"247000",
        "distributorcode":"247"}
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='20180831162631062zu';"]
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{ "subquty":"110000",
        "bankid":"205AF2D52899667599",
        "paymodel":"04",
        "channel":"JX",
        "returnUrl":"https://www5.91wutong.com/acco/yhcgTrade/drawCashResult.htm",
        "routeCode":"1",
        "forgetPwdUrl":"https://www5.91wutong.com/user/account/passwordResetJx.htm",
        "serialno":"201808311626310781ww",
        "custno":"1538965327",
        "apkind":"952",
        "subapkind":"952001",
        "apdt":"20180525",
        "aptm":"215807",
        "workdate":"20180525",
       "tradeacco":"000621718538965330",
        "taaccountid":"475AD0470C45319298",
        "tano":"47",
        "sharetype":"A",
        "accptmd":"1",
        "branchcode":"247000",
        "distributorcode":"247"}
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626310781ww';"]
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{ "subquty":"10.123",
        "bankid":"205AF2D52899667599",
        "paymodel":"04",
        "channel":"JX",
        "returnUrl":"https://www5.91wutong.com/acco/yhcgTrade/drawCashResult.htm",
        "routeCode":"1",
        "forgetPwdUrl":"https://www5.91wutong.com/user/account/passwordResetJx.htm",
        "serialno":"201808311626310362FM",
        "custno":"1538965327123",
        "apkind":"952",
        "subapkind":"952001",
        "apdt":"20180525",
        "aptm":"215807",
        "workdate":"20180525",
        "tradeacco":"000621718538965330",
        "taaccountid":"475AD0470C45319298",
        "tano":"47",
        "sharetype":"A",
        "accptmd":"1",
        "branchcode":"247000",
        "distributorcode":"247"}
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626310362FM';"]
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"subquty":"10",
        "bankid":"205AF2D52899667599",
        "paymodel":"04",
        "channel":"JX",
        "returnUrl":"https://www5.91wutong.com/acco/yhcgTrade/drawCashResult.htm",
        "routeCode":"1",
        "forgetPwdUrl":"https://www5.91wutong.com/user/account/passwordResetJx.htm",
        "serialno":"201808311626310525zV",
        "custno":"1538967652",
        "apkind":"924",
        "subapkind":"924001",
        "apdt":"20180525",
        "aptm":"215807",
        "workdate":"20180525",
        "tradeacco":"000621718538965330",
        "taaccountid":"475AD0470C45319298",
        "tano":"47",
        "sharetype":"A",
        "accptmd":"1",
        "branchcode":"247000",
        "distributorcode":"247"}
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626310525zV';"]
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{ "subquty":"10",
        "bankid":"205AE16EA606342921",
        "paymodel":"04",
        "channel":"JX",
        "returnUrl":"https://www5.91wutong.com/acco/yhcgTrade/drawCashResult.htm",
        "routeCode":"1",
        "forgetPwdUrl":"https://www5.91wutong.com/user/account/passwordResetJx.htm",
        "serialno":"201808311626310557if",
        "custno":"1538967652",
        "apkind":"924",
        "subapkind":"924001",
        "apdt":"20180525",
        "aptm":"215807",
        "workdate":"20180525",
       "tradeacco":"000621718538967655",
 "taaccountid":"475AE141EE07252223",
        "tano":"47",
        "sharetype":"A",
        "accptmd":"1",
        "branchcode":"247000",
        "distributorcode":"247"}
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626310557if';"]
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"serialno":"20180831154058033QG",'extFields':{"errCode":"0000", "errMsg":"交易成功", "tranSt":"Y"}}
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='20180831154058033QG' AND PAYST='Y';", "SELECT * from cts.cts_tradequtychg WHERE REFERNO='20180831154058033QG' AND CHANGEQUTY='10';"]
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{ "subquty":"10",
        "bankid":"205AE16EA606342921",
        "paymodel":"04",
        "channel":"JX",
        "returnUrl":"https://www5.91wutong.com/acco/yhcgTrade/drawCashResult.htm",
        "routeCode":"1",
        "forgetPwdUrl":"https://www5.91wutong.com/user/account/passwordResetJx.htm",
        "serialno":"201808311626310953At",
        "custno":"1538967652",
        "apkind":"924",
        "subapkind":"924001",
        "apdt":"20180525",
        "aptm":"215807",
        "workdate":"20180525",
       "tradeacco":"000621718538967655",
 "taaccountid":"475AE141EE07252223",
        "tano":"47",
        "sharetype":"A",
        "accptmd":"1",
        "branchcode":"247000",
        "distributorcode":"247"}
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626310953At';"]
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"serialno":"201808311540580624uo",'extFields':{"errCode":"0001", "errMsg":"交易失败", "tranSt":"F"}}
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311540580624uo' AND PAYST='F';"]
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"subquty":"10",
        "bankid":"205AE16EA606342921",
        "paymodel":"04",
        "channel":"JX",
        "returnUrl":"https://www5.91wutong.com/acco/yhcgTrade/drawCashResult.htm",
        "routeCode":"1",
        "forgetPwdUrl":"https://www5.91wutong.com/user/account/passwordResetJx.htm",
        "serialno":"201808311626310383Gc",
        "custno":"1538967652",
        "apkind":"943",
        "subapkind":"943001",
        "apdt":"20180525",
        "aptm":"215807",
        "workdate":"20180525",
         "tradeacco":"000621718538967655",
 "taaccountid":"475AE141EE07252223",
        "tano":"47",
        "sharetype":"A",
        "accptmd":"3",
        "branchcode":"247000",
        "distributorcode":"247"}
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626310383Gc';"]
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{ "subquty":"10",
        "bankid":"205AE16EA606342921",
        "paymodel":"04",
        "channel":"JX",
        "returnUrl":"https://www5.91wutong.com/acco/yhcgTrade/drawCashResult.htm",
        "routeCode":"1",
        "forgetPwdUrl":"https://www5.91wutong.com/user/account/passwordResetJx.htm",
        "serialno":"201808311626310468ex",
        "custno":"1538967652",
        "apkind":"924",
        "subapkind":"924001",
        "apdt":"20180525",
        "aptm":"215807",
        "workdate":"20180525",
   "tradeacco":"000621718538967655",
 "taaccountid":"475AE141EE07252223",
        "tano":"47",
        "sharetype":"A",
        "accptmd":"2",
        "branchcode":"247000",
        "distributorcode":"247"}
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626310468ex';"]
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"serialno":"201808311540580221kM",'extFields':{"errCode":"0000", "errMsg":"交易成功", "tranSt":"Y"}}
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311540580221kM' AND PAYST='Y';", "SELECT * from cts.cts_tradequtychg WHERE REFERNO='201808311540580221kM' AND CHANGEQUTY='10';"]
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{ "subquty":"10",
        "bankid":"205AE16EA606342921",
        "paymodel":"04",
        "channel":"JX",
        "returnUrl":"https://www5.91wutong.com/acco/yhcgTrade/drawCashResult.htm",
        "routeCode":"1",
        "forgetPwdUrl":"https://www5.91wutong.com/user/account/passwordResetJx.htm",
        "serialno":"2018083116263107Rs",
        "custno":"1538967652",
        "apkind":"924",
        "subapkind":"924001",
        "apdt":"20180525",
        "aptm":"215807",
        "workdate":"20180525",
     "tradeacco":"000621718538967655",
 "taaccountid":"475AE141EE07252223",
        "tano":"47",
        "sharetype":"A",
        "accptmd":"1",
        "branchcode":"247000",
        "distributorcode":"247"}
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='2018083116263107Rs';"]
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"serialno":"201808311540580357hb",'extFields':{"errCode":"0001", "errMsg":"交易失败", "tranSt":"F"}}
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311540580357hb' AND PAYST='F';"]
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"subquty":"10",
        "bankid":"205AE16EA606342921",
        "paymodel":"04",
        "channel":"JX",
        "returnUrl":"https://www5.91wutong.com/acco/yhcgTrade/drawCashResult.htm",
        "routeCode":"1",
        "forgetPwdUrl":"https://www5.91wutong.com/user/account/passwordResetJx.htm",
        "serialno":"201808311626310848PS",
        "custno":"1538967652",
        "apkind":"924",
        "subapkind":"924001",
        "apdt":"20180525",
        "aptm":"215807",
        "workdate":"20180525",
       "tradeacco":"000621718538967655",
 "taaccountid":"475AE141EE07252223",
        "tano":"47",
        "sharetype":"A",
        "accptmd":"3",
        "branchcode":"247000",
        "distributorcode":"247"}
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626310848PS';"]
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"serialno":"201808311540580668Fz",'extFields':{"errCode":"0000", "errMsg":"交易成功", "tranSt":"Y"}}
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311540580668Fz' AND PAYST='Y';", "SELECT * from cts.cts_tradequtychg WHERE REFERNO='201808311540580668Fz' AND CHANGEQUTY='10';"]
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"subquty":"10",
        "bankid":"205AE16EA606342921",
        "paymodel":"04",
        "channel":"JX",
        "returnUrl":"https://www5.91wutong.com/acco/yhcgTrade/drawCashResult.htm",
        "routeCode":"1",
        "forgetPwdUrl":"https://www5.91wutong.com/user/account/passwordResetJx.htm",
        "serialno":"201808311626310667qt",
        "custno":"1538967652",
        "apkind":"924",
        "subapkind":"924001",
        "apdt":"20180525",
        "aptm":"215807",
        "workdate":"20180525",
      "tradeacco":"000621718538967655",
 "taaccountid":"475AE141EE07252223",
        "tano":"47",
        "sharetype":"A",
        "accptmd":"3",
        "branchcode":"247000",
        "distributorcode":"247"}
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626310667qt';"]
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"serialno":"201808311540580220eR",'extFields':{"errCode":"0001", "errMsg":"交易失败", "tranSt":"F"}}
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311540580220eR' AND PAYST='F';"]
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"subquty":"10",
        "bankid":"205AE16EA606342921",
        "paymodel":"04",
        "channel":"JX",
        "returnUrl":"https://www5.91wutong.com/acco/yhcgTrade/drawCashResult.htm",
        "routeCode":"2",
        "cardBankCnaps":"308584001024",
        "forgetPwdUrl":"https://www5.91wutong.com/user/account/passwordResetJx.htm",
        "serialno":"201808311626310483NA",
        "custno":"1538967652",
        "apkind":"924",
        "subapkind":"924001",
        "apdt":"20180525",
        "aptm":"215807",
        "workdate":"20180525",
      "tradeacco":"000621718538967655",
 "taaccountid":"475AE141EE07252223",
        "tano":"47",
        "sharetype":"A",
        "accptmd":"3",
        "branchcode":"247000",
        "distributorcode":"247"}
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626310483NA';"]
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"serialno":"201808311540580239jZ",'extFields':{"errCode":"0000", "errMsg":"交易成功", "tranSt":"Y"}}
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311540580239jZ' AND PAYST='Y';", "SELECT * from cts.cts_tradequtychg WHERE REFERNO='201808311540580239jZ' AND CHANGEQUTY='10';"]
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"subquty":"10",
        "bankid":"205AE16EA606342921",
        "paymodel":"04",
        "channel":"JX",
        "returnUrl":"https://www5.91wutong.com/acco/yhcgTrade/drawCashResult.htm",
        "routeCode":"2",
        "cardBankCnaps":"308584001024",
        "forgetPwdUrl":"https://www5.91wutong.com/user/account/passwordResetJx.htm",
        "serialno":"201808311626310773CM",
        "custno":"1538967652",
        "apkind":"924",
        "subapkind":"924001",
        "apdt":"20180525",
        "aptm":"215807",
        "workdate":"20180525",
       "tradeacco":"000621718538967655",
 "taaccountid":"475AE141EE07252223",
        "tano":"47",
        "sharetype":"A",
        "accptmd":"3",
        "branchcode":"247000",
        "distributorcode":"247"}
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626310773CM';"]
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"serialno":"20180831154058042fD",'extFields':{"errCode":"0001", "errMsg":"交易失败", "tranSt":"F"}}
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='20180831154058042fD' AND PAYST='F';"]
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"subquty":"10",
        "bankid":"205AE16EA606342921",
        "paymodel":"05",
        "channel":"JX",
        "returnUrl":"https://www5.91wutong.com/acco/yhcgTrade/drawCashResult.htm",
        "routeCode":"2",
        "cardBankCnaps":"308584001024",
        "forgetPwdUrl":"https://www5.91wutong.com/user/account/passwordResetJx.htm",
        "serialno":"201808311626310982eG",
        "custno":"1538967652",
        "apkind":"924",
        "subapkind":"924001",
        "apdt":"20180525",
        "aptm":"215807",
        "workdate":"20180525",
        "tradeacco":"000621718538967655",
 "taaccountid":"475AE141EE07252223",
        "tano":"47",
        "sharetype":"A",
        "accptmd":"3",
        "branchcode":"247000",
        "distributorcode":"247"}
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626310982eG';"]
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"subquty":"10",
        "bankid":"205AE16EA606342921",
        "paymodel":"05",
        "channel":"JX",
        "returnUrl":"",
        "routeCode":"2",
        "cardBankCnaps":"308584001024",
        "forgetPwdUrl":"https://www5.91wutong.com/user/account/passwordResetJx.htm",
        "serialno":"201808311626310171Xf",
        "custno":"1538967652",
        "apkind":"924",
        "subapkind":"924001",
        "apdt":"20180525",
        "aptm":"215807",
        "workdate":"20180525",
       "tradeacco":"000621718538967655",
 "taaccountid":"475AE141EE07252223",
        "tano":"47",
        "sharetype":"A",
        "accptmd":"3",
        "branchcode":"247000",
        "distributorcode":"247"}
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626310171Xf';"]
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"subquty":"10",
        "bankid":"205AE16EA606342921",
        "paymodel":"04",
        "channel":"JX",
        "returnUrl":"https://www5.91wutong.com/acco/yhcgTrade/drawCashResult.htm",
        "routeCode":"2",
        "cardBankCnaps":"308584001024",
        "forgetPwdUrl":"",
        "serialno":"20180831162631056oM",
        "custno":"1538967652",
        "apkind":"924",
        "subapkind":"924001",
        "apdt":"20180525",
        "aptm":"215807",
        "workdate":"20180525",
       "tradeacco":"000621718538967655",
 "taaccountid":"475AE141EE07252223",
        "tano":"47",
        "sharetype":"A",
        "accptmd":"3",
        "branchcode":"247000",
        "distributorcode":"247"}
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='20180831162631056oM';"]
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{
"periodic":"false",
"subamt":"100.00",
"honourdate":"20180720",
"baseyield":"0.0828",
"yield":"0.0828",
"addyield":"0",
"interestbegindate":"20180710",
"interestenddate":"20180719",
"serialno":"20180831162631080Ed",
"custno":"1538943691",
"apkind":"012","subapkind":"012001",
"apdt":"20180710",
"aptm":"102056",
"workdate":"20180710",
"tradeacco":"000621718538943694",
"taaccountid":"475A7D638769350988",
"tano":"47","productid":"732822",
"sharetype":"A","accptmd":"1",
"branchcode":"247000","distributorcode":"247"}
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='20180831162631080Ed';"]
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
""
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='20180831154058095Hv' AND APPLYST='Y'AND TRANSST='Y' AND PAYST='Y';","SELECT * from cts.cts_tradequtychg WHERE REFERNO='20180831154058095Hv' AND PRODUCTID='732822'AND CHANGEQUTY='-100';"]
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{
"periodic":"false",
"subamt":"10000.00",
"honourdate":"20180720",
"baseyield":"0.0828",
"yield":"0.0828",
"addyield":"0",
"interestbegindate":"20180710",
"interestenddate":"20180719",
"serialno":"201808311626310437ki",
"custno":"1538943529",
"apkind":"012","subapkind":"012001",
"apdt":"20180710",
"aptm":"102056",
"workdate":"20180710",
"tradeacco":"000621718538943532",
"taaccountid":"475A7D11AC36446661",
"tano":"47","productid":"732822",
"sharetype":"A","accptmd":"1",
"branchcode":"247000","distributorcode":"247"}
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626310437ki' AND APPLYST='F';"]
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{
"periodic":"false",
"subamt":"100000",
"honourdate":"20180720",
"baseyield":"0.0828",
"yield":"0.0828",
"addyield":"0",
"interestbegindate":"20180710",
"interestenddate":"20180719",
"serialno":"201808311626310669Qo",
"custno":"1538943559",
"apkind":"012","subapkind":"012001",
"apdt":"20180710",
"aptm":"102056",
"workdate":"20180710",
"tradeacco":"000621718538943562",
"taaccountid":"475A7D148427411438",
"tano":"47","productid":"732821",
"sharetype":"A","accptmd":"1",
"branchcode":"247000","distributorcode":"247"}
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626310669Qo' AND APPLYST='F';"]
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{
"periodic":"false",
"subamt":"10 0",
"honourdate":"20180720",
"baseyield":"0.0828",
"yield":"0.0828",
"addyield":"0",
"interestbegindate":"20180710",
"interestenddate":"20180719",
"serialno":"201808311626310723xw",
"custno":"1538943691",
"apkind":"012","subapkind":"012001",
"apdt":"20180710",
"aptm":"102056",
"workdate":"20180710",
"tradeacco":"000621718538943694",
"taaccountid":"475A7D638769350988",
"tano":"47","productid":"732822",
"sharetype":"A","accptmd":"1",
"branchcode":"247000","distributorcode":"247"}
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626310723xw' AND APPLYST='F';"]
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{
"periodic":"false",
"subamt":"10%0.00",
"honourdate":"20180720",
"baseyield":"0.0828",
"yield":"0.0828",
"addyield":"0",
"interestbegindate":"20180710",
"interestenddate":"20180719",
"serialno":"201808311626310268Jy",
"custno":"1538943691",
"apkind":"012","subapkind":"012001",
"apdt":"20180710",
"aptm":"102056",
"workdate":"20180710",
"tradeacco":"000621718538943694",
"taaccountid":"475A7D638769350988",
"tano":"47","productid":"732822",
"sharetype":"A","accptmd":"1",
"branchcode":"247000","distributorcode":"247"}
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626310268Jy' AND APPLYST='F';"]
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"periodic":"false",
"subamt":"10",
"honourdate":"20180720",
"baseyield":"0.0828",
"yield":"0.0838",
"addyield":"0",
"interestbegindate":"20180710",
"interestenddate":"20180719",
"serialno":"201808311626310797vx",
"custno":"1538943691",
"apkind":"012","subapkind":"012001",
"apdt":"20180710",
"aptm":"134256",
"workdate":"20180710",
"tradeacco":"000621718538943694",
"taaccountid":"475A7D638769350988",
"tano":"47","productid":"732822",
"sharetype":"A","accptmd":"1",
"branchcode":"247000","distributorcode":"247"}
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626310797vx';"]
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
""
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311540580810SM' AND APPLYST='Y'AND TRANSST='Y' AND PAYST='Y';","SELECT * from cts.cts_tradequtychg WHERE REFERNO='201808311540580810SM' AND PRODUCTID='732822'AND CHANGEQUTY='-10';"]
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"periodic":"false",
"subamt":"100",
"honourdate":"20180720",
"baseyield":"0.0850",
"yield":"0.0070",
"addyield":"0.4",
"exyield":"0",
"exActivityFlag":"1",
"couponid":"20180710153894369120709111860",
"interestbegindate":"20180710",
"interestenddate":"20180719",
"serialno":"201808311626310968uB",
"custno":"1538943691",
"apkind":"012","subapkind":"012001",
"apdt":"20180710",
"aptm":"134256",
"workdate":"20180710",
"tradeacco":"000621718538943694",
"taaccountid":"475A7D638769350988",
"tano":"47","productid":"732908",
"sharetype":"A","accptmd":"1",
"branchcode":"247000","distributorcode":"247"}
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626310968uB';"]
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
""
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311540580557Nu' AND APPLYST='Y'AND TRANSST='Y' AND PAYST='Y';","SELECT * from cts.cts_tradequtychg WHERE REFERNO='201808311540580557Nu' AND PRODUCTID='732908'AND CHANGEQUTY='-100';"]
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"periodic":"false",
        "subamt":"1000.00",
        "couponid":"5B4C07350077bcEA",
        "honourdate":"20190615",
        "baseyield":"0.0828",
        "yield":"0.0828",
        "addyield":"0.0000",
        "interestbegindate":"20180717",
        "interestenddate":"20190614",
        "exyield":"0",
        "exActivityFlag":"1",
        "serialno":"201808311626310688CT",
        "custno":"1538943691",
        "apkind":"012",
        "subapkind":"012001",
        "apdt":"20180717",
        "aptm":"114840",
        "workdate":"20180717",
        "tradeacco":"000621718538943694",
        "taaccountid":"475A7D638769350988",
        "tano":"47",
        "productid":"732818",
        "sharetype":"A",
        "accptmd":"1",
        "branchcode":"247000",
        "distributorcode":"247"}
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626310688CT';"]
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
""
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311540580537Cf' AND APPLYST='Y'AND TRANSST='Y' AND PAYST='Y';","SELECT * from cts.cts_traderequest WHERE SUBAPKIND='922919' AND REFERNO='201808311540580537Cf';"]
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"periodic":"false",
"subamt":"100",
"honourdate":"20180720",
"baseyield":"0.0850",
"yield":"0.0070",
"addyield":"0.4",
"exyield":"0",
"exActivityFlag":"1",
"couponid":"20180710153894369120709111860",
"interestbegindate":"20180710",
"interestenddate":"20180719",
"serialno":"201808311626310780Wy",
"custno":"1538943691",
"apkind":"012","subapkind":"012001",
"apdt":"20180710",
"aptm":"134256",
"workdate":"20180710",
"tradeacco":"000621718538943694",
"taaccountid":"475A7D638769350988",
"tano":"47","productid":"732908",
"sharetype":"A","accptmd":"1",
"branchcode":"247000","distributorcode":"247"}
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626310780Wy';"]
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
""
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311540580306LD' AND APPLYST='Y'AND TRANSST='Y' AND PAYST='Y';","SELECT * from cts.cts_tradequtychg WHERE REFERNO='201808311540580306LD' AND PRODUCTID='732908'AND CHANGEQUTY='-100';"]
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{
"subamt":"10",
"honourdate":"20180604",
"baseyield":"0.0828",
"yield":"0.0238",
"addyield":"0",
"interestbegindate":"20180525",
"interestenddate":"20180603",
"periodic":"true",
"cycleDay":"20",
"transferDay":"2",
"serialno":"201808311626310485kP",
"custno":"1604568937",
"apkind":"012","subapkind":"012001",
"apdt":"20180525",
"aptm":"134256",
"workdate":"20180525",
"tradeacco":"001035098604568940",
"taaccountid":"475AFA3D7B64069928",
"tano":"47","productid":"8802",
"sharetype":"A","accptmd":"1",
"branchcode":"247000","distributorcode":"247"}
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626310485kP';"]
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
""
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311540580882xy' AND APPLYST='Y'AND TRANSST='Y' AND PAYST='Y';","SELECT * from cts.cts_tradequtychg WHERE REFERNO='201808311540580882xy' AND PRODUCTID='8802'AND CHANGEQUTY='-10';"]
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{
"subamt":"10",
"honourdate":"20180604",
"baseyield":"0.0828",
"yield":"0.0238",
"addyield":"0",
"interestbegindate":"20180525",
"interestenddate":"20180603",
"periodic":"true",
"cycleDay":"20",
"transferDay":"2",
"serialno":"20180831162631082rQ",
"custno":"1604568937",
"apkind":"012","subapkind":"012001",
"apdt":"20180525",
"aptm":"134256",
"workdate":"20180525",
"tradeacco":"001035098604568940",
"taaccountid":"475AFA3D7B64069928",
"tano":"47","productid":"8901",
"sharetype":"A","accptmd":"1",
"branchcode":"247000","distributorcode":"247"}
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='20180831162631082rQ';"]
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
""
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311540580550PC' AND APPLYST='Y'AND TRANSST='Y' AND PAYST='Y';","SELECT * from cts.cts_tradequtychg WHERE REFERNO='201808311540580550PC' AND PRODUCTID='8901'AND CHANGEQUTY='-10';"]
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{
"subamt":"10",
"honourdate":"20180604",
"baseyield":"0.0828",
"yield":"0.0238",
"addyield":"0",
"interestbegindate":"20180525",
"interestenddate":"20180603",
"periodic":"true",
"cycleDay":"20",
"transferDay":"2",
"serialno":"20180831162631045Ss",
"custno":"1604568937",
"apkind":"012","subapkind":"012001",
"apdt":"20180525",
"aptm":"134256",
"workdate":"20180525",
"tradeacco":"001035098604568940",
"taaccountid":"475AFA3D7B64069928",
"tano":"47","productid":"8903",
"sharetype":"A","accptmd":"1",
"branchcode":"247000","distributorcode":"247"}
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='20180831162631045Ss';"]
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
""
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311540580691Mg' AND APPLYST='Y'AND TRANSST='Y' AND PAYST='Y';","SELECT * from cts.cts_tradequtychg WHERE REFERNO='201808311540580691Mg' AND PRODUCTID='8903'AND CHANGEQUTY='-10';"]
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{
"subamt":"10",
"honourdate":"20180604",
"baseyield":"0.0828",
"yield":"0.0238",
"addyield":"0",
"interestbegindate":"20180525",
"interestenddate":"20180603",
"periodic":"true",
"cycleDay":"20",
"transferDay":"2",
"serialno":"20180831162631063dB",
"custno":"1604568937",
"apkind":"012","subapkind":"012001",
"apdt":"20180525",
"aptm":"134256",
"workdate":"20180525",
"tradeacco":"001035098604568940",
"taaccountid":"475AFA3D7B64069928",
"tano":"47","productid":"8904",
"sharetype":"A","accptmd":"1",
"branchcode":"247000","distributorcode":"247"}
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='20180831162631063dB';"]
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
""
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311540580513JD' AND APPLYST='Y'AND TRANSST='Y' AND PAYST='Y';","SELECT * from cts.cts_tradequtychg WHERE REFERNO='201808311540580513JD' AND PRODUCTID='8904'AND CHANGEQUTY='-10';"]
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{
"subamt":"10",
"honourdate":"20180604",
"baseyield":"0.0828",
"yield":"0.0238",
"addyield":"0",
"interestbegindate":"20180525",
"interestenddate":"20180603",
"periodic":"true",
"cycleDay":"20",
"transferDay":"2",
"serialno":"201808311626310870zF",
"custno":"1538967652ddddd",
"apkind":"012","subapkind":"012001",
"apdt":"20180525",
"aptm":"134256",
"workdate":"20180525",
"tradeacco":"001035098604568940",
"taaccountid":"475AFA3D7B64069928",
"tano":"47","productid":"732681",
"sharetype":"A","accptmd":"1",
"branchcode":"247000","distributorcode":"247"}
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626310870zF';"]
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{
"subamt":"10",
"honourdate":"20180604",
"baseyield":"0.0828",
"yield":"0.0238",
"addyield":"0",
"interestbegindate":"20180525",
"interestenddate":"20180603",
"serialno":"201808311626310287Af",
"custno":"1604568937",
"apkind":"012","subapkind":"012001",
"apdt":"20180525",
"aptm":"134256",
"workdate":"20180525",
"tradeacco":"001035098604568940",
"taaccountid":"475AFA3D7B64069928",
"tano":"47","productid":"732681123",
"sharetype":"A","accptmd":"1",
"branchcode":"247000","distributorcode":"247"}
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626310287Af';"]
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{
"subamt":"10",
"honourdate":"20180604",
"baseyield":"0.0828",
"yield":"0.0238",
"addyield":"0",
"interestbegindate":"20180525",
"interestenddate":"20180603",
"serialno":"201808311626310229pi",
"custno":"1538967652",
"apkind":"012","subapkind":"012001",
"apdt":"20180525",
"aptm":"134256",
"workdate":"20180525",
"tradeacco":"000621718538967655",
"taaccountid":"475AE141EE07252223",
"tano":"47","productid":"732822",
"sharetype":"A","accptmd":"2",
"branchcode":"247000","distributorcode":"247"}
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626310229pi';"]
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
""
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311540580981Dk' AND APPLYST='Y'AND TRANSST='Y' AND PAYST='Y';","SELECT * from cts.cts_tradequtychg WHERE REFERNO='201808311540580981Dk' AND PRODUCTID='732822'AND CHANGEQUTY='-10';"]
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{
"subamt":"10",
"honourdate":"20180604",
"baseyield":"0.0828",
"yield":"0.0238",
"addyield":"0",
"interestbegindate":"20180525",
"interestenddate":"20180603",
"serialno":"201808311626310632cL",
"custno":"1538967652",
"apkind":"012","subapkind":"012001",
"apdt":"20180525",
"aptm":"134256",
"workdate":"20180525",
"tradeacco":"000621718538967655",
"taaccountid":"475AE141EE07252223",
"tano":"47","productid":"732681",
"sharetype":"A","accptmd":"3",
"branchcode":"247000","distributorcode":"247"}
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626310632cL';"]
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
""
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311540580362Hb' AND APPLYST='Y'AND TRANSST='Y' AND PAYST='Y';","SELECT * from cts.cts_tradequtychg WHERE REFERNO='201808311540580362Hb' AND PRODUCTID='732681'AND CHANGEQUTY='-10';"]
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"refercapno":"5AE02D4E13F7bc16",
        "reemFlag":"0",
        "selltype":1,
        "periodic":"true",
        "mixProd":"true",
        "bigVCustno":"1597219229",
        "honourFlag":"1",
        "newFlag":"0",
        "partPayment":"false",
        "subquty":"100.00",
        "feetp":"07",
        "feemode":"1",
        "feevalue":"0.0",
        "serialno":"201808311626310111Vm",
        "custno":"1538943691",
        "apkind":"014",
        "subapkind":"014001",
        "apdt":"20180831",
        "aptm":"113344",
        "workdate":"20180831",
        "tradeacco":"000621718538943694",
        "taaccountid":"475A7D638769350988",
        "tano":"47",
        "productid":"8903",
        "sharetype":"A",
        "accptmd":"1",
        "branchcode":"247000",
        "distributorcode":"247"}
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626310111Vm';"]
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
""
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626310111Vm';"]
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"serialno":"201808311540580226JT","isSend":"1",'extFields':{"errCode":"0000", "errMsg":"交易成功", "tranSt":"Y"}}
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311540580226JT' AND APPLYST='Y'AND TRANSST='Y' AND PAYST='Y';","SELECT * from cts.cts_tradequtychg WHERE REFERNO='201808311540580226JT' AND PRODUCTID='9999'AND CHANGEQUTY='100';"]
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"refercapno":"5AE02D4E13F7bc16",
        "reemFlag":"0",
        "selltype":1,
        "periodic":"true",
        "mixProd":"true",
        "bigVCustno":"1597219229",
        "honourFlag":"1",
        "newFlag":"0",
        "partPayment":"false",
        "subquty":"100.00",
        "feetp":"07",
        "feemode":"1",
        "feevalue":"0.0",
        "serialno":"201808311626310585BG",
        "custno":"1538943691",
        "apkind":"014",
        "subapkind":"014001",
        "apdt":"20180831",
        "aptm":"113344",
        "workdate":"20180831",
        "tradeacco":"000621718538943694",
        "taaccountid":"475A7D638769350988",
        "tano":"47",
        "productid":"8903",
        "sharetype":"A",
        "accptmd":"1",
        "branchcode":"247000",
        "distributorcode":"247"}
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626310585BG';"]
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
""
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626310585BG';"]
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"serialno":"201808311540580746wT",'extFields':{"errCode":"0001", "errMsg":"交易失败", "tranSt":"F"}}
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311540580746wT' AND APPLYST='Y'AND TRANSST='Y' AND PAYST='Y';","SELECT * from cts.cts_tradequtychg WHERE REFERNO='201808311540580746wT' AND PRODUCTID='8903'AND CHANGEQUTY='100';"]
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"refercapno":"5B06227E029Dbc36",
        "reemFlag":"1",
        "selltype":1,
        "periodic":"true",
        "mixProd":"true",
        "bigVCustno":"1597219229",
        "honourFlag":"1",
        "newFlag":"0",
        "partPayment":"false",
        "subquty":"100.00",
        "feetp":"07",
        "feemode":"1",
        "feevalue":"0.01",
        "serialno":"201808311626310945Iz",
        "custno":"1538943691",
        "apkind":"014",
        "subapkind":"014001",
        "apdt":"20180722",
        "aptm":"113344",
        "workdate":"20180722",
        "tradeacco":"000621718538943694",
        "taaccountid":"475A7D638769350988",
        "tano":"47",
        "productid":"8903",
        "sharetype":"A",
        "accptmd":"1",
        "branchcode":"247000",
        "distributorcode":"247"}
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626310945Iz';"]
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
""
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626310945Iz';"]
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"serialno":"201808311540580795yN","isSend":"1",'extFields':{"errCode":"0000", "errMsg":"交易成功", "tranSt":"Y"}}
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311540580795yN' AND APPLYST='Y'AND TRANSST='Y' AND PAYST='Y';","SELECT * from cts.cts_tradequtychg WHERE REFERNO='201808311540580795yN' AND PRODUCTID='9999'AND CHANGEQUTY='99';"]
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"refercapno":"5B06227E029Dbc36",
        "reemFlag":"1",
        "selltype":1,
        "periodic":"true",
        "mixProd":"true",
        "bigVCustno":"1597219229",
        "honourFlag":"1",
        "newFlag":"0",
        "partPayment":"false",
        "subquty":"100.00",
        "feetp":"07",
        "feemode":"1",
        "feevalue":"0.01",
        "serialno":"201808311626310627pz",
        "custno":"1538943691",
        "apkind":"014",
        "subapkind":"014001",
        "apdt":"20180722",
        "aptm":"113344",
        "workdate":"20180722",
        "tradeacco":"000621718538943694",
        "taaccountid":"475A7D638769350988",
        "tano":"47",
        "productid":"8903",
        "sharetype":"A",
        "accptmd":"1",
        "branchcode":"247000",
        "distributorcode":"247"}
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626310627pz';"]
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
""
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626310627pz';"]
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"serialno":"201808311540580288cL",'extFields':{"errCode":"0001", "errMsg":"交易失败", "tranSt":"F"}}
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311540580288cL' AND APPLYST='Y'AND TRANSST='Y' AND PAYST='Y';","SELECT * from cts.cts_tradequtychg WHERE REFERNO='201808311540580288cL' AND PRODUCTID='8903'AND CHANGEQUTY='100';"]
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"refercapno":"59A65428006Cbc64",
        "reemFlag":"0",
        "selltype":1,
        "periodic":"true",
        "mixProd":"true",
        "bigVCustno":"1503257540",
        "honourFlag":"1",
        "newFlag":"0",
        "partPayment":"true",
        "subquty":"10",
        "serialno":"201808311626310803AX",
        "custno":"1538747953",
        "apkind":"142",
        "subapkind":"142001",
        "apdt":"20180531",
        "aptm":"113242",
        "workdate":"20180531",
        "tradeacco":"000621718538747956",
        "taaccountid":"4759A61C6F83922488",
        "tano":"47",
        "productid":"8903",
        "sharetype":"A",
        "accptmd":"1",
        "branchcode":"247000",
        "distributorcode":"247"}
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311540580288cL' AND APPLYST='Y'AND TRANSST='Y' AND PAYST='Y';","SELECT * from cts.cts_tradequtychg WHERE REFERNO='201808311540580288cL' AND PRODUCTID='8903'AND CHANGEQUTY='100';"]
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{
"serialno":"201808311626310260au",
"subquty":"10.00",
"custno":"1538943691",
"apkind":"055",
"subapkind":"055001",
"apdt":"20180726",
"aptm":"161324",
"workdate":"20180726",
"sharetype":"A",
"accptmd":"1",
"branchcode":"247000",
"distributorcode":"247",
"referno":"5B5980AB002Cbc84",
"tradeacco":"000621718538943694",
"taaccountid":"475A7D638769350988",
"productid":"732937",
"tano":"47",
"feetp":"06",
"feemode":"1",
"feevalue":"0.002",
"baseyield":"0.0900",
"yield":"0.0900",
"addyield":"0.0000",
"exyield":"0.0000",
"interestbegindate":"20180726",
"interestenddate":"20181016",
"selltype":1}
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626310260au';"]
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{
"referno":"201808311540590457wa",
"subquty":"10",
"honourdate":"20181017",
"baseyield":"0.0900",
"yield":"0.0900",
"addyield":"0.0000",
"interestbegindate":"20180726",
"interestenddate":"20181016",
"exyield":"0",
"serialno":"201808311626310218Vg",
"custno":"1538943811",
"apkind":"056",
"subapkind":"056001",
"apdt":"20180726",
"aptm":"134031",
"workdate":"20180726",
"tradeacco":"000621718538943814",
"taaccountid":"475A7FB19598436383",
"tano":"47",
"productid":"732937",
"sharetype":"A",
"accptmd":"1",
"branchcode":"247000",
"distributorcode":"247"}
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626310218Vg';"]
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
""
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626310218Vg';"]
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"serialno":"201808311540590621FD","isSend":"1",'extFields':{"errCode":"0000", "errMsg":"交易成功", "tranSt":"Y"}}
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311540590621FD' AND APPLYST='Y'AND TRANSST='Y' AND PAYST='Y';","SELECT * from cts.cts_tradequtychg WHERE REFERNO='201808311540590621FD' AND PRODUCTID='9999'AND CHANGEQUTY='10';"]
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{
"serialno":"201808311626310974EZ",
"subquty":"100.00",
"custno":"1538943691",
"apkind":"055",
"subapkind":"055001",
"apdt":"20180726",
"aptm":"161324",
"workdate":"20180726",
"sharetype":"A",
"accptmd":"1",
"branchcode":"247000",
"distributorcode":"247",
"referno":"5B5980AB002Cbc84",
"tradeacco":"000621718538943694",
"taaccountid":"475A7D638769350988",
"productid":"732937",
"tano":"47",
"feetp":"06",
"feemode":"1",
"feevalue":"0.002",
"baseyield":"0.0900",
"yield":"0.0900",
"addyield":"0.0000",
"exyield":"0.0000",
"interestbegindate":"20180726",
"interestenddate":"20181016",
"selltype":1}
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626310974EZ';"]
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{
"referno":"201808311540590426go",
"subquty":"100",
"honourdate":"20181017",
"baseyield":"0.0900",
"yield":"0.0900",
"addyield":"0.0000",
"interestbegindate":"20180726",
"interestenddate":"20181016",
"exyield":"0",
"serialno":"20180831162631085nb",
"custno":"1538943811",
"apkind":"056",
"subapkind":"056001",
"apdt":"20180726",
"aptm":"134031",
"workdate":"20180726",
"tradeacco":"000621718538943814",
"taaccountid":"475A7FB19598436383",
"tano":"47",
"productid":"732937",
"sharetype":"A",
"accptmd":"1",
"branchcode":"247000",
"distributorcode":"247"}
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='20180831162631085nb';"]
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
""
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='20180831162631085nb';"]
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"serialno":"201808311540590299ZG",'extFields':{"errCode":"0001", "errMsg":"交易失败", "tranSt":"F"}}
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311540590299ZG' AND PAYST='F';"]
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{
"serialno":"201808311626310999Cb",
"subquty":"1 0.00",
"custno":"1538943691",
"apkind":"055",
"subapkind":"055001",
"apdt":"20180726",
"aptm":"161324",
"workdate":"20180726",
"sharetype":"A",
"accptmd":"1",
"branchcode":"247000",
"distributorcode":"247",
"referno":"5B5980AB002Cbc84",
"tradeacco":"000621718538943694",
"taaccountid":"475A7D638769350988",
"productid":"732937",
"tano":"47",
"feetp":"06",
"feemode":"1",
"feevalue":"0.002",
"baseyield":"0.0900",
"yield":"0.0900",
"addyield":"0.0000",
"exyield":"0.0000",
"interestbegindate":"20180726",
"interestenddate":"20181016",
"selltype":1}
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311540590299ZG' AND PAYST='F';"]
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{
"serialno":"201808311626310648ou",
"subquty":"1@0.00",
"custno":"1538943691",
"apkind":"055",
"subapkind":"055001",
"apdt":"20180726",
"aptm":"161324",
"workdate":"20180726",
"sharetype":"A",
"accptmd":"1",
"branchcode":"247000",
"distributorcode":"247",
"referno":"5B5980AB002Cbc84",
"tradeacco":"000621718538943694",
"taaccountid":"475A7D638769350988",
"productid":"732937",
"tano":"47",
"feetp":"06",
"feemode":"1",
"feevalue":"0.002",
"baseyield":"0.0900",
"yield":"0.0900",
"addyield":"0.0000",
"exyield":"0.0000",
"interestbegindate":"20180726",
"interestenddate":"20181016",
"selltype":1}
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311540590299ZG' AND PAYST='F';"]
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{
"serialno":"201808311626310258VY",
"subquty":"100.00",
"custno":"1538943691",
"apkind":"055",
"subapkind":"055001",
"apdt":"20180726",
"aptm":"161324",
"workdate":"20180726",
"sharetype":"A",
"accptmd":"1",
"branchcode":"247000",
"distributorcode":"247",
"referno":"5B5980AB002Cbc84",
"tradeacco":"000621718538943694",
"taaccountid":"475A7D638769350988",
"productid":"732937",
"tano":"47",
"feetp":"06",
"feemode":"1",
"feevalue":"0.002",
"baseyield":"0.0900",
"yield":"0.0900",
"addyield":"0.0000",
"exyield":"0.0000",
"interestbegindate":"20180726",
"interestenddate":"20181016",
"selltype":1}
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626310258VY' AND APPLYST='F';"]
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"refercapno":"5B57DD261DFCbc4E",
        "reemFlag":"1",
        "selltype":1,
        "periodic":"true",
        "mixProd":"true",
        "bigVCustno":"1503257540",
        "honourFlag":"1",
        "newFlag":"0",
        "partPayment":"false",
        "subquty":"10.00",
        "feetp":"07",
        "feemode":"1",
        "feevalue":"0.01",
        "serialno":"201808311626310117Ks",
        "custno":"1538943811",
        "apkind":"014",
        "subapkind":"014001",
        "apdt":"20180722",
        "aptm":"113344",
        "workdate":"20180722",
        "tradeacco":"000621718538943814",
        "taaccountid":"475A7FB19598436383",
        "tano":"47",
        "productid":"8901",
        "sharetype":"A",
        "accptmd":"1",
        "branchcode":"247000",
        "distributorcode":"247"}
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626310117Ks';"]
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
""
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626310117Ks';"]
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"serialno":"201808311540590448gQ","isSend":"1",'extFields':{"errCode":"0000", "errMsg":"交易成功", "tranSt":"Y"}}
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311540590448gQ' AND APPLYST='Y'AND TRANSST='Y' AND PAYST='Y';","SELECT * from cts.cts_tradequtychg WHERE REFERNO='201808311540590448gQ' AND PRODUCTID='9999'AND CHANGEQUTY='9.9';"]
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"refercapno":"5B57DD261DFCbc4E",
        "reemFlag":"1",
        "selltype":1,
        "periodic":"true",
        "mixProd":"true",
        "bigVCustno":"1503257540",
        "honourFlag":"1",
        "newFlag":"0",
        "partPayment":"false",
        "subquty":"10.00",
        "feetp":"07",
        "feemode":"1",
        "feevalue":"0.01",
        "serialno":"201808311626310415BH",
        "custno":"1538943811",
        "apkind":"014",
        "subapkind":"014001",
        "apdt":"20180722",
        "aptm":"113344",
        "workdate":"20180722",
        "tradeacco":"000621718538943814",
        "taaccountid":"475A7FB19598436383",
        "tano":"47",
        "productid":"8901",
        "sharetype":"A",
        "accptmd":"1",
        "branchcode":"247000",
        "distributorcode":"247"}
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626310415BH';"]
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
""
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626310415BH';"]
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"serialno":"201808311540590241VV","isSend":"1",'extFields':{"errCode":"0000", "errMsg":"交易成功", "tranSt":"Y"}}
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311540590241VV' AND APPLYST='Y'AND TRANSST='Y' AND PAYST='Y';","SELECT * from cts.cts_tradequtychg WHERE REFERNO='201808311540590241VV' AND PRODUCTID='8901'AND CHANGEQUTY='10';"]
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"refercapno":"5B57DD261DFCbc4E",
        "sellCouponId":"5B569A9A006Abc55",
        "reemFlag":"1",
        "periodic":"true",
        "mixProd":"true",
        "bigVCustno":"1503257540",
        "honourFlag":"1",
        "newFlag":"0",
        "partPayment":"false",
        "subquty":"10.00",
        "feetp":"07",
        "feemode":"1",
        "feevalue":"0.01",
        "serialno":"201808311626310259Ng",
        "custno":"1538943811",
        "apkind":"014",
        "subapkind":"014001",
        "apdt":"20180722",
        "aptm":"113344",
        "workdate":"20180722",
        "tradeacco":"000621718538943814",
        "taaccountid":"475A7FB19598436383",
        "tano":"47",
        "productid":"8901",
        "sharetype":"A",
        "accptmd":"1",
        "branchcode":"247000",
        "distributorcode":"247"}
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626310259Ng';"]
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
""
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626310259Ng';"]
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"serialno":"201808311540590932eX","isSend":"1",'extFields':{"errCode":"0000", "errMsg":"交易成功", "tranSt":"Y"}}
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311540590932eX' AND APPLYST='Y'AND TRANSST='Y' AND PAYST='Y';","SELECT * from cts.cts_tradequtychg WHERE REFERNO='201808311540590932eX' AND PRODUCTID='9999'AND CHANGEQUTY='9.9';"]
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"refercapno":"5B57DD261DFCbc4E",
        "sellCouponId":"5B569A9A006Abc55",
        "reemFlag":"1",
        "selltype":1,
        "periodic":"true",
        "mixProd":"true",
        "bigVCustno":"1503257540",
        "honourFlag":"1",
        "newFlag":"0",
        "partPayment":"false",
        "subquty":"10.00",
        "feetp":"07",
        "feemode":"1",
        "feevalue":"0.01",
        "serialno":"20180831162631060sF",
        "custno":"1538943811",
        "apkind":"014",
        "subapkind":"014001",
        "apdt":"20180722",
        "aptm":"113344",
        "workdate":"20180722",
        "tradeacco":"000621718538943814",
        "taaccountid":"475A7FB19598436383",
        "tano":"47",
        "productid":"8901",
        "sharetype":"A",
        "accptmd":"1",
        "branchcode":"247000",
        "distributorcode":"247"}
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='20180831162631060sF';"]
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
""
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='20180831162631060sF';"]
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"serialno":"201808311540590912LN","isSend":"1",'extFields':{"errCode":"0000", "errMsg":"交易成功", "tranSt":"Y"}}
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311540590912LN' AND APPLYST='Y'AND TRANSST='Y' AND PAYST='Y';","SELECT * from cts.cts_tradequtychg WHERE REFERNO='201808311540590912LN' AND PRODUCTID='8901'AND CHANGEQUTY='10';"]
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"refercapno":"5B74EB0A001FbcAC",
        "reemFlag":"1",
        "selltype":1,
        "periodic":"true",
        "mixProd":"true",
        "bigVCustno":"1503136940",
        "honourFlag":"1",
        "newFlag":"0",
        "partPayment":"false",
        "subquty":"10.00",
        "feetp":"07",
        "feemode":"1",
        "feevalue":"0.01",
        "serialno":"201808311626310962Lm",
        "custno":"1538943811",
        "apkind":"014",
        "subapkind":"014001",
        "apdt":"20180815",
        "aptm":"164500",
        "workdate":"20180815",
        "tradeacco":"000621718538943814",
        "taaccountid":"475A7FB19598436383",
        "tano":"47",
        "productid":"8802",
        "sharetype":"A",
        "accptmd":"1",
        "branchcode":"247000",
        "distributorcode":"247"}
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626310962Lm';"]
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
""
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626310962Lm';"]
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"serialno":"201808311540590979tG","isSend":"1",'extFields':{"errCode":"0000", "errMsg":"交易成功", "tranSt":"Y"}}
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311540590979tG' AND APPLYST='Y'AND TRANSST='Y' AND PAYST='Y';","SELECT * from cts.cts_tradequtychg WHERE REFERNO='201808311540590979tG' AND PRODUCTID='9999'AND CHANGEQUTY='9.9';"]
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"refercapno":"5B74EB0A001FbcAC",
        "reemFlag":"1",
        "selltype":1,
        "periodic":"true",
        "mixProd":"true",
        "bigVCustno":"1503136940",
        "honourFlag":"1",
        "newFlag":"0",
        "partPayment":"false",
        "subquty":"10.00",
        "feetp":"07",
        "feemode":"1",
        "feevalue":"0.01",
        "serialno":"201808311626310321kc",
        "custno":"1538943811",
        "apkind":"014",
        "subapkind":"014001",
        "apdt":"20180815",
        "aptm":"164500",
        "workdate":"20180815",
        "tradeacco":"000621718538943814",
        "taaccountid":"475A7FB19598436383",
        "tano":"47",
        "productid":"8802",
        "sharetype":"A",
        "accptmd":"1",
        "branchcode":"247000",
        "distributorcode":"247"}
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626310321kc';"]
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
""
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626310321kc';"]
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"serialno":"201808311540590310rg","isSend":"1",'extFields':{"errCode":"0000", "errMsg":"交易成功", "tranSt":"Y"}}
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311540590310rg' AND APPLYST='Y'AND TRANSST='Y' AND PAYST='Y';","SELECT * from cts.cts_tradequtychg WHERE REFERNO='201808311540590310rg' AND PRODUCTID='8802'AND CHANGEQUTY='10';"]
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"refercapno":"5B74EB0A001FbcAC",
        "sellCouponId":"5B569A9A006Abc55",
        "reemFlag":"1",
        "selltype":1,
        "periodic":"true",
        "mixProd":"true",
        "bigVCustno":"1503136940",
        "honourFlag":"1",
        "newFlag":"0",
        "partPayment":"false",
        "subquty":"10.00",
        "feetp":"07",
        "feemode":"1",
        "feevalue":"0.01",
        "serialno":"zcvbr123s12sdf31",
        "custno":"1538943811",
        "apkind":"014",
        "subapkind":"014001",
        "apdt":"20180815",
        "aptm":"164500",
        "workdate":"20180815",
        "tradeacco":"000621718538943814",
        "taaccountid":"475A7FB19598436383",
        "tano":"47",
        "productid":"8802",
        "sharetype":"A",
        "accptmd":"1",
        "branchcode":"247000",
        "distributorcode":"247"}
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='temp_serial';"]
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
""
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='temp_serial';"]
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"serialno":"zcvbr123s12sdf31","isSend":"1",'extFields':{"errCode":"0000", "errMsg":"交易成功", "tranSt":"Y"}}
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='zcvbr123s12sdf31' AND APPLYST='Y'AND TRANSST='Y' AND PAYST='Y';","SELECT * from cts.cts_tradequtychg WHERE REFERNO='zcvbr123s12sdf31' AND PRODUCTID='9999'AND CHANGEQUTY='9.9';"]
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"refercapno":"5B74EB0A001FbcAC",
        "sellCouponId":"5B569A9A006Abc55",
        "reemFlag":"1",
        "selltype":1,
        "periodic":"true",
        "mixProd":"true",
        "bigVCustno":"1503136940",
        "honourFlag":"1",
        "newFlag":"0",
        "partPayment":"false",
        "subquty":"10.00",
        "feetp":"07",
        "feemode":"1",
        "feevalue":"0.01",
        "serialno":"zcvbr123s12sdf31",
        "custno":"1538943811",
        "apkind":"014",
        "subapkind":"014001",
        "apdt":"20180815",
        "aptm":"164500",
        "workdate":"20180815",
        "tradeacco":"000621718538943814",
        "taaccountid":"475A7FB19598436383",
        "tano":"47",
        "productid":"8802",
        "sharetype":"A",
        "accptmd":"1",
        "branchcode":"247000",
        "distributorcode":"247"}
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='temp_serial';"]
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
""
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='temp_serial';"]
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"serialno":"zcvbr123s12sdf31","isSend":"1",'extFields':{"errCode":"0000", "errMsg":"交易成功", "tranSt":"Y"}}
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='zcvbr123s12sdf31' AND APPLYST='Y'AND TRANSST='Y' AND PAYST='Y';","SELECT * from cts.cts_tradequtychg WHERE REFERNO='zcvbr123s12sdf31' AND PRODUCTID='8802'AND CHANGEQUTY='10';"]
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"refercapno":"5B57DE5B20F7bc4E",
        "reemFlag":"1",
        "selltype":1,
        "periodic":"true",
        "mixProd":"true",
        "bigVCustno":"1597219235",
        "honourFlag":"1",
        "newFlag":"0",
        "partPayment":"false",
        "subquty":"10.00",
        "feetp":"07",
        "feemode":"1",
        "feevalue":"0.01",
        "serialno":"201808311626310120ix",
        "custno":"1538943811",
        "apkind":"014",
        "subapkind":"014001",
        "apdt":"20180815",
        "aptm":"164500",
        "workdate":"20180815",
        "tradeacco":"000621718538943814",
        "taaccountid":"475A7FB19598436383",
        "tano":"47",
        "productid":"8904",
        "sharetype":"A",
        "accptmd":"1",
        "branchcode":"247000",
        "distributorcode":"247"}
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626310120ix';"]
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
""
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626310120ix';"]
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"serialno":"201808311540590841HD","isSend":"1",'extFields':{"errCode":"0000", "errMsg":"交易成功", "tranSt":"Y"}}
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311540590841HD' AND APPLYST='Y'AND TRANSST='Y' AND PAYST='Y';","SELECT * from cts.cts_tradequtychg WHERE REFERNO='201808311540590841HD' AND PRODUCTID='9999'AND CHANGEQUTY='9.9';"]
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"refercapno":"5B57DE5B20F7bc4E",
        "reemFlag":"1",
        "selltype":1,
        "periodic":"true",
        "mixProd":"true",
        "bigVCustno":"1597219235",
        "honourFlag":"1",
        "newFlag":"0",
        "partPayment":"false",
        "subquty":"10.00",
        "feetp":"07",
        "feemode":"1",
        "feevalue":"0.01",
        "serialno":"201808311626310343PL",
        "custno":"1538943811",
        "apkind":"014",
        "subapkind":"014001",
        "apdt":"20180815",
        "aptm":"164500",
        "workdate":"20180815",
        "tradeacco":"000621718538943814",
        "taaccountid":"475A7FB19598436383",
        "tano":"47",
        "productid":"8904",
        "sharetype":"A",
        "accptmd":"1",
        "branchcode":"247000",
        "distributorcode":"247"}
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626310343PL';"]
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
""
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626310343PL';"]
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"serialno":"201808311540590273Kt","isSend":"1",'extFields':{"errCode":"0000", "errMsg":"交易成功", "tranSt":"Y"}}
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311540590273Kt' AND APPLYST='Y'AND TRANSST='Y' AND PAYST='Y';","SELECT * from cts.cts_tradequtychg WHERE REFERNO='201808311540590273Kt' AND PRODUCTID='8904'AND CHANGEQUTY='10';"]
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"refercapno":"5B57DE5B20F7bc4E",
        "sellCouponId":"5B569A9A006Abc55",
        "reemFlag":"1",
        "selltype":1,
        "periodic":"true",
        "mixProd":"true",
        "bigVCustno":"1597219235",
        "honourFlag":"1",
        "newFlag":"0",
        "partPayment":"false",
        "subquty":"10.00",
        "feetp":"07",
        "feemode":"1",
        "feevalue":"0.01",
        "serialno":"201808311626310976js",
        "custno":"1538943811",
        "apkind":"014",
        "subapkind":"014001",
        "apdt":"20180815",
        "aptm":"164500",
        "workdate":"20180815",
        "tradeacco":"000621718538943814",
        "taaccountid":"475A7FB19598436383",
        "tano":"47",
        "productid":"8904",
        "sharetype":"A",
        "accptmd":"1",
        "branchcode":"247000",
        "distributorcode":"247"}
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626310976js';"]
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
""
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626310976js';"]
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"serialno":"201808311540590511FT","isSend":"1",'extFields':{"errCode":"0000", "errMsg":"交易成功", "tranSt":"Y"}}
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311540590511FT' AND APPLYST='Y'AND TRANSST='Y' AND PAYST='Y';","SELECT * from cts.cts_tradequtychg WHERE REFERNO='201808311540590511FT' AND PRODUCTID='9999'AND CHANGEQUTY='9.9';"]
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"refercapno":"5B57DE5B20F7bc4E",
        "sellCouponId":"5B569A9A006Abc55",
        "reemFlag":"1",
        "selltype":1,
        "periodic":"true",
        "mixProd":"true",
        "bigVCustno":"1597219235",
        "honourFlag":"1",
        "newFlag":"0",
        "partPayment":"false",
        "subquty":"10.00",
        "feetp":"07",
        "feemode":"1",
        "feevalue":"0.01",
        "serialno":"201808311626310469RN",
        "custno":"1538943811",
        "apkind":"014",
        "subapkind":"014001",
        "apdt":"20180815",
        "aptm":"164500",
        "workdate":"20180815",
        "tradeacco":"000621718538943814",
        "taaccountid":"475A7FB19598436383",
        "tano":"47",
        "productid":"8904",
        "sharetype":"A",
        "accptmd":"1",
        "branchcode":"247000",
        "distributorcode":"247"}
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626310469RN';"]
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
""
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626310469RN';"]
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"serialno":"201808311540590315UC","isSend":"1",'extFields':{"errCode":"0000", "errMsg":"交易成功", "tranSt":"Y"}}
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311540590315UC' AND APPLYST='Y'AND TRANSST='Y' AND PAYST='Y';","SELECT * from cts.cts_tradequtychg WHERE REFERNO='201808311540590315UC' AND PRODUCTID='8904'AND CHANGEQUTY='10';"]
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"refercapno":"5B569C0E0225bc08",
        "sellCouponId":"5B569A9A006Abc55",
        "reemFlag":"0",
        "selltype":1,
        "periodic":"true",
        "mixProd":"true",
        "bigVCustno":"1503136940",
        "honourFlag":"1",
        "newFlag":"0",
        "partPayment":"false",
        "subquty":"10.00",
        "feetp":"07",
        "feemode":"1",
        "feevalue":"0.0",
        "serialno":"201808311626310744Ef",
        "custno":"1538943811",
        "apkind":"014",
        "subapkind":"014001",
        "apdt":"20180831",
        "aptm":"164500",
        "workdate":"20180831",
        "tradeacco":"000621718538943814",
        "taaccountid":"475A7FB19598436383",
        "tano":"47",
        "productid":"8802",
        "sharetype":"A",
        "accptmd":"1",
        "branchcode":"247000",
        "distributorcode":"247"}
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626310744Ef';"]
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
""
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626310744Ef';"]
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"serialno":"201808311540590277bT","isSend":"1",'extFields':{"errCode":"0000", "errMsg":"交易成功", "tranSt":"Y"}}
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311540590277bT' AND APPLYST='Y'AND TRANSST='Y' AND PAYST='Y';","SELECT * from cts.cts_tradequtychg WHERE REFERNO='201808311540590277bT' AND PRODUCTID='9999'AND CHANGEQUTY='9.9';"]
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"refercapno":"5B569C0E0225bc08",
        "sellCouponId":"5B569A9A006Abc55",
        "reemFlag":"0",
        "selltype":1,
        "periodic":"true",
        "mixProd":"true",
        "bigVCustno":"1503136940",
        "honourFlag":"1",
        "newFlag":"0",
        "partPayment":"false",
        "subquty":"10.00",
        "feetp":"07",
        "feemode":"1",
        "feevalue":"0.0",
        "serialno":"201808311626310732so",
        "custno":"1538943811",
        "apkind":"014",
        "subapkind":"014001",
        "apdt":"20180831",
        "aptm":"164500",
        "workdate":"20180831",
        "tradeacco":"000621718538943814",
        "taaccountid":"475A7FB19598436383",
        "tano":"47",
        "productid":"8802",
        "sharetype":"A",
        "accptmd":"1",
        "branchcode":"247000",
        "distributorcode":"247"}
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626310732so';"]
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
""
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626310732so';"]
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"serialno":"${}","isSend":"1",'extFields':{"errCode":"0000", "errMsg":"交易成功", "tranSt":"Y"}}
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='${}' AND APPLYST='Y'AND TRANSST='Y' AND PAYST='Y';","SELECT * from cts.cts_tradequtychg WHERE REFERNO='${}' AND PRODUCTID='8901'AND CHANGEQUTY='10';"]
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"refercapno":"5B569C0E0225bc08",
        "sellCouponId":"5B569A9A006Abc55",
        "reemFlag":"0",
        "selltype":1,
        "periodic":"true",
        "mixProd":"true",
        "bigVCustno":"1503136940",
        "honourFlag":"1",
        "newFlag":"0",
        "partPayment":"false",
        "subquty":"10.00",
        "feetp":"07",
        "feemode":"1",
        "feevalue":"0.0",
        "serialno":"201808311626310135WM",
        "custno":"1538943811",
        "apkind":"014",
        "subapkind":"014001",
        "apdt":"20170820",
        "aptm":"164500",
        "workdate":"20170820",
        "tradeacco":"000621718538943814",
        "taaccountid":"475A7FB19598436383",
        "tano":"47",
        "productid":"8802",
        "sharetype":"A",
        "accptmd":"1",
        "branchcode":"247000",
        "distributorcode":"247"}
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626310135WM';"]
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"refercapno":"5B57DD261DFCbc4E",
        "reemFlag":"0",
        "selltype":1,
        "periodic":"true",
        "mixProd":"true",
        "bigVCustno":"1503257540",
        "honourFlag":"1",
        "newFlag":"0",
        "partPayment":"false",
        "subquty":"10.00",
        "feetp":"07",
        "feemode":"1",
        "feevalue":"0.0",
        "serialno":"201808311626310522fP",
        "custno":"1538943811",
        "apkind":"014",
        "subapkind":"014001",
        "apdt":"20180831",
        "aptm":"164500",
        "workdate":"20180831",
        "tradeacco":"000621718538943814",
        "taaccountid":"475A7FB19598436383",
        "tano":"47",
        "productid":"8901",
        "sharetype":"A",
        "accptmd":"1",
        "branchcode":"247000",
        "distributorcode":"247"}
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626310522fP';"]
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
""
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626310522fP';"]
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"serialno":"20180831154059010bC","isSend":"1",'extFields':{"errCode":"0000", "errMsg":"交易成功", "tranSt":"Y"}}
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='20180831154059010bC' AND APPLYST='Y'AND TRANSST='Y' AND PAYST='Y';","SELECT * from cts.cts_tradequtychg WHERE REFERNO='20180831154059010bC' AND PRODUCTID='9999'AND CHANGEQUTY='9.9';"]
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"refercapno":"5B57DD261DFCbc4E",
        "reemFlag":"0",
        "selltype":1,
        "periodic":"true",
        "mixProd":"true",
        "bigVCustno":"1503257540",
        "honourFlag":"1",
        "newFlag":"0",
        "partPayment":"false",
        "subquty":"10.00",
        "feetp":"07",
        "feemode":"1",
        "feevalue":"0.0",
        "serialno":"201808311626310906sH",
        "custno":"1538943811",
        "apkind":"014",
        "subapkind":"014001",
        "apdt":"20180831",
        "aptm":"164500",
        "workdate":"20180831",
        "tradeacco":"000621718538943814",
        "taaccountid":"475A7FB19598436383",
        "tano":"47",
        "productid":"8901",
        "sharetype":"A",
        "accptmd":"1",
        "branchcode":"247000",
        "distributorcode":"247"}
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626310906sH';"]
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
""
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626310906sH';"]
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"serialno":"201808311540590445Uc","isSend":"1",'extFields':{"errCode":"0000", "errMsg":"交易成功", "tranSt":"Y"}}
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311540590445Uc' AND APPLYST='Y'AND TRANSST='Y' AND PAYST='Y';","SELECT * from cts.cts_tradequtychg WHERE REFERNO='201808311540590445Uc' AND PRODUCTID='8901'AND CHANGEQUTY='10';"]
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"refercapno":"5B57DD261DFCbc4E",
        "reemFlag":"0",
        "selltype":1,
        "periodic":"true",
        "mixProd":"true",
        "bigVCustno":"1503257540",
        "honourFlag":"1",
        "newFlag":"0",
        "partPayment":"false",
        "subquty":"10.00",
        "feetp":"07",
        "feemode":"1",
        "feevalue":"0.0",
        "serialno":"201808311626310673PD",
        "custno":"1538943811",
        "apkind":"014",
        "subapkind":"014001",
        "apdt":"20170820",
        "aptm":"164500",
        "workdate":"20170820",
        "tradeacco":"000621718538943814",
        "taaccountid":"475A7FB19598436383",
        "tano":"47",
        "productid":"8901",
        "sharetype":"A",
        "accptmd":"1",
        "branchcode":"247000",
        "distributorcode":"247"}
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626310673PD';"]
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"refercapno":"5B7A57C6008EbcA4",
        "reemFlag":"0",
        "selltype":1,
        "periodic":"true",
        "mixProd":"true",
        "bigVCustno":"1597219235",
        "honourFlag":"1",
        "newFlag":"0",
        "partPayment":"false",
        "subquty":"10.00",
        "feetp":"07",
        "feemode":"1",
        "feevalue":"0.0",
        "serialno":"201808311626310171lW",
        "custno":"1538943811",
        "apkind":"014",
        "subapkind":"014001",
        "apdt":"20180831",
        "aptm":"164500",
        "workdate":"20180831",
        "tradeacco":"000621718538943814",
        "taaccountid":"475A7FB19598436383",
        "tano":"47",
        "productid":"8904",
        "sharetype":"A",
        "accptmd":"1",
        "branchcode":"247000",
        "distributorcode":"247"}
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626310171lW';"]
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
""
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626310171lW';"]
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"serialno":"20180831154059072Lw","isSend":"1",'extFields':{"errCode":"0000", "errMsg":"交易成功", "tranSt":"Y"}}
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='20180831154059072Lw' AND APPLYST='Y'AND TRANSST='Y' AND PAYST='Y';","SELECT * from cts.cts_tradequtychg WHERE REFERNO='20180831154059072Lw' AND PRODUCTID='9999'AND CHANGEQUTY='9.9';"]
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"refercapno":"5B7A57C6008EbcA4",
        "reemFlag":"0",
        "selltype":1,
        "periodic":"true",
        "mixProd":"true",
        "bigVCustno":"1597219235",
        "honourFlag":"1",
        "newFlag":"0",
        "partPayment":"false",
        "subquty":"10.00",
        "feetp":"07",
        "feemode":"1",
        "feevalue":"0.0",
        "serialno":"201808311626310604IK",
        "custno":"1538943811",
        "apkind":"014",
        "subapkind":"014001",
        "apdt":"20180831",
        "aptm":"164500",
        "workdate":"20180831",
        "tradeacco":"000621718538943814",
        "taaccountid":"475A7FB19598436383",
        "tano":"47",
        "productid":"8904",
        "sharetype":"A",
        "accptmd":"1",
        "branchcode":"247000",
        "distributorcode":"247"}
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626310604IK';"]
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
""
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626310604IK';"]
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"serialno":"201808311540590157Fn","isSend":"1",'extFields':{"errCode":"0000", "errMsg":"交易成功", "tranSt":"Y"}}
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311540590157Fn' AND APPLYST='Y'AND TRANSST='Y' AND PAYST='Y';","SELECT * from cts.cts_tradequtychg WHERE REFERNO='201808311540590157Fn' AND PRODUCTID='8904'AND CHANGEQUTY='10';"]
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"refercapno":"5B7A57C6008EbcA4",
        "reemFlag":"0",
        "selltype":1,
        "periodic":"true",
        "mixProd":"true",
        "bigVCustno":"1597219235",
        "honourFlag":"1",
        "newFlag":"0",
        "partPayment":"false",
        "subquty":"10.00",
        "feetp":"07",
        "feemode":"1",
        "feevalue":"0.0",
        "serialno":"20180831162631019TS",
        "custno":"1538943811",
        "apkind":"014",
        "subapkind":"014001",
        "apdt":"20170820",
        "aptm":"164500",
        "workdate":"20170820",
        "tradeacco":"000621718538943814",
        "taaccountid":"475A7FB19598436383",
        "tano":"47",
        "productid":"8904",
        "sharetype":"A",
        "accptmd":"1",
        "branchcode":"247000",
        "distributorcode":"247"}
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='20180831162631019TS';"]
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"serialno":"201808311626310997AK",
        "invTp":"1",
        "mobileNo":"13760200147",
        "loginPasswd":"202cb962ac59075b964b07152d234b70",
        "phoneCode":"1111",
        "refererMobile":"15021996508",
        "accofrom":"1",
        "distributorCode":"247",
        "branchcode":"24700",
        "email":"744700813@qq.com",
        "oneRecommend":"1"
}
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["select * from cif.cif_custinfo WHERE MOBILENO='13760200147';"]
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"serialno":"201808311626310113XH",
        "invTp":"2",
        "mobileNo":"13760200148",
        "loginPasswd":"202cb962ac59075b964b07152d234b70",
        "phoneCode":"1111",
        "accofrom":"1",
        "distributorCode":"247",
        "branchcode":"24700",
        "email":"744700813@qq.com",
        "oneRecommend":"0"
}
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["select * from cif.cif_custinfo WHERE MOBILENO='13760200148';"]
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"serialno":"201808311626310220aR",
        "invTp":"1",
        "mobileNo":"",
        "loginPasswd":"202cb962ac59075b964b07152d234b70",
        "phoneCode":"1111",
        "refererMobile":"15021996508",
        "accofrom":"1",
        "distributorCode":"247",
        "branchcode":"24700",
        "email":"744700813@qq.com",
        "oneRecommend":"1"
}
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
""
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"serialno":"201808311626310190OH",
        "invTp":"1",
        "mobileNo":"13760200149",
        "loginPasswd":"",
        "phoneCode":"1111",
        "refererMobile":"15021996508",
        "accofrom":"1",
        "distributorCode":"247",
        "branchcode":"24700",
        "email":"744700813@qq.com",
        "oneRecommend":"1"
}
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
""
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"serialno":"201808311626310166xo",
        "invTp":"1",
        "mobileNo":"1502199644",
        "loginPasswd":"202cb962ac59075b964b07152d234b70",
        "phoneCode":"1111",
        "refererMobile":"15021996508",
        "accofrom":"1",
        "distributorCode":"247",
        "branchcode":"24700",
        "email":"744700813@qq.com",
        "oneRecommend":"1"
}
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
""
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"serialno":"201808311626310380kg",
        "invTp":"1",
        "mobileNo":"150219964489",
        "loginPasswd":"202cb962ac59075b964b07152d234b70",
        "phoneCode":"1111",
        "refererMobile":"15021996508",
        "accofrom":"1",
        "distributorCode":"247",
        "branchcode":"24700",
        "email":"744700813@qq.com",
        "oneRecommend":"1"
}
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
""
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"serialno":"201808311626310458vR",
        "invTp":"1",
        "mobileNo":"15021996@44",
        "loginPasswd":"202cb962ac59075b964b07152d234b70",
        "phoneCode":"1111",
        "refererMobile":"15021996508",
        "accofrom":"1",
        "distributorCode":"247",
        "branchcode":"24700",
        "email":"744700813@qq.com",
        "oneRecommend":"1"
}
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
""
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"serialno":"201808311626310703GC",
        "invTp":"1",
        "mobileNo":"15021996 44",
        "loginPasswd":"202cb962ac59075b964b07152d234b70",
        "phoneCode":"1111",
        "refererMobile":"15021996508",
        "accofrom":"1",
        "distributorCode":"247",
        "branchcode":"24700",
        "email":"744700813@qq.com",
        "oneRecommend":"1"
}
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
""
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"serialno":"20180831162631091TY",
        "invTp":"1",
        "mobileNo":"13760200147",
        "loginPasswd":"202cb962ac59075b964b07152d234b70",
        "phoneCode":"1111",
        "refererMobile":"15021996508",
        "accofrom":"1",
        "distributorCode":"247",
        "branchcode":"24700",
        "email":"744700813@qq.com",
        "oneRecommend":"1"
}
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
""
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"loginName":"13760200147",
        "loginPwd":"202cb962ac59075b964b07152d234b70",
        "accoFrom":"1",
}
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
""
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"loginName":"13760200148",
        "loginPwd":"202cb962ac59075b964b07152d234b70",
        "accoFrom":"1",
}
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
""
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"loginName":"13760200147",
        "loginPwd":"202cb962ac59075b964b07152d234b70",
        "accoFrom":"1",
}
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
""
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"loginName":"13760200147",
        "loginPwd":"202cb962ac59075b964b07152d234b70",
        "accoFrom":"1",
}
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
""
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"loginName":"13760200147",
        "loginPwd":"202cb962ac59075b964b07152d234b70",
        "accoFrom":"1",
}
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
""
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"loginName":"",
        "loginPwd":"202cb962ac59075b964b07152d234b70",
        "accoFrom":"1",
}
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
""
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"loginName":"13760200147",
        "loginPwd":"",
        "accoFrom":"1",
}
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
""
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"loginName":"13760200011",
        "loginPwd":"202cb962ac59075b964b07152d234b70",
        "accoFrom":"1",
}
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
""
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"loginName":"13760200147",
        "loginPwd":"202cb962ac59075b964b07152d23",
        "accoFrom":"1",
}
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
""
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{
 "subamt":"5000",
 "paymodel":"05",
 "channel":"JX",
 "bankid":"205B0CF78550959969",
 "bankno":"102",
 "bankacco":"6222620110038594231",
 "serialno":"201808311626310260xJ",
 "custno":"1604578759",
 "apkind":"922",
 "subapkind":"922001",
 "apdt":"20180516",
 "aptm":"093540",
 "workdate":"20180516",
 "tradeacco":"001035098604578762",
 "taaccountid":"475B0CB66D40432285",
 "tano":"47",
 "sharetype":"A",
 "accptmd":"1",
 "branchcode":"247000",
 "distributorcode":"247",
"extFields":{"rechargeFlag":"1"}
}
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626310260xJ';"]
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{'serialno':'201808311540580752Ts','extFields':{'errCode':'0000', 'errMsg':'交易成功', 'tranSt':'Y'}}
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311540580752Ts' AND PAYST='Y';", "SELECT * from cts.cts_tradequtychg WHERE REFERNO='201808311540580752Ts' AND CHANGEQUTY='-5000';"]
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{
 "subamt":"5000",
 "paymodel":"05",
 "channel":"JX",
 "bankid":"205B0CF78550959969",
 "bankno":"102",
 "bankacco":"6222620110038594231",
 "serialno":"201808311626310695bj",
 "custno":"1604578759",
 "apkind":"922",
 "subapkind":"922001",
 "apdt":"20180516",
 "aptm":"093540",
 "workdate":"20180516",
 "tradeacco":"001035098604578762",
 "taaccountid":"475B0CB66D40432285",
 "tano":"47",
 "sharetype":"A",
 "accptmd":"1",
 "branchcode":"247000",
 "distributorcode":"247",
"extFields":{'rechargeFlag':'1'}
}
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626310695bj';"]
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"serialno":"201808311540580511KE",'extFields':{"errCode":"0001", "errMsg":"交易失败", "tranSt":"F"}}
 Fri, 31 Aug 2018 16:26:31  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311540580511KE' AND PAYST='F';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{
 "subamt":"1000",
 "paymodel":"05",
 "channel":"JX",
 "bankid":"205AE16EA606342921",
 "bankno":"103",
 "bankacco":"6222620110038594231",
 "serialno":"201808311626310531Bz",
 "custno":"1538967652",
 "apkind":"922",
 "subapkind":"922001",
 "apdt":"20180501",
 "aptm":"133540",
 "workdate":"20180501",
 "tradeacco":"000621718538967655",
 "taaccountid":"475AE141EE07252223",
 "tano":"47",
 "sharetype":"A",
 "accptmd":"2",
 "branchcode":"247000",
 "distributorcode":"247",
"extFields":{'rechargeFlag':'1'}
}
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626310531Bz';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"serialno":"201808311540580770aN",'extFields':{"errCode":"0000", "errMsg":"交易成功", "tranSt":"Y"}}
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311540580770aN' AND PAYST='Y';", "SELECT * from cts.cts_tradequtychg WHERE REFERNO='201808311540580770aN' AND CHANGEQUTY='-1000';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{
 "subamt":"1000",
 "paymodel":"05",
 "channel":"JX",
 "bankid":"205AE16EA606342921",
 "bankno":"103",
 "bankacco":"6222620110038594231",
 "serialno":"201808311626320202xL",
 "custno":"1538967652",
 "apkind":"922",
 "subapkind":"922001",
 "apdt":"20180501",
 "aptm":"133540",
 "workdate":"20180501",
 "tradeacco":"000621718538967655",
 "taaccountid":"475AE141EE07252223",
 "tano":"47",
 "sharetype":"A",
 "accptmd":"2",
 "branchcode":"247000",
 "distributorcode":"247",
"extFields":{'rechargeFlag':'1'}
}
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626320202xL';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"serialno":"201808311540580284ZM",'extFields':{"errCode":"0001", "errMsg":"交易失败", "tranSt":"F"}}
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311540580284ZM' AND PAYST='F';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{
 "subamt":"500",
 "paymodel":"05",
 "channel":"JX",
 "bankid":"205AE16EA606342921",
 "bankno":"104",
 "bankacco":"6222620110038594231",
 "serialno":"201808311626320456Ji",
 "custno":"1538967652",
 "apkind":"922",
 "subapkind":"922001",
 "apdt":"20180509",
 "aptm":"133540",
 "workdate":"20180509",
 "tradeacco":"000621718538967655",
 "taaccountid":"475AE141EE07252223",
 "tano":"47",
 "sharetype":"A",
 "accptmd":"3",
 "branchcode":"247000",
 "distributorcode":"247",
"extFields":{'rechargeFlag':'1'}
}
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626320456Ji';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"serialno":"201808311540580616CR","isSend":"1",'extFields':{"errCode":"0000", "errMsg":"交易成功", "tranSt":"Y"}}
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311540580616CR' AND PAYST='Y';", "SELECT * from cts.cts_tradequtychg WHERE REFERNO='201808311540580616CR' AND CHANGEQUTY='-500';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{
 "subamt":"500",
 "paymodel":"05",
 "channel":"JX",
 "bankid":"205AE16EA606342921",
 "bankno":"104",
 "bankacco":"6222620110038594231",
 "serialno":"201808311626320420jF",
 "custno":"1538967652",
 "apkind":"922",
 "subapkind":"922001",
 "apdt":"20180509",
 "aptm":"133540",
 "workdate":"20180509",
 "tradeacco":"000621718538967655",
 "taaccountid":"475AE141EE07252223",
 "tano":"47",
 "sharetype":"A",
 "accptmd":"3",
 "branchcode":"247000",
 "distributorcode":"247",
"extFields":{'rechargeFlag':'1'}
}
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626320420jF';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"serialno":"201808311540580331ks",'extFields':{"errCode":"0001", "errMsg":"交易失败", "tranSt":"F"}}
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311540580331ks' AND PAYST='F';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{
 "subamt":"4000",
 "paymodel":"05",
 "channel":"JX",
 "bankid":"205AE16EA606342921",
 "bankno":"105",
 "bankacco":"6222620110038594231",
 "serialno":"201808311626320528gF",
 "custno":"1538967652",
 "apkind":"922",
 "subapkind":"922001",
 "apdt":"20180228",
 "aptm":"223540",
 "workdate":"20180228",
 "tradeacco":"000621718538967655",
 "taaccountid":"475AE141EE07252223",
 "tano":"47",
 "sharetype":"A",
 "accptmd":"2",
 "branchcode":"247000",
 "distributorcode":"247",
"extFields":{'rechargeFlag':'1'}
}
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626320528gF';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"serialno":"201808311540580955Hy","isSend":"1",'extFields':{"errCode":"0000", "errMsg":"交易成功", "tranSt":"Y"}}
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311540580955Hy' AND PAYST='Y';", "SELECT * from cts.cts_tradequtychg WHERE REFERNO='201808311540580955Hy' AND CHANGEQUTY='-4000';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{
 "subamt":"4000",
 "paymodel":"05",
 "channel":"JX",
 "bankid":"205AE16EA606342921",
 "bankno":"105",
 "bankacco":"6222620110038594231",
 "serialno":"201808311626320766fa",
 "custno":"1538967652",
 "apkind":"922",
 "subapkind":"922001",
 "apdt":"20180228",
 "aptm":"223540",
 "workdate":"20180228",
 "tradeacco":"000621718538967655",
 "taaccountid":"475AE141EE07252223",
 "tano":"47",
 "sharetype":"A",
 "accptmd":"2",
 "branchcode":"247000",
 "distributorcode":"247",
"extFields":{'rechargeFlag':'1'}
}
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626320766fa';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"serialno":"201808311540580934WS",'extFields':{"errCode":"0001", "errMsg":"交易失败", "tranSt":"F"}}
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311540580934WS' AND PAYST='F';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{
 "subamt":"8999.12",
 "paymodel":"05",
 "channel":"JX",
 "bankid":"205AE16EA606342921",
 "bankno":"301",
 "bankacco":"6222620110038594231",
 "serialno":"201808311626320227qo",
 "custno":"1538967652",
 "apkind":"922",
 "subapkind":"922001",
 "apdt":"20180302",
 "aptm":"233540",
 "workdate":"20180302",
 "tradeacco":"000621718538967655",
 "taaccountid":"475AE141EE07252223",
 "tano":"47",
 "sharetype":"A",
 "accptmd":"1",
 "branchcode":"247000",
 "distributorcode":"247","extFields":{'rechargeFlag':'1'}
}
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626320227qo';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"serialno":"201808311540580728aC","isSend":"1",'extFields':{"errCode":"0000", "errMsg":"交易成功", "tranSt":"Y"}}
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311540580728aC' AND PAYST='Y';", "SELECT * from cts.cts_tradequtychg WHERE REFERNO='201808311540580728aC' AND CHANGEQUTY='-8999.12';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{
 "subamt":"8999.12",
 "paymodel":"05",
 "channel":"JX",
 "bankid":"205AE16EA606342921",
 "bankno":"301",
 "bankacco":"6222620110038594231",
 "serialno":"20180831162632041OT",
 "custno":"1538967652",
 "apkind":"922",
 "subapkind":"922001",
 "apdt":"20180302",
 "aptm":"233540",
 "workdate":"20180302",
 "tradeacco":"000621718538967655",
 "taaccountid":"475AE141EE07252223",
 "tano":"47",
 "sharetype":"A",
 "accptmd":"1",
 "branchcode":"247000",
 "distributorcode":"247","extFields":{'rechargeFlag':'1'}
}
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='20180831162632041OT';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"serialno":"201808311540580660UP",'extFields':{"errCode":"0001", "errMsg":"交易失败", "tranSt":"F"}}
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311540580660UP' AND PAYST='F';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{
 "subamt":"200.12",
 "paymodel":"05",
 "channel":"JX",
 "bankid":"205AE16EA606342921",
 "bankno":"302",
 "bankacco":"6222620110038594231",
 "serialno":"201808311626320146yK",
 "custno":"1538967652",
 "apkind":"922",
 "subapkind":"922001",
 "apdt":"20180501",
 "aptm":"093540",
 "workdate":"20180516",
 "tradeacco":"000621718538967655",
 "taaccountid":"475AE141EE07252223",
 "tano":"47",
 "sharetype":"A",
 "accptmd":"2",
 "branchcode":"247000",
 "distributorcode":"247","extFields":{'rechargeFlag':'1'}
}
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626320146yK';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"serialno":"201808311540580137mX","isSend":"1",'extFields':{"errCode":"0000", "errMsg":"交易成功", "tranSt":"Y"}}
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311540580137mX' AND PAYST='Y';", "SELECT * from cts.cts_tradequtychg WHERE REFERNO='201808311540580137mX' AND CHANGEQUTY='-200.12';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{
 "subamt":"200.12",
 "paymodel":"05",
 "channel":"JX",
 "bankid":"205AE16EA606342921",
 "bankno":"302",
 "bankacco":"6222620110038594231",
 "serialno":"201808311626320349Rn",
 "custno":"1538967652",
 "apkind":"922",
 "subapkind":"922001",
 "apdt":"20180501",
 "aptm":"093540",
 "workdate":"20180516",
 "tradeacco":"000621718538967655",
 "taaccountid":"475AE141EE07252223",
 "tano":"47",
 "sharetype":"A",
 "accptmd":"2",
 "branchcode":"247000",
 "distributorcode":"247","extFields":{'rechargeFlag':'1'}
}
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626320349Rn';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"serialno":"201808311540580101iS",'extFields':{"errCode":"0001", "errMsg":"交易失败", "tranSt":"F"}}
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311540580101iS' AND PAYST='F';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{
 "subamt":"5000",
 "paymodel":"05",
 "channel":"JX",
 "bankid":"205AE16EA606342921",
 "bankno":"303",
 "bankacco":"6222620110038594231",
 "serialno":"201808311626320246tN",
 "custno":"1538967652",
 "apkind":"922",
 "subapkind":"922001",
 "apdt":"20180201",
 "aptm":"093540",
 "workdate":"20180201",
 "tradeacco":"000621718538967655",
 "taaccountid":"475AE141EE07252223",
 "tano":"47",
 "sharetype":"A",
 "accptmd":"3",
 "branchcode":"247000",
 "distributorcode":"247","extFields":{'rechargeFlag':'1'}
}
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626320246tN';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"serialno":"201808311540580787ei","isSend":"1",'extFields':{"errCode":"0000", "errMsg":"交易成功", "tranSt":"Y"}}
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311540580787ei' AND PAYST='Y';", "SELECT * from cts.cts_tradequtychg WHERE REFERNO='201808311540580787ei' AND CHANGEQUTY='-5000';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{
 "subamt":"5000",
 "paymodel":"05",
 "channel":"JX",
 "bankid":"205AE16EA606342921",
 "bankno":"303",
 "bankacco":"6222620110038594231",
 "serialno":"201808311626320603Az",
 "custno":"1538967652",
 "apkind":"922",
 "subapkind":"922001",
 "apdt":"20180201",
 "aptm":"093540",
 "workdate":"20180201",
 "tradeacco":"000621718538967655",
 "taaccountid":"475AE141EE07252223",
 "tano":"47",
 "sharetype":"A",
 "accptmd":"3",
 "branchcode":"247000",
 "distributorcode":"247","extFields":{'rechargeFlag':'1'}
}
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626320603Az';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"serialno":"201808311540580912Xk",'extFields':{"errCode":"0001", "errMsg":"交易失败", "tranSt":"F"}}
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311540580912Xk' AND PAYST='F';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{
 "subamt":"500.8",
 "paymodel":"05",
 "channel":"JX",
 "bankid":"205AE16EA606342921",
 "bankno":"304",
 "bankacco":"6222620110038594231",
 "serialno":"201808311626320397vy",
 "custno":"1538967652",
 "apkind":"922",
 "subapkind":"922001",
 "apdt":"20180501",
 "aptm":"093540",
 "workdate":"20180516",
 "tradeacco":"000621718538967655",
 "taaccountid":"475AE141EE07252223",
 "tano":"47",
 "sharetype":"A",
 "accptmd":"1",
 "branchcode":"247000",
 "distributorcode":"247","extFields":{'rechargeFlag':'1'}
}
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626320397vy';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"serialno":"201808311540580301mo","isSend":"1",'extFields':{"errCode":"0000", "errMsg":"交易成功", "tranSt":"Y"}}
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311540580301mo' AND PAYST='Y';", "SELECT * from cts.cts_tradequtychg WHERE REFERNO='201808311540580301mo' AND CHANGEQUTY='-500.8';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{
 "subamt":"500.8",
 "paymodel":"05",
 "channel":"JX",
 "bankid":"205AE16EA606342921",
 "bankno":"304",
 "bankacco":"6222620110038594231",
 "serialno":"201808311626320201BX",
 "custno":"1538967652",
 "apkind":"922",
 "subapkind":"922001",
 "apdt":"20180501",
 "aptm":"093540",
 "workdate":"20180516",
  "tradeacco":"000621718538967655",
 "taaccountid":"475AE141EE07252223",
 "tano":"47",
 "sharetype":"A",
 "accptmd":"1",
 "branchcode":"247000",
 "distributorcode":"247","extFields":{'rechargeFlag':'1'}
}
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626320201BX';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"serialno":"201808311540580222qV",'extFields':{"errCode":"0001", "errMsg":"交易失败", "tranSt":"F"}}
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311540580222qV' AND PAYST='F';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{
 "subamt":"1001",
 "paymodel":"05",
 "channel":"JX",
 "bankid":"205AE16EA606342921",
 "bankno":"305",
 "bankacco":"6222620110038594231",
 "serialno":"201808311626320318yQ",
 "custno":"1538967652",
 "apkind":"922",
 "subapkind":"922001",
 "apdt":"20181201",
 "aptm":"093540",
 "workdate":"20181201",
 "tradeacco":"000621718538967655",
 "taaccountid":"475AE141EE07252223",
 "tano":"47",
 "sharetype":"A",
 "accptmd":"1",
 "branchcode":"247000",
 "distributorcode":"247","extFields":{'rechargeFlag':'1'}
}
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626320318yQ';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"serialno":"20180831154058083We","isSend":"1",'extFields':{"errCode":"0000", "errMsg":"交易成功", "tranSt":"Y"}}
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='20180831154058083We' AND PAYST='Y';", "SELECT * from cts.cts_tradequtychg WHERE REFERNO='20180831154058083We' AND CHANGEQUTY='-1001';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{
 "subamt":"1001",
 "paymodel":"05",
 "channel":"JX",
 "bankid":"205AE16EA606342921",
 "bankno":"305",
 "bankacco":"6222620110038594231",
 "serialno":"201808311626320367YN",
 "custno":"1538967652",
 "apkind":"922",
 "subapkind":"922001",
 "apdt":"20181201",
 "aptm":"093540",
 "workdate":"20181201",
 "tradeacco":"000621718538967655",
 "taaccountid":"475AE141EE07252223",
 "tano":"47",
 "sharetype":"A",
 "accptmd":"1",
 "branchcode":"247000",
 "distributorcode":"247","extFields":{'rechargeFlag':'1'}
}
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626320367YN';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"serialno":"201808311540580588hR",'extFields':{"errCode":"0001", "errMsg":"交易失败", "tranSt":"F"}}
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311540580588hR' AND PAYST='F';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{
 "subamt":"5000",
 "paymodel":"05",
 "channel":"JX",
 "bankid":"205B0CF78550959969",
 "bankno":"306",
 "bankacco":"6222620110038594231",
 "serialno":"201808311626320953hZ",
 "custno":"1604578759",
 "apkind":"922",
 "subapkind":"922001",
 "apdt":"20180516",
 "aptm":"093540",
 "workdate":"20180516",
 "tradeacco":"001035098604578762",
 "taaccountid":"475B0CB66D40432285",
 "tano":"47",
 "sharetype":"A",
 "accptmd":"1",
 "branchcode":"247000",
 "distributorcode":"247",
"extFields":{'rechargeFlag':'1'}
}
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626320953hZ';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"serialno":"201808311540580980zj","isSend":"1",'extFields':{"errCode":"0000", "errMsg":"交易成功", "tranSt":"Y"}}
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311540580980zj' AND PAYST='Y';", "SELECT * from cts.cts_tradequtychg WHERE REFERNO='201808311540580980zj' AND CHANGEQUTY='-5000';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{
 "subamt":"5000",
 "paymodel":"05",
 "channel":"JX",
 "bankid":"205B0CF78550959969",
 "bankno":"306",
 "bankacco":"6222620110038594231",
 "serialno":"201808311626320472Yr",
 "custno":"1604578759",
 "apkind":"922",
 "subapkind":"922001",
 "apdt":"20180516",
 "aptm":"093540",
 "workdate":"20180516",
 "tradeacco":"001035098604578762",
 "taaccountid":"475B0CB66D40432285",
 "tano":"47",
 "sharetype":"A",
 "accptmd":"1",
 "branchcode":"247000",
 "distributorcode":"247",
"extFields":{'rechargeFlag':'1'}
}
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626320472Yr';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"serialno":"201808311540580931RS",'extFields':{"errCode":"0001", "errMsg":"交易失败", "tranSt":"F"}}
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311540580931RS' AND PAYST='F';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{
 "subamt":"400",
 "paymodel":"05",
 "channel":"JX",
 "bankid":"205B0CF78550959969",
 "bankno":"307",
 "bankacco":"6222620110038594231",
 "serialno":"201808311626320305cA",
 "custno":"1604578759",
 "apkind":"922",
 "subapkind":"922001",
 "apdt":"20180516",
 "aptm":"093540",
 "workdate":"20180516",
 "tradeacco":"001035098604578762",
 "taaccountid":"475B0CB66D40432285",
 "tano":"47",
 "sharetype":"A",
 "accptmd":"1",
 "branchcode":"247000",
 "distributorcode":"247",
"extFields":{'rechargeFlag':'1'}
}
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626320305cA';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"serialno":"201808311540580832TP","isSend":"1",'extFields':{"errCode":"0000", "errMsg":"交易成功", "tranSt":"Y"}}
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311540580832TP' AND PAYST='Y';", "SELECT * from cts.cts_tradequtychg WHERE REFERNO='201808311540580832TP' AND CHANGEQUTY='-400';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{
 "subamt":"400",
 "paymodel":"05",
 "channel":"JX",
 "bankid":"205B0CF78550959969",
 "bankno":"307",
 "bankacco":"6222620110038594231",
 "serialno":"201808311626320831cS",
 "custno":"1604578759",
 "apkind":"922",
 "subapkind":"922001",
 "apdt":"20180516",
 "aptm":"093540",
 "workdate":"20180516",
 "tradeacco":"001035098604578762",
 "taaccountid":"475B0CB66D40432285",
 "tano":"47",
 "sharetype":"A",
 "accptmd":"1",
 "branchcode":"247000",
 "distributorcode":"247",
"extFields":{'rechargeFlag':'1'}
}
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626320831cS';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"serialno":"201808311540580934VM",'extFields':{"errCode":"0001", "errMsg":"交易失败", "tranSt":"F"}}
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311540580934VM' AND PAYST='F';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{
 "subamt":"50000.9",
 "paymodel":"05",
 "channel":"JX",
 "bankid":"205B0CF78550959969",
 "bankno":"308",
 "bankacco":"6222620110038594231",
 "serialno":"201808311626320366ki",
 "custno":"1604578759",
 "apkind":"922",
 "subapkind":"922001",
 "apdt":"20180516",
 "aptm":"093540",
 "workdate":"20180516",
 "tradeacco":"001035098604578762",
 "taaccountid":"475B0CB66D40432285",
 "tano":"47",
 "sharetype":"A",
 "accptmd":"1",
 "branchcode":"247000",
 "distributorcode":"247",
"extFields":{'rechargeFlag':'1'}
}
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626320366ki';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"serialno":"201808311540580678vI","isSend":"1",'extFields':{"errCode":"0000", "errMsg":"交易成功", "tranSt":"Y"}}
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311540580678vI' AND PAYST='Y';", "SELECT * from cts.cts_tradequtychg WHERE REFERNO='201808311540580678vI' AND CHANGEQUTY='-50000.9';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{
 "subamt":"5000",
 "paymodel":"05",
 "channel":"JX",
 "bankid":"205B0CF78550959969",
 "bankno":"308",
 "bankacco":"6222620110038594231",
 "serialno":"201808311626320134bL",
 "custno":"1604578759",
 "apkind":"922",
 "subapkind":"922001",
 "apdt":"20180516",
 "aptm":"093540",
 "workdate":"20180516",
 "tradeacco":"001035098604578762",
 "taaccountid":"475B0CB66D40432285",
 "tano":"47",
 "sharetype":"A",
 "accptmd":"1",
 "branchcode":"247000",
 "distributorcode":"247",
"extFields":{'rechargeFlag':'1'}
}
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626320134bL';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"serialno":"201808311540580734Bs",'extFields':{"errCode":"0001", "errMsg":"交易失败", "tranSt":"F"}}
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311540580734Bs' AND PAYST='F';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{
 "subamt":"1000.00",
 "paymodel":"05",
 "channel":"JX",
 "bankid":"205B0CF78550959969",
 "bankno":"309",
 "bankacco":"6222620110038594231",
 "serialno":"201808311626320908rf",
 "custno":"1604578759",
 "apkind":"922",
 "subapkind":"922001",
 "apdt":"20180516",
 "aptm":"093540",
 "workdate":"20180516",
 "tradeacco":"001035098604578762",
 "taaccountid":"475B0CB66D40432285",
 "tano":"47",
 "sharetype":"A",
 "accptmd":"1",
 "branchcode":"247000",
 "distributorcode":"247",
"extFields":{'rechargeFlag':'1'}
}
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626320908rf';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"serialno":"201808311540580425Gp","isSend":"1",'extFields':{"errCode":"0000", "errMsg":"交易成功", "tranSt":"Y"}}
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311540580425Gp' AND PAYST='Y';", "SELECT * from cts.cts_tradequtychg WHERE REFERNO='201808311540580425Gp' AND CHANGEQUTY='-1000.00';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{
 "subamt":"5000",
 "paymodel":"05",
 "channel":"JX",
 "bankid":"205B0CF78550959969",
 "bankno":"309",
 "bankacco":"6222620110038594231",
 "serialno":"201808311626320754dJ",
 "custno":"1604578759",
 "apkind":"922",
 "subapkind":"922001",
 "apdt":"20180516",
 "aptm":"093540",
 "workdate":"20180516",
 "tradeacco":"001035098604578762",
 "taaccountid":"475B0CB66D40432285",
 "tano":"47",
 "sharetype":"A",
 "accptmd":"1",
 "branchcode":"247000",
 "distributorcode":"247",
"extFields":{'rechargeFlag':'1'}
}
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626320754dJ';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"serialno":"201808311540580669Eu",'extFields':{"errCode":"0001", "errMsg":"交易失败", "tranSt":"F"}}
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311540580669Eu' AND PAYST='F';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{
 "subamt":"222",
 "paymodel":"05",
 "channel":"JX",
 "bankid":"205B0CF78550959969",
 "bankno":"310",
 "bankacco":"6222620110038594231",
 "serialno":"201808311626320827SU",
 "custno":"1604578759",
 "apkind":"922",
 "subapkind":"922001",
 "apdt":"20180516",
 "aptm":"093540",
 "workdate":"20180516",
 "tradeacco":"001035098604578762",
 "taaccountid":"475B0CB66D40432285",
 "tano":"47",
 "sharetype":"A",
 "accptmd":"1",
 "branchcode":"247000",
 "distributorcode":"247",
"extFields":{'rechargeFlag':'1'}
}
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626320827SU';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"serialno":"201808311540580841Qy","isSend":"1",'extFields':{"errCode":"0000", "errMsg":"交易成功", "tranSt":"Y"}}
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311540580841Qy' AND PAYST='Y';", "SELECT * from cts.cts_tradequtychg WHERE REFERNO='201808311540580841Qy' AND CHANGEQUTY='-222';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{
 "subamt":"5000",
 "paymodel":"05",
 "channel":"JX",
 "bankid":"205B0CF78550959969",
 "bankno":"310",
 "bankacco":"6222620110038594231",
 "serialno":"20180831162632048MY",
 "custno":"1604578759",
 "apkind":"922",
 "subapkind":"922001",
 "apdt":"20180516",
 "aptm":"093540",
 "workdate":"20180516",
 "tradeacco":"001035098604578762",
 "taaccountid":"475B0CB66D40432285",
 "tano":"47",
 "sharetype":"A",
 "accptmd":"1",
 "branchcode":"247000",
 "distributorcode":"247",
"extFields":{'rechargeFlag':'1'}
}
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='20180831162632048MY';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"serialno":"201808311540580377JD",'extFields':{"errCode":"0001", "errMsg":"交易失败", "tranSt":"F"}}
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311540580377JD' AND PAYST='F';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{
 "subamt":"555",
 "paymodel":"05",
 "channel":"JX",
 "bankid":"205B0CF78550959969",
 "bankno":"403",
 "bankacco":"6222620110038594231",
 "serialno":"201808311626320866lF",
 "custno":"1604578759",
 "apkind":"922",
 "subapkind":"922001",
 "apdt":"20180516",
 "aptm":"093540",
 "workdate":"20180516",
 "tradeacco":"001035098604578762",
 "taaccountid":"475B0CB66D40432285",
 "tano":"47",
 "sharetype":"A",
 "accptmd":"1",
 "branchcode":"247000",
 "distributorcode":"247",
"extFields":{'rechargeFlag':'1'}
}
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626320866lF';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"serialno":"201808311540580161Mo","isSend":"1",'extFields':{"errCode":"0000", "errMsg":"交易成功", "tranSt":"Y"}}
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311540580161Mo' AND PAYST='Y';", "SELECT * from cts.cts_tradequtychg WHERE REFERNO='201808311540580161Mo' AND CHANGEQUTY='-555';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{
 "subamt":"5000",
 "paymodel":"05",
 "channel":"JX",
 "bankid":"205B0CF78550959969",
 "bankno":"403",
 "bankacco":"6222620110038594231",
 "serialno":"201808311626320485CD",
 "custno":"1604578759",
 "apkind":"922",
 "subapkind":"922001",
 "apdt":"20180516",
 "aptm":"093540",
 "workdate":"20180516",
 "tradeacco":"001035098604578762",
 "taaccountid":"475B0CB66D40432285",
 "tano":"47",
 "sharetype":"A",
 "accptmd":"1",
 "branchcode":"247000",
 "distributorcode":"247",
"extFields":{'rechargeFlag':'1'}
}
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626320485CD';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"serialno":"201808311540580361ff",'extFields':{"errCode":"0001", "errMsg":"交易失败", "tranSt":"F"}}
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311540580361ff' AND PAYST='F';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{
 "subamt":"5005.1",
 "paymodel":"05",
 "channel":"JX",
 "bankid":"205B0CF78550959969",
 "bankno":"810",
 "bankacco":"6222620110038594231",
 "serialno":"201808311626320924ia",
 "custno":"1604578759",
 "apkind":"922",
 "subapkind":"922001",
 "apdt":"20180516",
 "aptm":"093540",
 "workdate":"20180516",
 "tradeacco":"001035098604578762",
 "taaccountid":"475B0CB66D40432285",
 "tano":"47",
 "sharetype":"A",
 "accptmd":"1",
 "branchcode":"247000",
 "distributorcode":"247",
"extFields":{'rechargeFlag':'1'}
}
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626320924ia';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"serialno":"201808311540580835sh","isSend":"1",'extFields':{"errCode":"0000", "errMsg":"交易成功", "tranSt":"Y"}}
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311540580835sh' AND PAYST='Y';", "SELECT * from cts.cts_tradequtychg WHERE REFERNO='201808311540580835sh' AND CHANGEQUTY='-5005.1';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{
 "subamt":"5000",
 "paymodel":"05",
 "channel":"JX",
 "bankid":"205B0CF78550959969",
 "bankno":"810",
 "bankacco":"6222620110038594231",
 "serialno":"201808311626320838sr",
 "custno":"1604578759",
 "apkind":"922",
 "subapkind":"922001",
 "apdt":"20180516",
 "aptm":"093540",
 "workdate":"20180516",
 "tradeacco":"001035098604578762",
 "taaccountid":"475B0CB66D40432285",
 "tano":"47",
 "sharetype":"A",
 "accptmd":"1",
 "branchcode":"247000",
 "distributorcode":"247",
"extFields":{'rechargeFlag':'1'}
}
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626320838sr';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"serialno":"201808311540580873ER",'extFields':{"errCode":"0001", "errMsg":"交易失败", "tranSt":"F"}}
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311540580873ER' AND PAYST='F';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{
 "subamt":"65555",
 "paymodel":"05",
 "channel":"JX",
 "bankid":"205B0CF78550959969",
 "bankno":"811",
 "bankacco":"6222620110038594231",
 "serialno":"201808311626320334Ea",
 "custno":"1604578759",
 "apkind":"922",
 "subapkind":"922001",
 "apdt":"20180516",
 "aptm":"093540",
 "workdate":"20180516",
 "tradeacco":"001035098604578762",
 "taaccountid":"475B0CB66D40432285",
 "tano":"47",
 "sharetype":"A",
 "accptmd":"1",
 "branchcode":"247000",
 "distributorcode":"247",
"extFields":{'rechargeFlag':'1'}
}
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626320334Ea';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"serialno":"201808311540580999Ux","isSend":"1",'extFields':{"errCode":"0000", "errMsg":"交易成功", "tranSt":"Y"}}
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311540580999Ux' AND PAYST='Y';", "SELECT * from cts.cts_tradequtychg WHERE REFERNO='201808311540580999Ux' AND CHANGEQUTY='-65555';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{
 "subamt":"5000",
 "paymodel":"05",
 "channel":"JX",
 "bankid":"205B0CF78550959969",
 "bankno":"811",
 "bankacco":"6222620110038594231",
 "serialno":"201808311626320172Ih",
 "custno":"1604578759",
 "apkind":"922",
 "subapkind":"922001",
 "apdt":"20180516",
 "aptm":"093540",
 "workdate":"20180516",
 "tradeacco":"001035098604578762",
 "taaccountid":"475B0CB66D40432285",
 "tano":"47",
 "sharetype":"A",
 "accptmd":"1",
 "branchcode":"247000",
 "distributorcode":"247",
"extFields":{'rechargeFlag':'1'}
}
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626320172Ih';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"serialno":"201808311540580452WV",'extFields':{"errCode":"0001", "errMsg":"交易失败", "tranSt":"F"}}
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311540580452WV' AND PAYST='F';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{
 "subamt":"5000",
 "paymodel":"05",
 "channel":"JX",
 "bankid":"205B0CF78550959969",
 "bankno":"813",
 "bankacco":"6222620110038594231",
 "serialno":"201808311626320120hg",
 "custno":"1604578759",
 "apkind":"922",
 "subapkind":"922001",
 "apdt":"20180516",
 "aptm":"093540",
 "workdate":"20180516",
 "tradeacco":"001035098604578762",
 "taaccountid":"475B0CB66D40432285",
 "tano":"47",
 "sharetype":"A",
 "accptmd":"1",
 "branchcode":"247000",
 "distributorcode":"247",
"extFields":{'rechargeFlag':'1'}
}
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626320120hg';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"serialno":"201808311540580576Rb","isSend":"1",'extFields':{"errCode":"0000", "errMsg":"交易成功", "tranSt":"Y"}}
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311540580576Rb' AND PAYST='Y';", "SELECT * from cts.cts_tradequtychg WHERE REFERNO='201808311540580576Rb' AND CHANGEQUTY='-5000';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{
 "subamt":"5000",
 "paymodel":"05",
 "channel":"JX",
 "bankid":"205B0CF78550959969",
 "bankno":"813",
 "bankacco":"6222620110038594231",
 "serialno":"201808311626320547Pr",
 "custno":"1604578759",
 "apkind":"922",
 "subapkind":"922001",
 "apdt":"20180516",
 "aptm":"093540",
 "workdate":"20180516",
 "tradeacco":"001035098604578762",
 "taaccountid":"475B0CB66D40432285",
 "tano":"47",
 "sharetype":"A",
 "accptmd":"1",
 "branchcode":"247000",
 "distributorcode":"247",
"extFields":{'rechargeFlag':'1'}
}
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626320547Pr';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"serialno":"201808311540580364UT",'extFields':{"errCode":"0001", "errMsg":"交易失败", "tranSt":"F"}}
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311540580364UT' AND PAYST='F';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{
 "subamt":"3900.67",
 "paymodel":"05",
 "channel":"JX",
 "bankid":"205B0CF78550959969",
 "bankno":"973",
 "bankacco":"6222620110038594231",
 "serialno":"20180831162632061uB",
 "custno":"1604578759",
 "apkind":"922",
 "subapkind":"922001",
 "apdt":"20180516",
 "aptm":"093540",
 "workdate":"20180516",
 "tradeacco":"001035098604578762",
 "taaccountid":"475B0CB66D40432285",
 "tano":"47",
 "sharetype":"A",
 "accptmd":"1",
 "branchcode":"247000",
 "distributorcode":"247",
"extFields":{'rechargeFlag':'1'}
}
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='20180831162632061uB';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"serialno":"201808311540580518AA","isSend":"1",'extFields':{"errCode":"0000", "errMsg":"交易成功", "tranSt":"Y"}}
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311540580518AA' AND PAYST='Y';", "SELECT * from cts.cts_tradequtychg WHERE REFERNO='201808311540580518AA' AND CHANGEQUTY='-3900.67';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{
 "subamt":"5000",
 "paymodel":"05",
 "channel":"JX",
 "bankid":"205B0CF78550959969",
 "bankno":"973",
 "bankacco":"6222620110038594231",
 "serialno":"201808311626320322pE",
 "custno":"1604578759",
 "apkind":"922",
 "subapkind":"922001",
 "apdt":"20180516",
 "aptm":"093540",
 "workdate":"20180516",
 "tradeacco":"001035098604578762",
 "taaccountid":"475B0CB66D40432285",
 "tano":"47",
 "sharetype":"A",
 "accptmd":"1",
 "branchcode":"247000",
 "distributorcode":"247",
"extFields":{'rechargeFlag':'1'}
}
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626320322pE';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"serialno":"201808311540580571Nt",'extFields':{"errCode":"0001", "errMsg":"交易失败", "tranSt":"F"}}
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311540580571Nt' AND PAYST='F';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{
 "subamt":"3500",
 "paymodel":"05",
 "channel":"JX",
 "bankid":"205B0CF78550959969",
 "bankno":"970",
 "bankacco":"6222620110038594231",
 "serialno":"201808311626320413sw",
 "custno":"1604578759",
 "apkind":"922",
 "subapkind":"922001",
 "apdt":"20180516",
 "aptm":"093540",
 "workdate":"20180516",
 "tradeacco":"001035098604578762",
 "taaccountid":"475B0CB66D40432285",
 "tano":"47",
 "sharetype":"A",
 "accptmd":"1",
 "branchcode":"247000",
 "distributorcode":"247",
"extFields":{'rechargeFlag':'1'}
}
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626320413sw';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"serialno":"201808311540580576Sj","isSend":"1",'extFields':{"errCode":"0000", "errMsg":"交易成功", "tranSt":"Y"}}
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311540580576Sj' AND PAYST='Y';", "SELECT * from cts.cts_tradequtychg WHERE REFERNO='201808311540580576Sj' AND CHANGEQUTY='-3500';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{
 "subamt":"5000",
 "paymodel":"05",
 "channel":"JX",
 "bankid":"205B0CF78550959969",
 "bankno":"970",
 "bankacco":"6222620110038594231",
 "serialno":"201808311626320409GW",
 "custno":"1604578759",
 "apkind":"922",
 "subapkind":"922001",
 "apdt":"20180516",
 "aptm":"093540",
 "workdate":"20180516",
 "tradeacco":"001035098604578762",
 "taaccountid":"475B0CB66D40432285",
 "tano":"47",
 "sharetype":"A",
 "accptmd":"1",
 "branchcode":"247000",
 "distributorcode":"247",
"extFields":{'rechargeFlag':'1'}
}
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626320409GW';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"serialno":"201808311540580106lv",'extFields':{"errCode":"0001", "errMsg":"交易失败", "tranSt":"F"}}
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311540580106lv' AND PAYST='F';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{
 "subamt":"5000",
 "paymodel":"05",
 "channel":"JX",
 "bankid":"205B0CF78550959969",
 "bankno":"974",
 "bankacco":"6222620110038594231",
 "serialno":"201808311626320645Cz",
 "custno":"1604578759",
 "apkind":"922",
 "subapkind":"922001",
 "apdt":"20180516",
 "aptm":"093540",
 "workdate":"20180516",
 "tradeacco":"001035098604578762",
 "taaccountid":"475B0CB66D40432285",
 "tano":"47",
 "sharetype":"A",
 "accptmd":"1",
 "branchcode":"247000",
 "distributorcode":"247",
"extFields":{'rechargeFlag':'1'}
}
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626320645Cz';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"serialno":"201808311540580154Mj","isSend":"1",'extFields':{"errCode":"0000", "errMsg":"交易成功", "tranSt":"Y"}}
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311540580154Mj' AND PAYST='Y';", "SELECT * from cts.cts_tradequtychg WHERE REFERNO='201808311540580154Mj' AND CHANGEQUTY='-5000';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{
 "subamt":"5000",
 "paymodel":"05",
 "channel":"JX",
 "bankid":"205B0CF78550959969",
 "bankno":"974",
 "bankacco":"6222620110038594231",
 "serialno":"201808311626320848jQ",
 "custno":"1604578759",
 "apkind":"922",
 "subapkind":"922001",
 "apdt":"20180516",
 "aptm":"093540",
 "workdate":"20180516",
 "tradeacco":"001035098604578762",
 "taaccountid":"475B0CB66D40432285",
 "tano":"47",
 "sharetype":"A",
 "accptmd":"1",
 "branchcode":"247000",
 "distributorcode":"247",
"extFields":{'rechargeFlag':'1'}
}
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626320848jQ';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"serialno":"20180831154058046Qb",'extFields':{"errCode":"0001", "errMsg":"交易失败", "tranSt":"F"}}
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='20180831154058046Qb' AND PAYST='F';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{
 "subamt":"40000.12",
 "paymodel":"05",
 "channel":"JX",
 "bankid":"205B0CF78550959969",
 "bankno":"315",
 "bankacco":"6222620110038594231",
 "serialno":"201808311626320805Ti",
 "custno":"1604578759",
 "apkind":"922",
 "subapkind":"922001",
 "apdt":"20180516",
 "aptm":"093540",
 "workdate":"20180516",
 "tradeacco":"001035098604578762",
 "taaccountid":"475B0CB66D40432285",
 "tano":"47",
 "sharetype":"A",
 "accptmd":"1",
 "branchcode":"247000",
 "distributorcode":"247",
"extFields":{'rechargeFlag':'1'}
}
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626320805Ti';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"serialno":"201808311540580869dj","isSend":"1",'extFields':{"errCode":"0000", "errMsg":"交易成功", "tranSt":"Y"}}
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311540580869dj' AND PAYST='Y';", "SELECT * from cts.cts_tradequtychg WHERE REFERNO='201808311540580869dj' AND CHANGEQUTY='-40000.12';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{
 "subamt":"5000",
 "paymodel":"05",
 "channel":"JX",
 "bankid":"205B0CF78550959969",
 "bankno":"315",
 "bankacco":"6222620110038594231",
 "serialno":"201808311626320786MF",
 "custno":"1604578759",
 "apkind":"922",
 "subapkind":"922001",
 "apdt":"20180516",
 "aptm":"093540",
 "workdate":"20180516",
 "tradeacco":"001035098604578762",
 "taaccountid":"475B0CB66D40432285",
 "tano":"47",
 "sharetype":"A",
 "accptmd":"1",
 "branchcode":"247000",
 "distributorcode":"247",
"extFields":{'rechargeFlag':'1'}
}
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626320786MF';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"serialno":"20180831154058068Ng",'extFields':{"errCode":"0001", "errMsg":"交易失败", "tranSt":"F"}}
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='20180831154058068Ng' AND PAYST='F';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{
 "subamt":"40￥2",
 "paymodel":"05",
 "channel":"JX",
 "bankid":"205AE16EA606342921",
 "bankno":"315",
 "bankacco":"6222620110038594231",
 "serialno":"201808311626320494cO",
 "custno":"1538967652",
 "apkind":"922",
 "subapkind":"922001",
 "apdt":"20180501",
 "aptm":"093540",
 "workdate":"20180516",
 "tradeacco":"008395590573718304",
 "taaccountid":"475AF52F9665610507",
 "tano":"47",
 "sharetype":"A",
 "accptmd":"1",
 "branchcode":"247000",
 "distributorcode":"247","extFields":{'rechargeFlag':'1'}
}
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
""
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{
 "subamt":"1200",
 "paymodel":"05",
 "channel":"JX",
 "bankid":"205AE16EA606342921",
 "bankno":"315",
 "bankacco":"6222620110038594231",
 "serialno":"2018083116263207Ci",
 "custno":"1538967654",
 "apkind":"922",
 "subapkind":"922001",
 "apdt":"20180501",
 "aptm":"093540",
 "workdate":"20180516",
 "tradeacco":"008395590573718304",
 "taaccountid":"475AF52F9665610507",
 "tano":"47",
 "sharetype":"A",
 "accptmd":"1",
 "branchcode":"247000",
 "distributorcode":"247","extFields":{'rechargeFlag':'1'}
}
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
""
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{
 "subamt":"1200",
 "paymodel":"05",
 "channel":"JX",
 "bankid":"205AE16EA606342921",
 "bankno":"315",
 "bankacco":"6222620110038594231",
 "serialno":"201808311626320344pG",
 "custno":"1538",
 "apkind":"922",
 "subapkind":"922001",
 "apdt":"20180501",
 "aptm":"093540",
 "workdate":"20180516",
 "tradeacco":"008395590573718304",
 "taaccountid":"475AF52F9665610507",
 "tano":"47",
 "sharetype":"A",
 "accptmd":"1",
 "branchcode":"247000",
 "distributorcode":"247","extFields":{'rechargeFlag':'1'}
}
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
""
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"subquty":"100",
        "bankid":"205AE16EA606342921",
        "paymodel":"04",
        "channel":"JX",       "returnUrl":"https://www5.91wutong.com/acco/yhcgTrade/drawCashResult.htm",
        "routeCode":"1",        "forgetPwdUrl":"https://www5.91wutong.com/user/account/passwordResetJx.htm",
        "serialno":"201808311626320392Ec",
        "custno":"1538967652",
        "apkind":"952",
        "subapkind":"952001",
        "apdt":"20180525",
        "aptm":"155807",
        "workdate":"20180525",
        "tradeacco":"000621718538967655",
 "taaccountid":"475AE141EE07252223",
        "tano":"47",
        "sharetype":"A",
        "accptmd":"1",
        "branchcode":"247000",
        "distributorcode":"247"}
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626320392Ec';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"serialno":"201808311540580304Bh",'extFields':{"errCode":"0000", "errMsg":"交易成功", "tranSt":"Y"}}
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311540580304Bh' AND PAYST='Y';", "SELECT * from cts.cts_tradequtychg WHERE REFERNO='201808311540580304Bh'  AND CHANGEQUTY='1000';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"subquty":"100",
        "bankid":"205AE16EA606342921",
        "paymodel":"04",
        "channel":"JX",       "returnUrl":"https://www5.91wutong.com/acco/yhcgTrade/drawCashResult.htm",
        "routeCode":"1",        "forgetPwdUrl":"https://www5.91wutong.com/user/account/passwordResetJx.htm",
        "serialno":"201808311626320538Pp",
        "custno":"1538967652",
        "apkind":"952",
        "subapkind":"952001",
        "apdt":"20180525",
        "aptm":"155807",
        "workdate":"20180525",
        "tradeacco":"000621718538967655",
 "taaccountid":"475AE141EE07252223",
        "tano":"47",
        "sharetype":"A",
        "accptmd":"1",
        "branchcode":"247000",
        "distributorcode":"247"}
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626320538Pp';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"serialno":"201808311540580628FF",'extFields':{"errCode":"0001", "errMsg":"交易失败", "tranSt":"F"}}
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311540580628FF' AND PAYST='F';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"subquty":"10 0",
        "bankid":"205B0CF78550959969",
        "paymodel":"04",
        "channel":"JX",       "returnUrl":"https://www5.91wutong.com/acco/yhcgTrade/drawCashResult.htm",
        "routeCode":"1",        "forgetPwdUrl":"https://www5.91wutong.com/user/account/passwordResetJx.htm",
        "serialno":"201808311626320283cV",
        "custno":"1604578759",
        "apkind":"952",
        "subapkind":"952001",
        "apdt":"20180525",
        "aptm":"155807",
        "workdate":"20180525",
         "tradeacco":"001035098604578762",
        "taaccountid":"475B0CB66D40432285",
        "tano":"47",
        "sharetype":"A",
        "accptmd":"1",
        "branchcode":"247000",
        "distributorcode":"247"}
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626320283cV';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{ "subquty":"1%00",
        "bankid":"205B0CF78550959969",
        "paymodel":"04",
        "channel":"JX",
        "returnUrl":"https://www5.91wutong.com/acco/yhcgTrade/drawCashResult.htm",
        "routeCode":"1",
        "forgetPwdUrl":"https://www5.91wutong.com/user/account/passwordResetJx.htm",
        "serialno":"20180831162632095Dx",
        "custno":"1604578759",
        "apkind":"952",
        "subapkind":"952001",
        "apdt":"20180525",
        "aptm":"155807",
        "workdate":"20180525",
        "tradeacco":"001035098604578762",
        "taaccountid":"475B0CB66D40432285",
        "tano":"47",
        "sharetype":"A",
        "accptmd":"1",
        "branchcode":"247000",
        "distributorcode":"247"}
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='20180831162632095Dx';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{ "subquty":"110000",
        "bankid":"205AF2D52899667599",
        "paymodel":"04",
        "channel":"JX",
        "returnUrl":"https://www5.91wutong.com/acco/yhcgTrade/drawCashResult.htm",
        "routeCode":"1",
        "forgetPwdUrl":"https://www5.91wutong.com/user/account/passwordResetJx.htm",
        "serialno":"201808311626320359vi",
        "custno":"1538965327",
        "apkind":"952",
        "subapkind":"952001",
        "apdt":"20180525",
        "aptm":"215807",
        "workdate":"20180525",
       "tradeacco":"000621718538965330",
        "taaccountid":"475AD0470C45319298",
        "tano":"47",
        "sharetype":"A",
        "accptmd":"1",
        "branchcode":"247000",
        "distributorcode":"247"}
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626320359vi';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{ "subquty":"10.123",
        "bankid":"205AF2D52899667599",
        "paymodel":"04",
        "channel":"JX",
        "returnUrl":"https://www5.91wutong.com/acco/yhcgTrade/drawCashResult.htm",
        "routeCode":"1",
        "forgetPwdUrl":"https://www5.91wutong.com/user/account/passwordResetJx.htm",
        "serialno":"201808311626320769gK",
        "custno":"1538965327123",
        "apkind":"952",
        "subapkind":"952001",
        "apdt":"20180525",
        "aptm":"215807",
        "workdate":"20180525",
        "tradeacco":"000621718538965330",
        "taaccountid":"475AD0470C45319298",
        "tano":"47",
        "sharetype":"A",
        "accptmd":"1",
        "branchcode":"247000",
        "distributorcode":"247"}
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626320769gK';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"subquty":"10",
        "bankid":"205AF2D52899667599",
        "paymodel":"04",
        "channel":"JX",
        "returnUrl":"https://www5.91wutong.com/acco/yhcgTrade/drawCashResult.htm",
        "routeCode":"1",
        "forgetPwdUrl":"https://www5.91wutong.com/user/account/passwordResetJx.htm",
        "serialno":"201808311626320682Tj",
        "custno":"1538967652",
        "apkind":"924",
        "subapkind":"924001",
        "apdt":"20180525",
        "aptm":"215807",
        "workdate":"20180525",
        "tradeacco":"000621718538965330",
        "taaccountid":"475AD0470C45319298",
        "tano":"47",
        "sharetype":"A",
        "accptmd":"1",
        "branchcode":"247000",
        "distributorcode":"247"}
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626320682Tj';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{ "subquty":"10",
        "bankid":"205AE16EA606342921",
        "paymodel":"04",
        "channel":"JX",
        "returnUrl":"https://www5.91wutong.com/acco/yhcgTrade/drawCashResult.htm",
        "routeCode":"1",
        "forgetPwdUrl":"https://www5.91wutong.com/user/account/passwordResetJx.htm",
        "serialno":"201808311626320194ra",
        "custno":"1538967652",
        "apkind":"924",
        "subapkind":"924001",
        "apdt":"20180525",
        "aptm":"215807",
        "workdate":"20180525",
       "tradeacco":"000621718538967655",
 "taaccountid":"475AE141EE07252223",
        "tano":"47",
        "sharetype":"A",
        "accptmd":"1",
        "branchcode":"247000",
        "distributorcode":"247"}
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626320194ra';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"serialno":"20180831154058033QG",'extFields':{"errCode":"0000", "errMsg":"交易成功", "tranSt":"Y"}}
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='20180831154058033QG' AND PAYST='Y';", "SELECT * from cts.cts_tradequtychg WHERE REFERNO='20180831154058033QG' AND CHANGEQUTY='10';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{ "subquty":"10",
        "bankid":"205AE16EA606342921",
        "paymodel":"04",
        "channel":"JX",
        "returnUrl":"https://www5.91wutong.com/acco/yhcgTrade/drawCashResult.htm",
        "routeCode":"1",
        "forgetPwdUrl":"https://www5.91wutong.com/user/account/passwordResetJx.htm",
        "serialno":"20180831162632066Uh",
        "custno":"1538967652",
        "apkind":"924",
        "subapkind":"924001",
        "apdt":"20180525",
        "aptm":"215807",
        "workdate":"20180525",
       "tradeacco":"000621718538967655",
 "taaccountid":"475AE141EE07252223",
        "tano":"47",
        "sharetype":"A",
        "accptmd":"1",
        "branchcode":"247000",
        "distributorcode":"247"}
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='20180831162632066Uh';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"serialno":"201808311540580624uo",'extFields':{"errCode":"0001", "errMsg":"交易失败", "tranSt":"F"}}
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311540580624uo' AND PAYST='F';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"subquty":"10",
        "bankid":"205AE16EA606342921",
        "paymodel":"04",
        "channel":"JX",
        "returnUrl":"https://www5.91wutong.com/acco/yhcgTrade/drawCashResult.htm",
        "routeCode":"1",
        "forgetPwdUrl":"https://www5.91wutong.com/user/account/passwordResetJx.htm",
        "serialno":"201808311626320270MF",
        "custno":"1538967652",
        "apkind":"943",
        "subapkind":"943001",
        "apdt":"20180525",
        "aptm":"215807",
        "workdate":"20180525",
         "tradeacco":"000621718538967655",
 "taaccountid":"475AE141EE07252223",
        "tano":"47",
        "sharetype":"A",
        "accptmd":"3",
        "branchcode":"247000",
        "distributorcode":"247"}
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626320270MF';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{ "subquty":"10",
        "bankid":"205AE16EA606342921",
        "paymodel":"04",
        "channel":"JX",
        "returnUrl":"https://www5.91wutong.com/acco/yhcgTrade/drawCashResult.htm",
        "routeCode":"1",
        "forgetPwdUrl":"https://www5.91wutong.com/user/account/passwordResetJx.htm",
        "serialno":"201808311626320545RJ",
        "custno":"1538967652",
        "apkind":"924",
        "subapkind":"924001",
        "apdt":"20180525",
        "aptm":"215807",
        "workdate":"20180525",
   "tradeacco":"000621718538967655",
 "taaccountid":"475AE141EE07252223",
        "tano":"47",
        "sharetype":"A",
        "accptmd":"2",
        "branchcode":"247000",
        "distributorcode":"247"}
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626320545RJ';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"serialno":"201808311540580221kM",'extFields':{"errCode":"0000", "errMsg":"交易成功", "tranSt":"Y"}}
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311540580221kM' AND PAYST='Y';", "SELECT * from cts.cts_tradequtychg WHERE REFERNO='201808311540580221kM' AND CHANGEQUTY='10';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{ "subquty":"10",
        "bankid":"205AE16EA606342921",
        "paymodel":"04",
        "channel":"JX",
        "returnUrl":"https://www5.91wutong.com/acco/yhcgTrade/drawCashResult.htm",
        "routeCode":"1",
        "forgetPwdUrl":"https://www5.91wutong.com/user/account/passwordResetJx.htm",
        "serialno":"201808311626320985Xj",
        "custno":"1538967652",
        "apkind":"924",
        "subapkind":"924001",
        "apdt":"20180525",
        "aptm":"215807",
        "workdate":"20180525",
     "tradeacco":"000621718538967655",
 "taaccountid":"475AE141EE07252223",
        "tano":"47",
        "sharetype":"A",
        "accptmd":"1",
        "branchcode":"247000",
        "distributorcode":"247"}
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626320985Xj';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"serialno":"201808311540580357hb",'extFields':{"errCode":"0001", "errMsg":"交易失败", "tranSt":"F"}}
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311540580357hb' AND PAYST='F';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"subquty":"10",
        "bankid":"205AE16EA606342921",
        "paymodel":"04",
        "channel":"JX",
        "returnUrl":"https://www5.91wutong.com/acco/yhcgTrade/drawCashResult.htm",
        "routeCode":"1",
        "forgetPwdUrl":"https://www5.91wutong.com/user/account/passwordResetJx.htm",
        "serialno":"201808311626320474hq",
        "custno":"1538967652",
        "apkind":"924",
        "subapkind":"924001",
        "apdt":"20180525",
        "aptm":"215807",
        "workdate":"20180525",
       "tradeacco":"000621718538967655",
 "taaccountid":"475AE141EE07252223",
        "tano":"47",
        "sharetype":"A",
        "accptmd":"3",
        "branchcode":"247000",
        "distributorcode":"247"}
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626320474hq';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"serialno":"201808311540580668Fz",'extFields':{"errCode":"0000", "errMsg":"交易成功", "tranSt":"Y"}}
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311540580668Fz' AND PAYST='Y';", "SELECT * from cts.cts_tradequtychg WHERE REFERNO='201808311540580668Fz' AND CHANGEQUTY='10';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"subquty":"10",
        "bankid":"205AE16EA606342921",
        "paymodel":"04",
        "channel":"JX",
        "returnUrl":"https://www5.91wutong.com/acco/yhcgTrade/drawCashResult.htm",
        "routeCode":"1",
        "forgetPwdUrl":"https://www5.91wutong.com/user/account/passwordResetJx.htm",
        "serialno":"20180831162632033nM",
        "custno":"1538967652",
        "apkind":"924",
        "subapkind":"924001",
        "apdt":"20180525",
        "aptm":"215807",
        "workdate":"20180525",
      "tradeacco":"000621718538967655",
 "taaccountid":"475AE141EE07252223",
        "tano":"47",
        "sharetype":"A",
        "accptmd":"3",
        "branchcode":"247000",
        "distributorcode":"247"}
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='20180831162632033nM';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"serialno":"201808311540580220eR",'extFields':{"errCode":"0001", "errMsg":"交易失败", "tranSt":"F"}}
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311540580220eR' AND PAYST='F';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"subquty":"10",
        "bankid":"205AE16EA606342921",
        "paymodel":"04",
        "channel":"JX",
        "returnUrl":"https://www5.91wutong.com/acco/yhcgTrade/drawCashResult.htm",
        "routeCode":"2",
        "cardBankCnaps":"308584001024",
        "forgetPwdUrl":"https://www5.91wutong.com/user/account/passwordResetJx.htm",
        "serialno":"201808311626320614qN",
        "custno":"1538967652",
        "apkind":"924",
        "subapkind":"924001",
        "apdt":"20180525",
        "aptm":"215807",
        "workdate":"20180525",
      "tradeacco":"000621718538967655",
 "taaccountid":"475AE141EE07252223",
        "tano":"47",
        "sharetype":"A",
        "accptmd":"3",
        "branchcode":"247000",
        "distributorcode":"247"}
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626320614qN';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"serialno":"201808311540580239jZ",'extFields':{"errCode":"0000", "errMsg":"交易成功", "tranSt":"Y"}}
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311540580239jZ' AND PAYST='Y';", "SELECT * from cts.cts_tradequtychg WHERE REFERNO='201808311540580239jZ' AND CHANGEQUTY='10';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"subquty":"10",
        "bankid":"205AE16EA606342921",
        "paymodel":"04",
        "channel":"JX",
        "returnUrl":"https://www5.91wutong.com/acco/yhcgTrade/drawCashResult.htm",
        "routeCode":"2",
        "cardBankCnaps":"308584001024",
        "forgetPwdUrl":"https://www5.91wutong.com/user/account/passwordResetJx.htm",
        "serialno":"201808311626320980ly",
        "custno":"1538967652",
        "apkind":"924",
        "subapkind":"924001",
        "apdt":"20180525",
        "aptm":"215807",
        "workdate":"20180525",
       "tradeacco":"000621718538967655",
 "taaccountid":"475AE141EE07252223",
        "tano":"47",
        "sharetype":"A",
        "accptmd":"3",
        "branchcode":"247000",
        "distributorcode":"247"}
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626320980ly';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"serialno":"20180831154058042fD",'extFields':{"errCode":"0001", "errMsg":"交易失败", "tranSt":"F"}}
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='20180831154058042fD' AND PAYST='F';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"subquty":"10",
        "bankid":"205AE16EA606342921",
        "paymodel":"05",
        "channel":"JX",
        "returnUrl":"https://www5.91wutong.com/acco/yhcgTrade/drawCashResult.htm",
        "routeCode":"2",
        "cardBankCnaps":"308584001024",
        "forgetPwdUrl":"https://www5.91wutong.com/user/account/passwordResetJx.htm",
        "serialno":"201808311626320445lA",
        "custno":"1538967652",
        "apkind":"924",
        "subapkind":"924001",
        "apdt":"20180525",
        "aptm":"215807",
        "workdate":"20180525",
        "tradeacco":"000621718538967655",
 "taaccountid":"475AE141EE07252223",
        "tano":"47",
        "sharetype":"A",
        "accptmd":"3",
        "branchcode":"247000",
        "distributorcode":"247"}
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626320445lA';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"subquty":"10",
        "bankid":"205AE16EA606342921",
        "paymodel":"05",
        "channel":"JX",
        "returnUrl":"",
        "routeCode":"2",
        "cardBankCnaps":"308584001024",
        "forgetPwdUrl":"https://www5.91wutong.com/user/account/passwordResetJx.htm",
        "serialno":"201808311626320992fU",
        "custno":"1538967652",
        "apkind":"924",
        "subapkind":"924001",
        "apdt":"20180525",
        "aptm":"215807",
        "workdate":"20180525",
       "tradeacco":"000621718538967655",
 "taaccountid":"475AE141EE07252223",
        "tano":"47",
        "sharetype":"A",
        "accptmd":"3",
        "branchcode":"247000",
        "distributorcode":"247"}
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626320992fU';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"subquty":"10",
        "bankid":"205AE16EA606342921",
        "paymodel":"04",
        "channel":"JX",
        "returnUrl":"https://www5.91wutong.com/acco/yhcgTrade/drawCashResult.htm",
        "routeCode":"2",
        "cardBankCnaps":"308584001024",
        "forgetPwdUrl":"",
        "serialno":"20180831162632093KH",
        "custno":"1538967652",
        "apkind":"924",
        "subapkind":"924001",
        "apdt":"20180525",
        "aptm":"215807",
        "workdate":"20180525",
       "tradeacco":"000621718538967655",
 "taaccountid":"475AE141EE07252223",
        "tano":"47",
        "sharetype":"A",
        "accptmd":"3",
        "branchcode":"247000",
        "distributorcode":"247"}
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='20180831162632093KH';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{
"periodic":"false",
"subamt":"100.00",
"honourdate":"20180720",
"baseyield":"0.0828",
"yield":"0.0828",
"addyield":"0",
"interestbegindate":"20180710",
"interestenddate":"20180719",
"serialno":"201808311626320874Ku",
"custno":"1538943691",
"apkind":"012","subapkind":"012001",
"apdt":"20180710",
"aptm":"102056",
"workdate":"20180710",
"tradeacco":"000621718538943694",
"taaccountid":"475A7D638769350988",
"tano":"47","productid":"732822",
"sharetype":"A","accptmd":"1",
"branchcode":"247000","distributorcode":"247"}
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626320874Ku';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
""
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='20180831154058095Hv' AND APPLYST='Y'AND TRANSST='Y' AND PAYST='Y';","SELECT * from cts.cts_tradequtychg WHERE REFERNO='20180831154058095Hv' AND PRODUCTID='732822'AND CHANGEQUTY='-100';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{
"periodic":"false",
"subamt":"10000.00",
"honourdate":"20180720",
"baseyield":"0.0828",
"yield":"0.0828",
"addyield":"0",
"interestbegindate":"20180710",
"interestenddate":"20180719",
"serialno":"201808311626320612nv",
"custno":"1538943529",
"apkind":"012","subapkind":"012001",
"apdt":"20180710",
"aptm":"102056",
"workdate":"20180710",
"tradeacco":"000621718538943532",
"taaccountid":"475A7D11AC36446661",
"tano":"47","productid":"732822",
"sharetype":"A","accptmd":"1",
"branchcode":"247000","distributorcode":"247"}
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626320612nv' AND APPLYST='F';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{
"periodic":"false",
"subamt":"100000",
"honourdate":"20180720",
"baseyield":"0.0828",
"yield":"0.0828",
"addyield":"0",
"interestbegindate":"20180710",
"interestenddate":"20180719",
"serialno":"201808311626320773JH",
"custno":"1538943559",
"apkind":"012","subapkind":"012001",
"apdt":"20180710",
"aptm":"102056",
"workdate":"20180710",
"tradeacco":"000621718538943562",
"taaccountid":"475A7D148427411438",
"tano":"47","productid":"732821",
"sharetype":"A","accptmd":"1",
"branchcode":"247000","distributorcode":"247"}
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626320773JH' AND APPLYST='F';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{
"periodic":"false",
"subamt":"10 0",
"honourdate":"20180720",
"baseyield":"0.0828",
"yield":"0.0828",
"addyield":"0",
"interestbegindate":"20180710",
"interestenddate":"20180719",
"serialno":"201808311626320253gJ",
"custno":"1538943691",
"apkind":"012","subapkind":"012001",
"apdt":"20180710",
"aptm":"102056",
"workdate":"20180710",
"tradeacco":"000621718538943694",
"taaccountid":"475A7D638769350988",
"tano":"47","productid":"732822",
"sharetype":"A","accptmd":"1",
"branchcode":"247000","distributorcode":"247"}
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626320253gJ' AND APPLYST='F';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{
"periodic":"false",
"subamt":"10%0.00",
"honourdate":"20180720",
"baseyield":"0.0828",
"yield":"0.0828",
"addyield":"0",
"interestbegindate":"20180710",
"interestenddate":"20180719",
"serialno":"201808311626320413iK",
"custno":"1538943691",
"apkind":"012","subapkind":"012001",
"apdt":"20180710",
"aptm":"102056",
"workdate":"20180710",
"tradeacco":"000621718538943694",
"taaccountid":"475A7D638769350988",
"tano":"47","productid":"732822",
"sharetype":"A","accptmd":"1",
"branchcode":"247000","distributorcode":"247"}
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626320413iK' AND APPLYST='F';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"periodic":"false",
"subamt":"10",
"honourdate":"20180720",
"baseyield":"0.0828",
"yield":"0.0838",
"addyield":"0",
"interestbegindate":"20180710",
"interestenddate":"20180719",
"serialno":"201808311626320791tF",
"custno":"1538943691",
"apkind":"012","subapkind":"012001",
"apdt":"20180710",
"aptm":"134256",
"workdate":"20180710",
"tradeacco":"000621718538943694",
"taaccountid":"475A7D638769350988",
"tano":"47","productid":"732822",
"sharetype":"A","accptmd":"1",
"branchcode":"247000","distributorcode":"247"}
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626320791tF';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
""
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311540580810SM' AND APPLYST='Y'AND TRANSST='Y' AND PAYST='Y';","SELECT * from cts.cts_tradequtychg WHERE REFERNO='201808311540580810SM' AND PRODUCTID='732822'AND CHANGEQUTY='-10';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"periodic":"false",
"subamt":"100",
"honourdate":"20180720",
"baseyield":"0.0850",
"yield":"0.0070",
"addyield":"0.4",
"exyield":"0",
"exActivityFlag":"1",
"couponid":"20180710153894369120709111860",
"interestbegindate":"20180710",
"interestenddate":"20180719",
"serialno":"201808311626320466DO",
"custno":"1538943691",
"apkind":"012","subapkind":"012001",
"apdt":"20180710",
"aptm":"134256",
"workdate":"20180710",
"tradeacco":"000621718538943694",
"taaccountid":"475A7D638769350988",
"tano":"47","productid":"732908",
"sharetype":"A","accptmd":"1",
"branchcode":"247000","distributorcode":"247"}
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626320466DO';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
""
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311540580557Nu' AND APPLYST='Y'AND TRANSST='Y' AND PAYST='Y';","SELECT * from cts.cts_tradequtychg WHERE REFERNO='201808311540580557Nu' AND PRODUCTID='732908'AND CHANGEQUTY='-100';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"periodic":"false",
        "subamt":"1000.00",
        "couponid":"5B4C07350077bcEA",
        "honourdate":"20190615",
        "baseyield":"0.0828",
        "yield":"0.0828",
        "addyield":"0.0000",
        "interestbegindate":"20180717",
        "interestenddate":"20190614",
        "exyield":"0",
        "exActivityFlag":"1",
        "serialno":"201808311626320191pb",
        "custno":"1538943691",
        "apkind":"012",
        "subapkind":"012001",
        "apdt":"20180717",
        "aptm":"114840",
        "workdate":"20180717",
        "tradeacco":"000621718538943694",
        "taaccountid":"475A7D638769350988",
        "tano":"47",
        "productid":"732818",
        "sharetype":"A",
        "accptmd":"1",
        "branchcode":"247000",
        "distributorcode":"247"}
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626320191pb';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
""
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311540580537Cf' AND APPLYST='Y'AND TRANSST='Y' AND PAYST='Y';","SELECT * from cts.cts_traderequest WHERE SUBAPKIND='922919' AND REFERNO='201808311540580537Cf';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"periodic":"false",
"subamt":"100",
"honourdate":"20180720",
"baseyield":"0.0850",
"yield":"0.0070",
"addyield":"0.4",
"exyield":"0",
"exActivityFlag":"1",
"couponid":"20180710153894369120709111860",
"interestbegindate":"20180710",
"interestenddate":"20180719",
"serialno":"201808311626320389Tb",
"custno":"1538943691",
"apkind":"012","subapkind":"012001",
"apdt":"20180710",
"aptm":"134256",
"workdate":"20180710",
"tradeacco":"000621718538943694",
"taaccountid":"475A7D638769350988",
"tano":"47","productid":"732908",
"sharetype":"A","accptmd":"1",
"branchcode":"247000","distributorcode":"247"}
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626320389Tb';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
""
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311540580306LD' AND APPLYST='Y'AND TRANSST='Y' AND PAYST='Y';","SELECT * from cts.cts_tradequtychg WHERE REFERNO='201808311540580306LD' AND PRODUCTID='732908'AND CHANGEQUTY='-100';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{
"subamt":"10",
"honourdate":"20180604",
"baseyield":"0.0828",
"yield":"0.0238",
"addyield":"0",
"interestbegindate":"20180525",
"interestenddate":"20180603",
"periodic":"true",
"cycleDay":"20",
"transferDay":"2",
"serialno":"201808311626320227Qg",
"custno":"1604568937",
"apkind":"012","subapkind":"012001",
"apdt":"20180525",
"aptm":"134256",
"workdate":"20180525",
"tradeacco":"001035098604568940",
"taaccountid":"475AFA3D7B64069928",
"tano":"47","productid":"8802",
"sharetype":"A","accptmd":"1",
"branchcode":"247000","distributorcode":"247"}
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626320227Qg';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
""
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311540580882xy' AND APPLYST='Y'AND TRANSST='Y' AND PAYST='Y';","SELECT * from cts.cts_tradequtychg WHERE REFERNO='201808311540580882xy' AND PRODUCTID='8802'AND CHANGEQUTY='-10';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{
"subamt":"10",
"honourdate":"20180604",
"baseyield":"0.0828",
"yield":"0.0238",
"addyield":"0",
"interestbegindate":"20180525",
"interestenddate":"20180603",
"periodic":"true",
"cycleDay":"20",
"transferDay":"2",
"serialno":"201808311626320986QH",
"custno":"1604568937",
"apkind":"012","subapkind":"012001",
"apdt":"20180525",
"aptm":"134256",
"workdate":"20180525",
"tradeacco":"001035098604568940",
"taaccountid":"475AFA3D7B64069928",
"tano":"47","productid":"8901",
"sharetype":"A","accptmd":"1",
"branchcode":"247000","distributorcode":"247"}
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626320986QH';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
""
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311540580550PC' AND APPLYST='Y'AND TRANSST='Y' AND PAYST='Y';","SELECT * from cts.cts_tradequtychg WHERE REFERNO='201808311540580550PC' AND PRODUCTID='8901'AND CHANGEQUTY='-10';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{
"subamt":"10",
"honourdate":"20180604",
"baseyield":"0.0828",
"yield":"0.0238",
"addyield":"0",
"interestbegindate":"20180525",
"interestenddate":"20180603",
"periodic":"true",
"cycleDay":"20",
"transferDay":"2",
"serialno":"201808311626320524RQ",
"custno":"1604568937",
"apkind":"012","subapkind":"012001",
"apdt":"20180525",
"aptm":"134256",
"workdate":"20180525",
"tradeacco":"001035098604568940",
"taaccountid":"475AFA3D7B64069928",
"tano":"47","productid":"8903",
"sharetype":"A","accptmd":"1",
"branchcode":"247000","distributorcode":"247"}
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626320524RQ';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
""
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311540580691Mg' AND APPLYST='Y'AND TRANSST='Y' AND PAYST='Y';","SELECT * from cts.cts_tradequtychg WHERE REFERNO='201808311540580691Mg' AND PRODUCTID='8903'AND CHANGEQUTY='-10';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{
"subamt":"10",
"honourdate":"20180604",
"baseyield":"0.0828",
"yield":"0.0238",
"addyield":"0",
"interestbegindate":"20180525",
"interestenddate":"20180603",
"periodic":"true",
"cycleDay":"20",
"transferDay":"2",
"serialno":"201808311626320445MJ",
"custno":"1604568937",
"apkind":"012","subapkind":"012001",
"apdt":"20180525",
"aptm":"134256",
"workdate":"20180525",
"tradeacco":"001035098604568940",
"taaccountid":"475AFA3D7B64069928",
"tano":"47","productid":"8904",
"sharetype":"A","accptmd":"1",
"branchcode":"247000","distributorcode":"247"}
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626320445MJ';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
""
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311540580513JD' AND APPLYST='Y'AND TRANSST='Y' AND PAYST='Y';","SELECT * from cts.cts_tradequtychg WHERE REFERNO='201808311540580513JD' AND PRODUCTID='8904'AND CHANGEQUTY='-10';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{
"subamt":"10",
"honourdate":"20180604",
"baseyield":"0.0828",
"yield":"0.0238",
"addyield":"0",
"interestbegindate":"20180525",
"interestenddate":"20180603",
"periodic":"true",
"cycleDay":"20",
"transferDay":"2",
"serialno":"201808311626320702Ke",
"custno":"1538967652ddddd",
"apkind":"012","subapkind":"012001",
"apdt":"20180525",
"aptm":"134256",
"workdate":"20180525",
"tradeacco":"001035098604568940",
"taaccountid":"475AFA3D7B64069928",
"tano":"47","productid":"732681",
"sharetype":"A","accptmd":"1",
"branchcode":"247000","distributorcode":"247"}
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626320702Ke';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{
"subamt":"10",
"honourdate":"20180604",
"baseyield":"0.0828",
"yield":"0.0238",
"addyield":"0",
"interestbegindate":"20180525",
"interestenddate":"20180603",
"serialno":"201808311626320325Co",
"custno":"1604568937",
"apkind":"012","subapkind":"012001",
"apdt":"20180525",
"aptm":"134256",
"workdate":"20180525",
"tradeacco":"001035098604568940",
"taaccountid":"475AFA3D7B64069928",
"tano":"47","productid":"732681123",
"sharetype":"A","accptmd":"1",
"branchcode":"247000","distributorcode":"247"}
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626320325Co';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{
"subamt":"10",
"honourdate":"20180604",
"baseyield":"0.0828",
"yield":"0.0238",
"addyield":"0",
"interestbegindate":"20180525",
"interestenddate":"20180603",
"serialno":"20180831162632018lh",
"custno":"1538967652",
"apkind":"012","subapkind":"012001",
"apdt":"20180525",
"aptm":"134256",
"workdate":"20180525",
"tradeacco":"000621718538967655",
"taaccountid":"475AE141EE07252223",
"tano":"47","productid":"732822",
"sharetype":"A","accptmd":"2",
"branchcode":"247000","distributorcode":"247"}
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='20180831162632018lh';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
""
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311540580981Dk' AND APPLYST='Y'AND TRANSST='Y' AND PAYST='Y';","SELECT * from cts.cts_tradequtychg WHERE REFERNO='201808311540580981Dk' AND PRODUCTID='732822'AND CHANGEQUTY='-10';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{
"subamt":"10",
"honourdate":"20180604",
"baseyield":"0.0828",
"yield":"0.0238",
"addyield":"0",
"interestbegindate":"20180525",
"interestenddate":"20180603",
"serialno":"201808311626320765WV",
"custno":"1538967652",
"apkind":"012","subapkind":"012001",
"apdt":"20180525",
"aptm":"134256",
"workdate":"20180525",
"tradeacco":"000621718538967655",
"taaccountid":"475AE141EE07252223",
"tano":"47","productid":"732681",
"sharetype":"A","accptmd":"3",
"branchcode":"247000","distributorcode":"247"}
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626320765WV';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
""
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311540580362Hb' AND APPLYST='Y'AND TRANSST='Y' AND PAYST='Y';","SELECT * from cts.cts_tradequtychg WHERE REFERNO='201808311540580362Hb' AND PRODUCTID='732681'AND CHANGEQUTY='-10';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"refercapno":"5AE02D4E13F7bc16",
        "reemFlag":"0",
        "selltype":1,
        "periodic":"true",
        "mixProd":"true",
        "bigVCustno":"1597219229",
        "honourFlag":"1",
        "newFlag":"0",
        "partPayment":"false",
        "subquty":"100.00",
        "feetp":"07",
        "feemode":"1",
        "feevalue":"0.0",
        "serialno":"201808311626320404TD",
        "custno":"1538943691",
        "apkind":"014",
        "subapkind":"014001",
        "apdt":"20180831",
        "aptm":"113344",
        "workdate":"20180831",
        "tradeacco":"000621718538943694",
        "taaccountid":"475A7D638769350988",
        "tano":"47",
        "productid":"8903",
        "sharetype":"A",
        "accptmd":"1",
        "branchcode":"247000",
        "distributorcode":"247"}
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626320404TD';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
""
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626320404TD';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"serialno":"201808311540580226JT","isSend":"1",'extFields':{"errCode":"0000", "errMsg":"交易成功", "tranSt":"Y"}}
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311540580226JT' AND APPLYST='Y'AND TRANSST='Y' AND PAYST='Y';","SELECT * from cts.cts_tradequtychg WHERE REFERNO='201808311540580226JT' AND PRODUCTID='9999'AND CHANGEQUTY='100';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"refercapno":"5AE02D4E13F7bc16",
        "reemFlag":"0",
        "selltype":1,
        "periodic":"true",
        "mixProd":"true",
        "bigVCustno":"1597219229",
        "honourFlag":"1",
        "newFlag":"0",
        "partPayment":"false",
        "subquty":"100.00",
        "feetp":"07",
        "feemode":"1",
        "feevalue":"0.0",
        "serialno":"201808311626320197nF",
        "custno":"1538943691",
        "apkind":"014",
        "subapkind":"014001",
        "apdt":"20180831",
        "aptm":"113344",
        "workdate":"20180831",
        "tradeacco":"000621718538943694",
        "taaccountid":"475A7D638769350988",
        "tano":"47",
        "productid":"8903",
        "sharetype":"A",
        "accptmd":"1",
        "branchcode":"247000",
        "distributorcode":"247"}
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626320197nF';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
""
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626320197nF';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"serialno":"201808311540580746wT",'extFields':{"errCode":"0001", "errMsg":"交易失败", "tranSt":"F"}}
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311540580746wT' AND APPLYST='Y'AND TRANSST='Y' AND PAYST='Y';","SELECT * from cts.cts_tradequtychg WHERE REFERNO='201808311540580746wT' AND PRODUCTID='8903'AND CHANGEQUTY='100';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"refercapno":"5B06227E029Dbc36",
        "reemFlag":"1",
        "selltype":1,
        "periodic":"true",
        "mixProd":"true",
        "bigVCustno":"1597219229",
        "honourFlag":"1",
        "newFlag":"0",
        "partPayment":"false",
        "subquty":"100.00",
        "feetp":"07",
        "feemode":"1",
        "feevalue":"0.01",
        "serialno":"201808311626320714kH",
        "custno":"1538943691",
        "apkind":"014",
        "subapkind":"014001",
        "apdt":"20180722",
        "aptm":"113344",
        "workdate":"20180722",
        "tradeacco":"000621718538943694",
        "taaccountid":"475A7D638769350988",
        "tano":"47",
        "productid":"8903",
        "sharetype":"A",
        "accptmd":"1",
        "branchcode":"247000",
        "distributorcode":"247"}
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626320714kH';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
""
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626320714kH';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"serialno":"201808311540580795yN","isSend":"1",'extFields':{"errCode":"0000", "errMsg":"交易成功", "tranSt":"Y"}}
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311540580795yN' AND APPLYST='Y'AND TRANSST='Y' AND PAYST='Y';","SELECT * from cts.cts_tradequtychg WHERE REFERNO='201808311540580795yN' AND PRODUCTID='9999'AND CHANGEQUTY='99';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"refercapno":"5B06227E029Dbc36",
        "reemFlag":"1",
        "selltype":1,
        "periodic":"true",
        "mixProd":"true",
        "bigVCustno":"1597219229",
        "honourFlag":"1",
        "newFlag":"0",
        "partPayment":"false",
        "subquty":"100.00",
        "feetp":"07",
        "feemode":"1",
        "feevalue":"0.01",
        "serialno":"201808311626320288dp",
        "custno":"1538943691",
        "apkind":"014",
        "subapkind":"014001",
        "apdt":"20180722",
        "aptm":"113344",
        "workdate":"20180722",
        "tradeacco":"000621718538943694",
        "taaccountid":"475A7D638769350988",
        "tano":"47",
        "productid":"8903",
        "sharetype":"A",
        "accptmd":"1",
        "branchcode":"247000",
        "distributorcode":"247"}
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626320288dp';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
""
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626320288dp';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"serialno":"201808311540580288cL",'extFields':{"errCode":"0001", "errMsg":"交易失败", "tranSt":"F"}}
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311540580288cL' AND APPLYST='Y'AND TRANSST='Y' AND PAYST='Y';","SELECT * from cts.cts_tradequtychg WHERE REFERNO='201808311540580288cL' AND PRODUCTID='8903'AND CHANGEQUTY='100';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"refercapno":"59A65428006Cbc64",
        "reemFlag":"0",
        "selltype":1,
        "periodic":"true",
        "mixProd":"true",
        "bigVCustno":"1503257540",
        "honourFlag":"1",
        "newFlag":"0",
        "partPayment":"true",
        "subquty":"10",
        "serialno":"201808311626320530VC",
        "custno":"1538747953",
        "apkind":"142",
        "subapkind":"142001",
        "apdt":"20180531",
        "aptm":"113242",
        "workdate":"20180531",
        "tradeacco":"000621718538747956",
        "taaccountid":"4759A61C6F83922488",
        "tano":"47",
        "productid":"8903",
        "sharetype":"A",
        "accptmd":"1",
        "branchcode":"247000",
        "distributorcode":"247"}
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311540580288cL' AND APPLYST='Y'AND TRANSST='Y' AND PAYST='Y';","SELECT * from cts.cts_tradequtychg WHERE REFERNO='201808311540580288cL' AND PRODUCTID='8903'AND CHANGEQUTY='100';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{
"serialno":"201808311626320996EW",
"subquty":"10.00",
"custno":"1538943691",
"apkind":"055",
"subapkind":"055001",
"apdt":"20180726",
"aptm":"161324",
"workdate":"20180726",
"sharetype":"A",
"accptmd":"1",
"branchcode":"247000",
"distributorcode":"247",
"referno":"5B5980AB002Cbc84",
"tradeacco":"000621718538943694",
"taaccountid":"475A7D638769350988",
"productid":"732937",
"tano":"47",
"feetp":"06",
"feemode":"1",
"feevalue":"0.002",
"baseyield":"0.0900",
"yield":"0.0900",
"addyield":"0.0000",
"exyield":"0.0000",
"interestbegindate":"20180726",
"interestenddate":"20181016",
"selltype":1}
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626320996EW';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{
"referno":"201808311540590457wa",
"subquty":"10",
"honourdate":"20181017",
"baseyield":"0.0900",
"yield":"0.0900",
"addyield":"0.0000",
"interestbegindate":"20180726",
"interestenddate":"20181016",
"exyield":"0",
"serialno":"20180831162632059iV",
"custno":"1538943811",
"apkind":"056",
"subapkind":"056001",
"apdt":"20180726",
"aptm":"134031",
"workdate":"20180726",
"tradeacco":"000621718538943814",
"taaccountid":"475A7FB19598436383",
"tano":"47",
"productid":"732937",
"sharetype":"A",
"accptmd":"1",
"branchcode":"247000",
"distributorcode":"247"}
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='20180831162632059iV';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
""
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='20180831162632059iV';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"serialno":"201808311540590621FD","isSend":"1",'extFields':{"errCode":"0000", "errMsg":"交易成功", "tranSt":"Y"}}
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311540590621FD' AND APPLYST='Y'AND TRANSST='Y' AND PAYST='Y';","SELECT * from cts.cts_tradequtychg WHERE REFERNO='201808311540590621FD' AND PRODUCTID='9999'AND CHANGEQUTY='10';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{
"serialno":"201808311626320961Cx",
"subquty":"100.00",
"custno":"1538943691",
"apkind":"055",
"subapkind":"055001",
"apdt":"20180726",
"aptm":"161324",
"workdate":"20180726",
"sharetype":"A",
"accptmd":"1",
"branchcode":"247000",
"distributorcode":"247",
"referno":"5B5980AB002Cbc84",
"tradeacco":"000621718538943694",
"taaccountid":"475A7D638769350988",
"productid":"732937",
"tano":"47",
"feetp":"06",
"feemode":"1",
"feevalue":"0.002",
"baseyield":"0.0900",
"yield":"0.0900",
"addyield":"0.0000",
"exyield":"0.0000",
"interestbegindate":"20180726",
"interestenddate":"20181016",
"selltype":1}
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626320961Cx';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{
"referno":"201808311540590426go",
"subquty":"100",
"honourdate":"20181017",
"baseyield":"0.0900",
"yield":"0.0900",
"addyield":"0.0000",
"interestbegindate":"20180726",
"interestenddate":"20181016",
"exyield":"0",
"serialno":"201808311626320135ee",
"custno":"1538943811",
"apkind":"056",
"subapkind":"056001",
"apdt":"20180726",
"aptm":"134031",
"workdate":"20180726",
"tradeacco":"000621718538943814",
"taaccountid":"475A7FB19598436383",
"tano":"47",
"productid":"732937",
"sharetype":"A",
"accptmd":"1",
"branchcode":"247000",
"distributorcode":"247"}
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626320135ee';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
""
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626320135ee';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"serialno":"201808311540590299ZG",'extFields':{"errCode":"0001", "errMsg":"交易失败", "tranSt":"F"}}
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311540590299ZG' AND PAYST='F';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{
"serialno":"201808311626320493oI",
"subquty":"1 0.00",
"custno":"1538943691",
"apkind":"055",
"subapkind":"055001",
"apdt":"20180726",
"aptm":"161324",
"workdate":"20180726",
"sharetype":"A",
"accptmd":"1",
"branchcode":"247000",
"distributorcode":"247",
"referno":"5B5980AB002Cbc84",
"tradeacco":"000621718538943694",
"taaccountid":"475A7D638769350988",
"productid":"732937",
"tano":"47",
"feetp":"06",
"feemode":"1",
"feevalue":"0.002",
"baseyield":"0.0900",
"yield":"0.0900",
"addyield":"0.0000",
"exyield":"0.0000",
"interestbegindate":"20180726",
"interestenddate":"20181016",
"selltype":1}
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311540590299ZG' AND PAYST='F';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{
"serialno":"201808311626320768LL",
"subquty":"1@0.00",
"custno":"1538943691",
"apkind":"055",
"subapkind":"055001",
"apdt":"20180726",
"aptm":"161324",
"workdate":"20180726",
"sharetype":"A",
"accptmd":"1",
"branchcode":"247000",
"distributorcode":"247",
"referno":"5B5980AB002Cbc84",
"tradeacco":"000621718538943694",
"taaccountid":"475A7D638769350988",
"productid":"732937",
"tano":"47",
"feetp":"06",
"feemode":"1",
"feevalue":"0.002",
"baseyield":"0.0900",
"yield":"0.0900",
"addyield":"0.0000",
"exyield":"0.0000",
"interestbegindate":"20180726",
"interestenddate":"20181016",
"selltype":1}
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311540590299ZG' AND PAYST='F';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{
"serialno":"201808311626320177ag",
"subquty":"100.00",
"custno":"1538943691",
"apkind":"055",
"subapkind":"055001",
"apdt":"20180726",
"aptm":"161324",
"workdate":"20180726",
"sharetype":"A",
"accptmd":"1",
"branchcode":"247000",
"distributorcode":"247",
"referno":"5B5980AB002Cbc84",
"tradeacco":"000621718538943694",
"taaccountid":"475A7D638769350988",
"productid":"732937",
"tano":"47",
"feetp":"06",
"feemode":"1",
"feevalue":"0.002",
"baseyield":"0.0900",
"yield":"0.0900",
"addyield":"0.0000",
"exyield":"0.0000",
"interestbegindate":"20180726",
"interestenddate":"20181016",
"selltype":1}
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626320177ag' AND APPLYST='F';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"refercapno":"5B57DD261DFCbc4E",
        "reemFlag":"1",
        "selltype":1,
        "periodic":"true",
        "mixProd":"true",
        "bigVCustno":"1503257540",
        "honourFlag":"1",
        "newFlag":"0",
        "partPayment":"false",
        "subquty":"10.00",
        "feetp":"07",
        "feemode":"1",
        "feevalue":"0.01",
        "serialno":"201808311626320965bj",
        "custno":"1538943811",
        "apkind":"014",
        "subapkind":"014001",
        "apdt":"20180722",
        "aptm":"113344",
        "workdate":"20180722",
        "tradeacco":"000621718538943814",
        "taaccountid":"475A7FB19598436383",
        "tano":"47",
        "productid":"8901",
        "sharetype":"A",
        "accptmd":"1",
        "branchcode":"247000",
        "distributorcode":"247"}
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626320965bj';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
""
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626320965bj';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"serialno":"201808311540590448gQ","isSend":"1",'extFields':{"errCode":"0000", "errMsg":"交易成功", "tranSt":"Y"}}
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311540590448gQ' AND APPLYST='Y'AND TRANSST='Y' AND PAYST='Y';","SELECT * from cts.cts_tradequtychg WHERE REFERNO='201808311540590448gQ' AND PRODUCTID='9999'AND CHANGEQUTY='9.9';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"refercapno":"5B57DD261DFCbc4E",
        "reemFlag":"1",
        "selltype":1,
        "periodic":"true",
        "mixProd":"true",
        "bigVCustno":"1503257540",
        "honourFlag":"1",
        "newFlag":"0",
        "partPayment":"false",
        "subquty":"10.00",
        "feetp":"07",
        "feemode":"1",
        "feevalue":"0.01",
        "serialno":"201808311626320464GI",
        "custno":"1538943811",
        "apkind":"014",
        "subapkind":"014001",
        "apdt":"20180722",
        "aptm":"113344",
        "workdate":"20180722",
        "tradeacco":"000621718538943814",
        "taaccountid":"475A7FB19598436383",
        "tano":"47",
        "productid":"8901",
        "sharetype":"A",
        "accptmd":"1",
        "branchcode":"247000",
        "distributorcode":"247"}
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626320464GI';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
""
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626320464GI';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"serialno":"201808311540590241VV","isSend":"1",'extFields':{"errCode":"0000", "errMsg":"交易成功", "tranSt":"Y"}}
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311540590241VV' AND APPLYST='Y'AND TRANSST='Y' AND PAYST='Y';","SELECT * from cts.cts_tradequtychg WHERE REFERNO='201808311540590241VV' AND PRODUCTID='8901'AND CHANGEQUTY='10';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"refercapno":"5B57DD261DFCbc4E",
        "sellCouponId":"5B569A9A006Abc55",
        "reemFlag":"1",
        "periodic":"true",
        "mixProd":"true",
        "bigVCustno":"1503257540",
        "honourFlag":"1",
        "newFlag":"0",
        "partPayment":"false",
        "subquty":"10.00",
        "feetp":"07",
        "feemode":"1",
        "feevalue":"0.01",
        "serialno":"201808311626320160dJ",
        "custno":"1538943811",
        "apkind":"014",
        "subapkind":"014001",
        "apdt":"20180722",
        "aptm":"113344",
        "workdate":"20180722",
        "tradeacco":"000621718538943814",
        "taaccountid":"475A7FB19598436383",
        "tano":"47",
        "productid":"8901",
        "sharetype":"A",
        "accptmd":"1",
        "branchcode":"247000",
        "distributorcode":"247"}
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626320160dJ';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
""
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626320160dJ';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"serialno":"201808311540590932eX","isSend":"1",'extFields':{"errCode":"0000", "errMsg":"交易成功", "tranSt":"Y"}}
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311540590932eX' AND APPLYST='Y'AND TRANSST='Y' AND PAYST='Y';","SELECT * from cts.cts_tradequtychg WHERE REFERNO='201808311540590932eX' AND PRODUCTID='9999'AND CHANGEQUTY='9.9';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"refercapno":"5B57DD261DFCbc4E",
        "sellCouponId":"5B569A9A006Abc55",
        "reemFlag":"1",
        "selltype":1,
        "periodic":"true",
        "mixProd":"true",
        "bigVCustno":"1503257540",
        "honourFlag":"1",
        "newFlag":"0",
        "partPayment":"false",
        "subquty":"10.00",
        "feetp":"07",
        "feemode":"1",
        "feevalue":"0.01",
        "serialno":"201808311626320203hR",
        "custno":"1538943811",
        "apkind":"014",
        "subapkind":"014001",
        "apdt":"20180722",
        "aptm":"113344",
        "workdate":"20180722",
        "tradeacco":"000621718538943814",
        "taaccountid":"475A7FB19598436383",
        "tano":"47",
        "productid":"8901",
        "sharetype":"A",
        "accptmd":"1",
        "branchcode":"247000",
        "distributorcode":"247"}
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626320203hR';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
""
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626320203hR';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"serialno":"201808311540590912LN","isSend":"1",'extFields':{"errCode":"0000", "errMsg":"交易成功", "tranSt":"Y"}}
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311540590912LN' AND APPLYST='Y'AND TRANSST='Y' AND PAYST='Y';","SELECT * from cts.cts_tradequtychg WHERE REFERNO='201808311540590912LN' AND PRODUCTID='8901'AND CHANGEQUTY='10';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"refercapno":"5B74EB0A001FbcAC",
        "reemFlag":"1",
        "selltype":1,
        "periodic":"true",
        "mixProd":"true",
        "bigVCustno":"1503136940",
        "honourFlag":"1",
        "newFlag":"0",
        "partPayment":"false",
        "subquty":"10.00",
        "feetp":"07",
        "feemode":"1",
        "feevalue":"0.01",
        "serialno":"201808311626320635bD",
        "custno":"1538943811",
        "apkind":"014",
        "subapkind":"014001",
        "apdt":"20180815",
        "aptm":"164500",
        "workdate":"20180815",
        "tradeacco":"000621718538943814",
        "taaccountid":"475A7FB19598436383",
        "tano":"47",
        "productid":"8802",
        "sharetype":"A",
        "accptmd":"1",
        "branchcode":"247000",
        "distributorcode":"247"}
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626320635bD';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
""
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626320635bD';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"serialno":"201808311540590979tG","isSend":"1",'extFields':{"errCode":"0000", "errMsg":"交易成功", "tranSt":"Y"}}
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311540590979tG' AND APPLYST='Y'AND TRANSST='Y' AND PAYST='Y';","SELECT * from cts.cts_tradequtychg WHERE REFERNO='201808311540590979tG' AND PRODUCTID='9999'AND CHANGEQUTY='9.9';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"refercapno":"5B74EB0A001FbcAC",
        "reemFlag":"1",
        "selltype":1,
        "periodic":"true",
        "mixProd":"true",
        "bigVCustno":"1503136940",
        "honourFlag":"1",
        "newFlag":"0",
        "partPayment":"false",
        "subquty":"10.00",
        "feetp":"07",
        "feemode":"1",
        "feevalue":"0.01",
        "serialno":"201808311626320776oJ",
        "custno":"1538943811",
        "apkind":"014",
        "subapkind":"014001",
        "apdt":"20180815",
        "aptm":"164500",
        "workdate":"20180815",
        "tradeacco":"000621718538943814",
        "taaccountid":"475A7FB19598436383",
        "tano":"47",
        "productid":"8802",
        "sharetype":"A",
        "accptmd":"1",
        "branchcode":"247000",
        "distributorcode":"247"}
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626320776oJ';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
""
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626320776oJ';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"serialno":"201808311540590310rg","isSend":"1",'extFields':{"errCode":"0000", "errMsg":"交易成功", "tranSt":"Y"}}
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311540590310rg' AND APPLYST='Y'AND TRANSST='Y' AND PAYST='Y';","SELECT * from cts.cts_tradequtychg WHERE REFERNO='201808311540590310rg' AND PRODUCTID='8802'AND CHANGEQUTY='10';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"refercapno":"5B74EB0A001FbcAC",
        "sellCouponId":"5B569A9A006Abc55",
        "reemFlag":"1",
        "selltype":1,
        "periodic":"true",
        "mixProd":"true",
        "bigVCustno":"1503136940",
        "honourFlag":"1",
        "newFlag":"0",
        "partPayment":"false",
        "subquty":"10.00",
        "feetp":"07",
        "feemode":"1",
        "feevalue":"0.01",
        "serialno":"zcvbr123s12sdf31",
        "custno":"1538943811",
        "apkind":"014",
        "subapkind":"014001",
        "apdt":"20180815",
        "aptm":"164500",
        "workdate":"20180815",
        "tradeacco":"000621718538943814",
        "taaccountid":"475A7FB19598436383",
        "tano":"47",
        "productid":"8802",
        "sharetype":"A",
        "accptmd":"1",
        "branchcode":"247000",
        "distributorcode":"247"}
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='temp_serial';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
""
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='temp_serial';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"serialno":"zcvbr123s12sdf31","isSend":"1",'extFields':{"errCode":"0000", "errMsg":"交易成功", "tranSt":"Y"}}
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='zcvbr123s12sdf31' AND APPLYST='Y'AND TRANSST='Y' AND PAYST='Y';","SELECT * from cts.cts_tradequtychg WHERE REFERNO='zcvbr123s12sdf31' AND PRODUCTID='9999'AND CHANGEQUTY='9.9';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"refercapno":"5B74EB0A001FbcAC",
        "sellCouponId":"5B569A9A006Abc55",
        "reemFlag":"1",
        "selltype":1,
        "periodic":"true",
        "mixProd":"true",
        "bigVCustno":"1503136940",
        "honourFlag":"1",
        "newFlag":"0",
        "partPayment":"false",
        "subquty":"10.00",
        "feetp":"07",
        "feemode":"1",
        "feevalue":"0.01",
        "serialno":"zcvbr123s12sdf31",
        "custno":"1538943811",
        "apkind":"014",
        "subapkind":"014001",
        "apdt":"20180815",
        "aptm":"164500",
        "workdate":"20180815",
        "tradeacco":"000621718538943814",
        "taaccountid":"475A7FB19598436383",
        "tano":"47",
        "productid":"8802",
        "sharetype":"A",
        "accptmd":"1",
        "branchcode":"247000",
        "distributorcode":"247"}
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='temp_serial';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
""
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='temp_serial';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"serialno":"zcvbr123s12sdf31","isSend":"1",'extFields':{"errCode":"0000", "errMsg":"交易成功", "tranSt":"Y"}}
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='zcvbr123s12sdf31' AND APPLYST='Y'AND TRANSST='Y' AND PAYST='Y';","SELECT * from cts.cts_tradequtychg WHERE REFERNO='zcvbr123s12sdf31' AND PRODUCTID='8802'AND CHANGEQUTY='10';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"refercapno":"5B57DE5B20F7bc4E",
        "reemFlag":"1",
        "selltype":1,
        "periodic":"true",
        "mixProd":"true",
        "bigVCustno":"1597219235",
        "honourFlag":"1",
        "newFlag":"0",
        "partPayment":"false",
        "subquty":"10.00",
        "feetp":"07",
        "feemode":"1",
        "feevalue":"0.01",
        "serialno":"201808311626320454Tk",
        "custno":"1538943811",
        "apkind":"014",
        "subapkind":"014001",
        "apdt":"20180815",
        "aptm":"164500",
        "workdate":"20180815",
        "tradeacco":"000621718538943814",
        "taaccountid":"475A7FB19598436383",
        "tano":"47",
        "productid":"8904",
        "sharetype":"A",
        "accptmd":"1",
        "branchcode":"247000",
        "distributorcode":"247"}
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626320454Tk';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
""
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626320454Tk';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"serialno":"201808311540590841HD","isSend":"1",'extFields':{"errCode":"0000", "errMsg":"交易成功", "tranSt":"Y"}}
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311540590841HD' AND APPLYST='Y'AND TRANSST='Y' AND PAYST='Y';","SELECT * from cts.cts_tradequtychg WHERE REFERNO='201808311540590841HD' AND PRODUCTID='9999'AND CHANGEQUTY='9.9';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"refercapno":"5B57DE5B20F7bc4E",
        "reemFlag":"1",
        "selltype":1,
        "periodic":"true",
        "mixProd":"true",
        "bigVCustno":"1597219235",
        "honourFlag":"1",
        "newFlag":"0",
        "partPayment":"false",
        "subquty":"10.00",
        "feetp":"07",
        "feemode":"1",
        "feevalue":"0.01",
        "serialno":"201808311626320878Tp",
        "custno":"1538943811",
        "apkind":"014",
        "subapkind":"014001",
        "apdt":"20180815",
        "aptm":"164500",
        "workdate":"20180815",
        "tradeacco":"000621718538943814",
        "taaccountid":"475A7FB19598436383",
        "tano":"47",
        "productid":"8904",
        "sharetype":"A",
        "accptmd":"1",
        "branchcode":"247000",
        "distributorcode":"247"}
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626320878Tp';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
""
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626320878Tp';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"serialno":"201808311540590273Kt","isSend":"1",'extFields':{"errCode":"0000", "errMsg":"交易成功", "tranSt":"Y"}}
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311540590273Kt' AND APPLYST='Y'AND TRANSST='Y' AND PAYST='Y';","SELECT * from cts.cts_tradequtychg WHERE REFERNO='201808311540590273Kt' AND PRODUCTID='8904'AND CHANGEQUTY='10';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"refercapno":"5B57DE5B20F7bc4E",
        "sellCouponId":"5B569A9A006Abc55",
        "reemFlag":"1",
        "selltype":1,
        "periodic":"true",
        "mixProd":"true",
        "bigVCustno":"1597219235",
        "honourFlag":"1",
        "newFlag":"0",
        "partPayment":"false",
        "subquty":"10.00",
        "feetp":"07",
        "feemode":"1",
        "feevalue":"0.01",
        "serialno":"201808311626320262tN",
        "custno":"1538943811",
        "apkind":"014",
        "subapkind":"014001",
        "apdt":"20180815",
        "aptm":"164500",
        "workdate":"20180815",
        "tradeacco":"000621718538943814",
        "taaccountid":"475A7FB19598436383",
        "tano":"47",
        "productid":"8904",
        "sharetype":"A",
        "accptmd":"1",
        "branchcode":"247000",
        "distributorcode":"247"}
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626320262tN';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
""
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626320262tN';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"serialno":"201808311540590511FT","isSend":"1",'extFields':{"errCode":"0000", "errMsg":"交易成功", "tranSt":"Y"}}
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311540590511FT' AND APPLYST='Y'AND TRANSST='Y' AND PAYST='Y';","SELECT * from cts.cts_tradequtychg WHERE REFERNO='201808311540590511FT' AND PRODUCTID='9999'AND CHANGEQUTY='9.9';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"refercapno":"5B57DE5B20F7bc4E",
        "sellCouponId":"5B569A9A006Abc55",
        "reemFlag":"1",
        "selltype":1,
        "periodic":"true",
        "mixProd":"true",
        "bigVCustno":"1597219235",
        "honourFlag":"1",
        "newFlag":"0",
        "partPayment":"false",
        "subquty":"10.00",
        "feetp":"07",
        "feemode":"1",
        "feevalue":"0.01",
        "serialno":"201808311626320948TK",
        "custno":"1538943811",
        "apkind":"014",
        "subapkind":"014001",
        "apdt":"20180815",
        "aptm":"164500",
        "workdate":"20180815",
        "tradeacco":"000621718538943814",
        "taaccountid":"475A7FB19598436383",
        "tano":"47",
        "productid":"8904",
        "sharetype":"A",
        "accptmd":"1",
        "branchcode":"247000",
        "distributorcode":"247"}
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626320948TK';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
""
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626320948TK';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"serialno":"201808311540590315UC","isSend":"1",'extFields':{"errCode":"0000", "errMsg":"交易成功", "tranSt":"Y"}}
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311540590315UC' AND APPLYST='Y'AND TRANSST='Y' AND PAYST='Y';","SELECT * from cts.cts_tradequtychg WHERE REFERNO='201808311540590315UC' AND PRODUCTID='8904'AND CHANGEQUTY='10';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"refercapno":"5B569C0E0225bc08",
        "sellCouponId":"5B569A9A006Abc55",
        "reemFlag":"0",
        "selltype":1,
        "periodic":"true",
        "mixProd":"true",
        "bigVCustno":"1503136940",
        "honourFlag":"1",
        "newFlag":"0",
        "partPayment":"false",
        "subquty":"10.00",
        "feetp":"07",
        "feemode":"1",
        "feevalue":"0.0",
        "serialno":"201808311626320710hS",
        "custno":"1538943811",
        "apkind":"014",
        "subapkind":"014001",
        "apdt":"20180831",
        "aptm":"164500",
        "workdate":"20180831",
        "tradeacco":"000621718538943814",
        "taaccountid":"475A7FB19598436383",
        "tano":"47",
        "productid":"8802",
        "sharetype":"A",
        "accptmd":"1",
        "branchcode":"247000",
        "distributorcode":"247"}
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626320710hS';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
""
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626320710hS';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"serialno":"201808311540590277bT","isSend":"1",'extFields':{"errCode":"0000", "errMsg":"交易成功", "tranSt":"Y"}}
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311540590277bT' AND APPLYST='Y'AND TRANSST='Y' AND PAYST='Y';","SELECT * from cts.cts_tradequtychg WHERE REFERNO='201808311540590277bT' AND PRODUCTID='9999'AND CHANGEQUTY='9.9';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"refercapno":"5B569C0E0225bc08",
        "sellCouponId":"5B569A9A006Abc55",
        "reemFlag":"0",
        "selltype":1,
        "periodic":"true",
        "mixProd":"true",
        "bigVCustno":"1503136940",
        "honourFlag":"1",
        "newFlag":"0",
        "partPayment":"false",
        "subquty":"10.00",
        "feetp":"07",
        "feemode":"1",
        "feevalue":"0.0",
        "serialno":"201808311626320133tc",
        "custno":"1538943811",
        "apkind":"014",
        "subapkind":"014001",
        "apdt":"20180831",
        "aptm":"164500",
        "workdate":"20180831",
        "tradeacco":"000621718538943814",
        "taaccountid":"475A7FB19598436383",
        "tano":"47",
        "productid":"8802",
        "sharetype":"A",
        "accptmd":"1",
        "branchcode":"247000",
        "distributorcode":"247"}
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626320133tc';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
""
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626320133tc';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"serialno":"${}","isSend":"1",'extFields':{"errCode":"0000", "errMsg":"交易成功", "tranSt":"Y"}}
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='${}' AND APPLYST='Y'AND TRANSST='Y' AND PAYST='Y';","SELECT * from cts.cts_tradequtychg WHERE REFERNO='${}' AND PRODUCTID='8901'AND CHANGEQUTY='10';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"refercapno":"5B569C0E0225bc08",
        "sellCouponId":"5B569A9A006Abc55",
        "reemFlag":"0",
        "selltype":1,
        "periodic":"true",
        "mixProd":"true",
        "bigVCustno":"1503136940",
        "honourFlag":"1",
        "newFlag":"0",
        "partPayment":"false",
        "subquty":"10.00",
        "feetp":"07",
        "feemode":"1",
        "feevalue":"0.0",
        "serialno":"201808311626320824Lt",
        "custno":"1538943811",
        "apkind":"014",
        "subapkind":"014001",
        "apdt":"20170820",
        "aptm":"164500",
        "workdate":"20170820",
        "tradeacco":"000621718538943814",
        "taaccountid":"475A7FB19598436383",
        "tano":"47",
        "productid":"8802",
        "sharetype":"A",
        "accptmd":"1",
        "branchcode":"247000",
        "distributorcode":"247"}
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626320824Lt';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"refercapno":"5B57DD261DFCbc4E",
        "reemFlag":"0",
        "selltype":1,
        "periodic":"true",
        "mixProd":"true",
        "bigVCustno":"1503257540",
        "honourFlag":"1",
        "newFlag":"0",
        "partPayment":"false",
        "subquty":"10.00",
        "feetp":"07",
        "feemode":"1",
        "feevalue":"0.0",
        "serialno":"201808311626320740qI",
        "custno":"1538943811",
        "apkind":"014",
        "subapkind":"014001",
        "apdt":"20180831",
        "aptm":"164500",
        "workdate":"20180831",
        "tradeacco":"000621718538943814",
        "taaccountid":"475A7FB19598436383",
        "tano":"47",
        "productid":"8901",
        "sharetype":"A",
        "accptmd":"1",
        "branchcode":"247000",
        "distributorcode":"247"}
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626320740qI';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
""
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626320740qI';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"serialno":"20180831154059010bC","isSend":"1",'extFields':{"errCode":"0000", "errMsg":"交易成功", "tranSt":"Y"}}
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='20180831154059010bC' AND APPLYST='Y'AND TRANSST='Y' AND PAYST='Y';","SELECT * from cts.cts_tradequtychg WHERE REFERNO='20180831154059010bC' AND PRODUCTID='9999'AND CHANGEQUTY='9.9';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"refercapno":"5B57DD261DFCbc4E",
        "reemFlag":"0",
        "selltype":1,
        "periodic":"true",
        "mixProd":"true",
        "bigVCustno":"1503257540",
        "honourFlag":"1",
        "newFlag":"0",
        "partPayment":"false",
        "subquty":"10.00",
        "feetp":"07",
        "feemode":"1",
        "feevalue":"0.0",
        "serialno":"201808311626320846jT",
        "custno":"1538943811",
        "apkind":"014",
        "subapkind":"014001",
        "apdt":"20180831",
        "aptm":"164500",
        "workdate":"20180831",
        "tradeacco":"000621718538943814",
        "taaccountid":"475A7FB19598436383",
        "tano":"47",
        "productid":"8901",
        "sharetype":"A",
        "accptmd":"1",
        "branchcode":"247000",
        "distributorcode":"247"}
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626320846jT';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
""
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626320846jT';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"serialno":"201808311540590445Uc","isSend":"1",'extFields':{"errCode":"0000", "errMsg":"交易成功", "tranSt":"Y"}}
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311540590445Uc' AND APPLYST='Y'AND TRANSST='Y' AND PAYST='Y';","SELECT * from cts.cts_tradequtychg WHERE REFERNO='201808311540590445Uc' AND PRODUCTID='8901'AND CHANGEQUTY='10';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"refercapno":"5B57DD261DFCbc4E",
        "reemFlag":"0",
        "selltype":1,
        "periodic":"true",
        "mixProd":"true",
        "bigVCustno":"1503257540",
        "honourFlag":"1",
        "newFlag":"0",
        "partPayment":"false",
        "subquty":"10.00",
        "feetp":"07",
        "feemode":"1",
        "feevalue":"0.0",
        "serialno":"201808311626320677LS",
        "custno":"1538943811",
        "apkind":"014",
        "subapkind":"014001",
        "apdt":"20170820",
        "aptm":"164500",
        "workdate":"20170820",
        "tradeacco":"000621718538943814",
        "taaccountid":"475A7FB19598436383",
        "tano":"47",
        "productid":"8901",
        "sharetype":"A",
        "accptmd":"1",
        "branchcode":"247000",
        "distributorcode":"247"}
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626320677LS';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"refercapno":"5B7A57C6008EbcA4",
        "reemFlag":"0",
        "selltype":1,
        "periodic":"true",
        "mixProd":"true",
        "bigVCustno":"1597219235",
        "honourFlag":"1",
        "newFlag":"0",
        "partPayment":"false",
        "subquty":"10.00",
        "feetp":"07",
        "feemode":"1",
        "feevalue":"0.0",
        "serialno":"201808311626320615RH",
        "custno":"1538943811",
        "apkind":"014",
        "subapkind":"014001",
        "apdt":"20180831",
        "aptm":"164500",
        "workdate":"20180831",
        "tradeacco":"000621718538943814",
        "taaccountid":"475A7FB19598436383",
        "tano":"47",
        "productid":"8904",
        "sharetype":"A",
        "accptmd":"1",
        "branchcode":"247000",
        "distributorcode":"247"}
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626320615RH';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
""
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626320615RH';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"serialno":"20180831154059072Lw","isSend":"1",'extFields':{"errCode":"0000", "errMsg":"交易成功", "tranSt":"Y"}}
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='20180831154059072Lw' AND APPLYST='Y'AND TRANSST='Y' AND PAYST='Y';","SELECT * from cts.cts_tradequtychg WHERE REFERNO='20180831154059072Lw' AND PRODUCTID='9999'AND CHANGEQUTY='9.9';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"refercapno":"5B7A57C6008EbcA4",
        "reemFlag":"0",
        "selltype":1,
        "periodic":"true",
        "mixProd":"true",
        "bigVCustno":"1597219235",
        "honourFlag":"1",
        "newFlag":"0",
        "partPayment":"false",
        "subquty":"10.00",
        "feetp":"07",
        "feemode":"1",
        "feevalue":"0.0",
        "serialno":"201808311626320667uN",
        "custno":"1538943811",
        "apkind":"014",
        "subapkind":"014001",
        "apdt":"20180831",
        "aptm":"164500",
        "workdate":"20180831",
        "tradeacco":"000621718538943814",
        "taaccountid":"475A7FB19598436383",
        "tano":"47",
        "productid":"8904",
        "sharetype":"A",
        "accptmd":"1",
        "branchcode":"247000",
        "distributorcode":"247"}
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626320667uN';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
""
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626320667uN';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"serialno":"201808311540590157Fn","isSend":"1",'extFields':{"errCode":"0000", "errMsg":"交易成功", "tranSt":"Y"}}
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311540590157Fn' AND APPLYST='Y'AND TRANSST='Y' AND PAYST='Y';","SELECT * from cts.cts_tradequtychg WHERE REFERNO='201808311540590157Fn' AND PRODUCTID='8904'AND CHANGEQUTY='10';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"refercapno":"5B7A57C6008EbcA4",
        "reemFlag":"0",
        "selltype":1,
        "periodic":"true",
        "mixProd":"true",
        "bigVCustno":"1597219235",
        "honourFlag":"1",
        "newFlag":"0",
        "partPayment":"false",
        "subquty":"10.00",
        "feetp":"07",
        "feemode":"1",
        "feevalue":"0.0",
        "serialno":"201808311626320211Ne",
        "custno":"1538943811",
        "apkind":"014",
        "subapkind":"014001",
        "apdt":"20170820",
        "aptm":"164500",
        "workdate":"20170820",
        "tradeacco":"000621718538943814",
        "taaccountid":"475A7FB19598436383",
        "tano":"47",
        "productid":"8904",
        "sharetype":"A",
        "accptmd":"1",
        "branchcode":"247000",
        "distributorcode":"247"}
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["SELECT * from cts.cts_traderequest WHERE SERIALNO='201808311626320211Ne';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"serialno":"20180831162632098YM",
        "invTp":"1",
        "mobileNo":"13760200147",
        "loginPasswd":"202cb962ac59075b964b07152d234b70",
        "phoneCode":"1111",
        "refererMobile":"15021996508",
        "accofrom":"1",
        "distributorCode":"247",
        "branchcode":"24700",
        "email":"744700813@qq.com",
        "oneRecommend":"1"
}
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["select * from cif.cif_custinfo WHERE MOBILENO='13760200147';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"serialno":"201808311626320892qU",
        "invTp":"2",
        "mobileNo":"13760200148",
        "loginPasswd":"202cb962ac59075b964b07152d234b70",
        "phoneCode":"1111",
        "accofrom":"1",
        "distributorCode":"247",
        "branchcode":"24700",
        "email":"744700813@qq.com",
        "oneRecommend":"0"
}
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
["select * from cif.cif_custinfo WHERE MOBILENO='13760200148';"]
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"serialno":"201808311626320864Em",
        "invTp":"1",
        "mobileNo":"",
        "loginPasswd":"202cb962ac59075b964b07152d234b70",
        "phoneCode":"1111",
        "refererMobile":"15021996508",
        "accofrom":"1",
        "distributorCode":"247",
        "branchcode":"24700",
        "email":"744700813@qq.com",
        "oneRecommend":"1"
}
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
""
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"serialno":"201808311626320878vm",
        "invTp":"1",
        "mobileNo":"13760200149",
        "loginPasswd":"",
        "phoneCode":"1111",
        "refererMobile":"15021996508",
        "accofrom":"1",
        "distributorCode":"247",
        "branchcode":"24700",
        "email":"744700813@qq.com",
        "oneRecommend":"1"
}
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
""
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"serialno":"201808311626320623xL",
        "invTp":"1",
        "mobileNo":"1502199644",
        "loginPasswd":"202cb962ac59075b964b07152d234b70",
        "phoneCode":"1111",
        "refererMobile":"15021996508",
        "accofrom":"1",
        "distributorCode":"247",
        "branchcode":"24700",
        "email":"744700813@qq.com",
        "oneRecommend":"1"
}
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
""
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"serialno":"201808311626320466qi",
        "invTp":"1",
        "mobileNo":"150219964489",
        "loginPasswd":"202cb962ac59075b964b07152d234b70",
        "phoneCode":"1111",
        "refererMobile":"15021996508",
        "accofrom":"1",
        "distributorCode":"247",
        "branchcode":"24700",
        "email":"744700813@qq.com",
        "oneRecommend":"1"
}
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
""
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"serialno":"20180831162632051Ws",
        "invTp":"1",
        "mobileNo":"15021996@44",
        "loginPasswd":"202cb962ac59075b964b07152d234b70",
        "phoneCode":"1111",
        "refererMobile":"15021996508",
        "accofrom":"1",
        "distributorCode":"247",
        "branchcode":"24700",
        "email":"744700813@qq.com",
        "oneRecommend":"1"
}
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
""
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"serialno":"201808311626320201Xm",
        "invTp":"1",
        "mobileNo":"15021996 44",
        "loginPasswd":"202cb962ac59075b964b07152d234b70",
        "phoneCode":"1111",
        "refererMobile":"15021996508",
        "accofrom":"1",
        "distributorCode":"247",
        "branchcode":"24700",
        "email":"744700813@qq.com",
        "oneRecommend":"1"
}
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
""
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"serialno":"201808311626320971QU",
        "invTp":"1",
        "mobileNo":"13760200147",
        "loginPasswd":"202cb962ac59075b964b07152d234b70",
        "phoneCode":"1111",
        "refererMobile":"15021996508",
        "accofrom":"1",
        "distributorCode":"247",
        "branchcode":"24700",
        "email":"744700813@qq.com",
        "oneRecommend":"1"
}
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
""
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"loginName":"13760200147",
        "loginPwd":"202cb962ac59075b964b07152d234b70",
        "accoFrom":"1",
}
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
""
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"loginName":"13760200148",
        "loginPwd":"202cb962ac59075b964b07152d234b70",
        "accoFrom":"1",
}
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
""
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"loginName":"13760200147",
        "loginPwd":"202cb962ac59075b964b07152d234b70",
        "accoFrom":"1",
}
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
""
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"loginName":"13760200147",
        "loginPwd":"202cb962ac59075b964b07152d234b70",
        "accoFrom":"1",
}
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
""
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"loginName":"13760200147",
        "loginPwd":"202cb962ac59075b964b07152d234b70",
        "accoFrom":"1",
}
 Fri, 31 Aug 2018 16:26:32  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
""
 Fri, 31 Aug 2018 16:26:33  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"loginName":"",
        "loginPwd":"202cb962ac59075b964b07152d234b70",
        "accoFrom":"1",
}
 Fri, 31 Aug 2018 16:26:33  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
""
 Fri, 31 Aug 2018 16:26:33  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"loginName":"13760200147",
        "loginPwd":"",
        "accoFrom":"1",
}
 Fri, 31 Aug 2018 16:26:33  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
""
 Fri, 31 Aug 2018 16:26:33  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"loginName":"13760200011",
        "loginPwd":"202cb962ac59075b964b07152d234b70",
        "accoFrom":"1",
}
 Fri, 31 Aug 2018 16:26:33  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
""
 Fri, 31 Aug 2018 16:26:33  INFO Doexcel.py getAllCaseDatas [ line:86 ] 初始化之后的请求数据为：
{"loginName":"13760200147",
        "loginPwd":"202cb962ac59075b964b07152d23",
        "accoFrom":"1",
}
 Fri, 31 Aug 2018 16:26:33  INFO Doexcel.py getAllCaseDatas [ line:87 ] 初始化之后的sql语句为：
""
 Fri, 31 Aug 2018 16:26:33  INFO test_api.py <module> [ line:19 ] 所有的测试数据为：[{'case_id': 1, 'api_name': '【充值】102工行充值', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.VaccoCoreTradeService', 'method': 'recharge', 'request_data': '{\n "subamt":"5000",\n "paymodel":"05",\n "channel":"JX",\n "bankid":"205B0CF78550959969",\n "bankno":"102",\n "bankacco":"6222620110038594231",\n "serialno":"201808311626310260xJ",\n "custno":"1604578759",\n "apkind":"922",\n "subapkind":"922001",\n "apdt":"20180516",\n "aptm":"093540",\n "workdate":"20180516",\n "tradeacco":"001035098604578762",\n "taaccountid":"475B0CB66D40432285",\n "tano":"47",\n "sharetype":"A",\n "accptmd":"1",\n "branchcode":"247000",\n "distributorcode":"247",\n"extFields":{"rechargeFlag":"1"}\n}', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'201808311626310260xJ\';"]', 'expected_data': "{.*'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功'.*}", 'affected_caseId': 2, 'compare_type': 1, 'wait_time': None}, {'case_id': 2, 'api_name': '【充值后续】102工行充值成功', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.ProductCoreTradeService', 'method': 'tradeContinue', 'request_data': "{'serialno':'201808311540580752Ts','extFields':{'errCode':'0000', 'errMsg':'交易成功', 'tranSt':'Y'}}", 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'201808311540580752Ts\' AND PAYST=\'Y\';", "SELECT * from cts.cts_tradequtychg WHERE REFERNO=\'201808311540580752Ts\' AND CHANGEQUTY=\'-5000\';"]', 'expected_data': "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功！', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}", 'affected_caseId': None, 'compare_type': 0, 'wait_time': None}, {'case_id': 3, 'api_name': '【充值】102工行充值', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.VaccoCoreTradeService', 'method': 'recharge', 'request_data': '{\n "subamt":"5000",\n "paymodel":"05",\n "channel":"JX",\n "bankid":"205B0CF78550959969",\n "bankno":"102",\n "bankacco":"6222620110038594231",\n "serialno":"201808311626310695bj",\n "custno":"1604578759",\n "apkind":"922",\n "subapkind":"922001",\n "apdt":"20180516",\n "aptm":"093540",\n "workdate":"20180516",\n "tradeacco":"001035098604578762",\n "taaccountid":"475B0CB66D40432285",\n "tano":"47",\n "sharetype":"A",\n "accptmd":"1",\n "branchcode":"247000",\n "distributorcode":"247",\n"extFields":{\'rechargeFlag\':\'1\'}\n}', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'201808311626310695bj\';"]', 'expected_data': "{.*'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功'.*}", 'affected_caseId': 4, 'compare_type': 1, 'wait_time': None}, {'case_id': 4, 'api_name': '【充值后续】102工行充值失败', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.ProductCoreTradeService', 'method': 'tradeContinue', 'request_data': '{"serialno":"201808311540580511KE",\'extFields\':{"errCode":"0001", "errMsg":"交易失败", "tranSt":"F"}}', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'201808311540580511KE\' AND PAYST=\'F\';"]', 'expected_data': "{'extFields': {}, 'errCode': '0001', 'tradeStatus': 'F', 'tradeMsg': '交易失败', 'errMsg': '交易失败', 'tradeCode': '0001', 'exObjFields': {}, 'key': None}", 'affected_caseId': None, 'compare_type': 0, 'wait_time': None}, {'case_id': 5, 'api_name': '【充值】103农行充值', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.VaccoCoreTradeService', 'method': 'recharge', 'request_data': '{\n "subamt":"1000",\n "paymodel":"05",\n "channel":"JX",\n "bankid":"205AE16EA606342921",\n "bankno":"103",\n "bankacco":"6222620110038594231",\n "serialno":"201808311626310531Bz",\n "custno":"1538967652",\n "apkind":"922",\n "subapkind":"922001",\n "apdt":"20180501",\n "aptm":"133540",\n "workdate":"20180501",\n "tradeacco":"000621718538967655",\n "taaccountid":"475AE141EE07252223",\n "tano":"47",\n "sharetype":"A",\n "accptmd":"2",\n "branchcode":"247000",\n "distributorcode":"247",\n"extFields":{\'rechargeFlag\':\'1\'}\n}', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'201808311626310531Bz\';"]', 'expected_data': "{.*'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功'.*}", 'affected_caseId': 6, 'compare_type': 1, 'wait_time': None}, {'case_id': 6, 'api_name': '【充值后续】103农行充值成功', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.ProductCoreTradeService', 'method': 'tradeContinue', 'request_data': '{"serialno":"201808311540580770aN",\'extFields\':{"errCode":"0000", "errMsg":"交易成功", "tranSt":"Y"}}', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'201808311540580770aN\' AND PAYST=\'Y\';", "SELECT * from cts.cts_tradequtychg WHERE REFERNO=\'201808311540580770aN\' AND CHANGEQUTY=\'-1000\';"]', 'expected_data': "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功！', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}", 'affected_caseId': None, 'compare_type': 0, 'wait_time': None}, {'case_id': 7, 'api_name': '【充值】103农行充值', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.VaccoCoreTradeService', 'method': 'recharge', 'request_data': '{\n "subamt":"1000",\n "paymodel":"05",\n "channel":"JX",\n "bankid":"205AE16EA606342921",\n "bankno":"103",\n "bankacco":"6222620110038594231",\n "serialno":"201808311626320202xL",\n "custno":"1538967652",\n "apkind":"922",\n "subapkind":"922001",\n "apdt":"20180501",\n "aptm":"133540",\n "workdate":"20180501",\n "tradeacco":"000621718538967655",\n "taaccountid":"475AE141EE07252223",\n "tano":"47",\n "sharetype":"A",\n "accptmd":"2",\n "branchcode":"247000",\n "distributorcode":"247",\n"extFields":{\'rechargeFlag\':\'1\'}\n}', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'201808311626320202xL\';"]', 'expected_data': "{.*'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功'.*}", 'affected_caseId': 8, 'compare_type': 1, 'wait_time': None}, {'case_id': 8, 'api_name': '【充值后续】103农行充值失败', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.ProductCoreTradeService', 'method': 'tradeContinue', 'request_data': '{"serialno":"201808311540580284ZM",\'extFields\':{"errCode":"0001", "errMsg":"交易失败", "tranSt":"F"}}', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'201808311540580284ZM\' AND PAYST=\'F\';"]', 'expected_data': "{'extFields': {}, 'errCode': '0001', 'tradeStatus': 'F', 'tradeMsg': '交易失败', 'errMsg': '交易失败', 'tradeCode': '0001', 'exObjFields': {}, 'key': None}", 'affected_caseId': None, 'compare_type': 0, 'wait_time': None}, {'case_id': 9, 'api_name': '【充值】104中行充值', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.VaccoCoreTradeService', 'method': 'recharge', 'request_data': '{\n "subamt":"500",\n "paymodel":"05",\n "channel":"JX",\n "bankid":"205AE16EA606342921",\n "bankno":"104",\n "bankacco":"6222620110038594231",\n "serialno":"201808311626320456Ji",\n "custno":"1538967652",\n "apkind":"922",\n "subapkind":"922001",\n "apdt":"20180509",\n "aptm":"133540",\n "workdate":"20180509",\n "tradeacco":"000621718538967655",\n "taaccountid":"475AE141EE07252223",\n "tano":"47",\n "sharetype":"A",\n "accptmd":"3",\n "branchcode":"247000",\n "distributorcode":"247",\n"extFields":{\'rechargeFlag\':\'1\'}\n}', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'201808311626320456Ji\';"]', 'expected_data': "{.*'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功'.*}", 'affected_caseId': 10, 'compare_type': 1, 'wait_time': None}, {'case_id': 10, 'api_name': '【充值后续】104中行充值成功', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.ProductCoreTradeService', 'method': 'tradeContinue', 'request_data': '{"serialno":"201808311540580616CR","isSend":"1",\'extFields\':{"errCode":"0000", "errMsg":"交易成功", "tranSt":"Y"}}', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'201808311540580616CR\' AND PAYST=\'Y\';", "SELECT * from cts.cts_tradequtychg WHERE REFERNO=\'201808311540580616CR\' AND CHANGEQUTY=\'-500\';"]', 'expected_data': "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功！', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}", 'affected_caseId': None, 'compare_type': 0, 'wait_time': None}, {'case_id': 11, 'api_name': '【充值】104中行充值', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.VaccoCoreTradeService', 'method': 'recharge', 'request_data': '{\n "subamt":"500",\n "paymodel":"05",\n "channel":"JX",\n "bankid":"205AE16EA606342921",\n "bankno":"104",\n "bankacco":"6222620110038594231",\n "serialno":"201808311626320420jF",\n "custno":"1538967652",\n "apkind":"922",\n "subapkind":"922001",\n "apdt":"20180509",\n "aptm":"133540",\n "workdate":"20180509",\n "tradeacco":"000621718538967655",\n "taaccountid":"475AE141EE07252223",\n "tano":"47",\n "sharetype":"A",\n "accptmd":"3",\n "branchcode":"247000",\n "distributorcode":"247",\n"extFields":{\'rechargeFlag\':\'1\'}\n}', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'201808311626320420jF\';"]', 'expected_data': "{.*'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功'.*}", 'affected_caseId': 12, 'compare_type': 1, 'wait_time': None}, {'case_id': 12, 'api_name': '【充值后续】104中行充值失败', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.ProductCoreTradeService', 'method': 'tradeContinue', 'request_data': '{"serialno":"201808311540580331ks",\'extFields\':{"errCode":"0001", "errMsg":"交易失败", "tranSt":"F"}}', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'201808311540580331ks\' AND PAYST=\'F\';"]', 'expected_data': "{'extFields': {}, 'errCode': '0001', 'tradeStatus': 'F', 'tradeMsg': '交易失败', 'errMsg': '交易失败', 'tradeCode': '0001', 'exObjFields': {}, 'key': None}", 'affected_caseId': None, 'compare_type': 0, 'wait_time': None}, {'case_id': 13, 'api_name': '【充值】105建行充值', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.VaccoCoreTradeService', 'method': 'recharge', 'request_data': '{\n "subamt":"4000",\n "paymodel":"05",\n "channel":"JX",\n "bankid":"205AE16EA606342921",\n "bankno":"105",\n "bankacco":"6222620110038594231",\n "serialno":"201808311626320528gF",\n "custno":"1538967652",\n "apkind":"922",\n "subapkind":"922001",\n "apdt":"20180228",\n "aptm":"223540",\n "workdate":"20180228",\n "tradeacco":"000621718538967655",\n "taaccountid":"475AE141EE07252223",\n "tano":"47",\n "sharetype":"A",\n "accptmd":"2",\n "branchcode":"247000",\n "distributorcode":"247",\n"extFields":{\'rechargeFlag\':\'1\'}\n}', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'201808311626320528gF\';"]', 'expected_data': "{.*'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功'.*}", 'affected_caseId': 14, 'compare_type': 1, 'wait_time': None}, {'case_id': 14, 'api_name': '【充值后续】105建行充值成功', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.ProductCoreTradeService', 'method': 'tradeContinue', 'request_data': '{"serialno":"201808311540580955Hy","isSend":"1",\'extFields\':{"errCode":"0000", "errMsg":"交易成功", "tranSt":"Y"}}', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'201808311540580955Hy\' AND PAYST=\'Y\';", "SELECT * from cts.cts_tradequtychg WHERE REFERNO=\'201808311540580955Hy\' AND CHANGEQUTY=\'-4000\';"]', 'expected_data': "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功！', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}", 'affected_caseId': None, 'compare_type': 0, 'wait_time': None}, {'case_id': 15, 'api_name': '【充值】105建行充值', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.VaccoCoreTradeService', 'method': 'recharge', 'request_data': '{\n "subamt":"4000",\n "paymodel":"05",\n "channel":"JX",\n "bankid":"205AE16EA606342921",\n "bankno":"105",\n "bankacco":"6222620110038594231",\n "serialno":"201808311626320766fa",\n "custno":"1538967652",\n "apkind":"922",\n "subapkind":"922001",\n "apdt":"20180228",\n "aptm":"223540",\n "workdate":"20180228",\n "tradeacco":"000621718538967655",\n "taaccountid":"475AE141EE07252223",\n "tano":"47",\n "sharetype":"A",\n "accptmd":"2",\n "branchcode":"247000",\n "distributorcode":"247",\n"extFields":{\'rechargeFlag\':\'1\'}\n}', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'201808311626320766fa\';"]', 'expected_data': "{.*'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功'.*}", 'affected_caseId': 16, 'compare_type': 1, 'wait_time': None}, {'case_id': 16, 'api_name': '【充值后续】105建行充值失败', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.ProductCoreTradeService', 'method': 'tradeContinue', 'request_data': '{"serialno":"201808311540580934WS",\'extFields\':{"errCode":"0001", "errMsg":"交易失败", "tranSt":"F"}}', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'201808311540580934WS\' AND PAYST=\'F\';"]', 'expected_data': "{'extFields': {}, 'errCode': '0001', 'tradeStatus': 'F', 'tradeMsg': '交易失败', 'errMsg': '交易失败', 'tradeCode': '0001', 'exObjFields': {}, 'key': None}", 'affected_caseId': None, 'compare_type': 0, 'wait_time': None}, {'case_id': 17, 'api_name': '【充值】301交通充值', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.VaccoCoreTradeService', 'method': 'recharge', 'request_data': '{\n "subamt":"8999.12",\n "paymodel":"05",\n "channel":"JX",\n "bankid":"205AE16EA606342921",\n "bankno":"301",\n "bankacco":"6222620110038594231",\n "serialno":"201808311626320227qo",\n "custno":"1538967652",\n "apkind":"922",\n "subapkind":"922001",\n "apdt":"20180302",\n "aptm":"233540",\n "workdate":"20180302",\n "tradeacco":"000621718538967655",\n "taaccountid":"475AE141EE07252223",\n "tano":"47",\n "sharetype":"A",\n "accptmd":"1",\n "branchcode":"247000",\n "distributorcode":"247","extFields":{\'rechargeFlag\':\'1\'}\n}', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'201808311626320227qo\';"]', 'expected_data': "{.*'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功'.*}", 'affected_caseId': 18, 'compare_type': 1, 'wait_time': None}, {'case_id': 18, 'api_name': '【充值后续】301交通充值成功', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.ProductCoreTradeService', 'method': 'tradeContinue', 'request_data': '{"serialno":"201808311540580728aC","isSend":"1",\'extFields\':{"errCode":"0000", "errMsg":"交易成功", "tranSt":"Y"}}', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'201808311540580728aC\' AND PAYST=\'Y\';", "SELECT * from cts.cts_tradequtychg WHERE REFERNO=\'201808311540580728aC\' AND CHANGEQUTY=\'-8999.12\';"]', 'expected_data': "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功！', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}", 'affected_caseId': None, 'compare_type': 0, 'wait_time': None}, {'case_id': 19, 'api_name': '【充值】301交通充值', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.VaccoCoreTradeService', 'method': 'recharge', 'request_data': '{\n "subamt":"8999.12",\n "paymodel":"05",\n "channel":"JX",\n "bankid":"205AE16EA606342921",\n "bankno":"301",\n "bankacco":"6222620110038594231",\n "serialno":"20180831162632041OT",\n "custno":"1538967652",\n "apkind":"922",\n "subapkind":"922001",\n "apdt":"20180302",\n "aptm":"233540",\n "workdate":"20180302",\n "tradeacco":"000621718538967655",\n "taaccountid":"475AE141EE07252223",\n "tano":"47",\n "sharetype":"A",\n "accptmd":"1",\n "branchcode":"247000",\n "distributorcode":"247","extFields":{\'rechargeFlag\':\'1\'}\n}', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'20180831162632041OT\';"]', 'expected_data': "{.*'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功'.*}", 'affected_caseId': 20, 'compare_type': 1, 'wait_time': None}, {'case_id': 20, 'api_name': '【充值后续】301交通充值失败', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.ProductCoreTradeService', 'method': 'tradeContinue', 'request_data': '{"serialno":"201808311540580660UP",\'extFields\':{"errCode":"0001", "errMsg":"交易失败", "tranSt":"F"}}', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'201808311540580660UP\' AND PAYST=\'F\';"]', 'expected_data': "{'extFields': {}, 'errCode': '0001', 'tradeStatus': 'F', 'tradeMsg': '交易失败', 'errMsg': '交易失败', 'tradeCode': '0001', 'exObjFields': {}, 'key': None}", 'affected_caseId': None, 'compare_type': 0, 'wait_time': None}, {'case_id': 21, 'api_name': '【充值】302中信充值', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.VaccoCoreTradeService', 'method': 'recharge', 'request_data': '{\n "subamt":"200.12",\n "paymodel":"05",\n "channel":"JX",\n "bankid":"205AE16EA606342921",\n "bankno":"302",\n "bankacco":"6222620110038594231",\n "serialno":"201808311626320146yK",\n "custno":"1538967652",\n "apkind":"922",\n "subapkind":"922001",\n "apdt":"20180501",\n "aptm":"093540",\n "workdate":"20180516",\n "tradeacco":"000621718538967655",\n "taaccountid":"475AE141EE07252223",\n "tano":"47",\n "sharetype":"A",\n "accptmd":"2",\n "branchcode":"247000",\n "distributorcode":"247","extFields":{\'rechargeFlag\':\'1\'}\n}', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'201808311626320146yK\';"]', 'expected_data': "{.*'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功'.*}", 'affected_caseId': 22, 'compare_type': 1, 'wait_time': None}, {'case_id': 22, 'api_name': '【充值后续】302中信充值成功', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.ProductCoreTradeService', 'method': 'tradeContinue', 'request_data': '{"serialno":"201808311540580137mX","isSend":"1",\'extFields\':{"errCode":"0000", "errMsg":"交易成功", "tranSt":"Y"}}', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'201808311540580137mX\' AND PAYST=\'Y\';", "SELECT * from cts.cts_tradequtychg WHERE REFERNO=\'201808311540580137mX\' AND CHANGEQUTY=\'-200.12\';"]', 'expected_data': "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功！', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}", 'affected_caseId': None, 'compare_type': 0, 'wait_time': None}, {'case_id': 23, 'api_name': '【充值】302中信充值', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.VaccoCoreTradeService', 'method': 'recharge', 'request_data': '{\n "subamt":"200.12",\n "paymodel":"05",\n "channel":"JX",\n "bankid":"205AE16EA606342921",\n "bankno":"302",\n "bankacco":"6222620110038594231",\n "serialno":"201808311626320349Rn",\n "custno":"1538967652",\n "apkind":"922",\n "subapkind":"922001",\n "apdt":"20180501",\n "aptm":"093540",\n "workdate":"20180516",\n "tradeacco":"000621718538967655",\n "taaccountid":"475AE141EE07252223",\n "tano":"47",\n "sharetype":"A",\n "accptmd":"2",\n "branchcode":"247000",\n "distributorcode":"247","extFields":{\'rechargeFlag\':\'1\'}\n}', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'201808311626320349Rn\';"]', 'expected_data': "{.*'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功'.*}", 'affected_caseId': 24, 'compare_type': 1, 'wait_time': None}, {'case_id': 24, 'api_name': '【充值后续】302中信充值失败', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.ProductCoreTradeService', 'method': 'tradeContinue', 'request_data': '{"serialno":"201808311540580101iS",\'extFields\':{"errCode":"0001", "errMsg":"交易失败", "tranSt":"F"}}', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'201808311540580101iS\' AND PAYST=\'F\';"]', 'expected_data': "{'extFields': {}, 'errCode': '0001', 'tradeStatus': 'F', 'tradeMsg': '交易失败', 'errMsg': '交易失败', 'tradeCode': '0001', 'exObjFields': {}, 'key': None}", 'affected_caseId': None, 'compare_type': 0, 'wait_time': None}, {'case_id': 25, 'api_name': '【充值】303光大充值', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.VaccoCoreTradeService', 'method': 'recharge', 'request_data': '{\n "subamt":"5000",\n "paymodel":"05",\n "channel":"JX",\n "bankid":"205AE16EA606342921",\n "bankno":"303",\n "bankacco":"6222620110038594231",\n "serialno":"201808311626320246tN",\n "custno":"1538967652",\n "apkind":"922",\n "subapkind":"922001",\n "apdt":"20180201",\n "aptm":"093540",\n "workdate":"20180201",\n "tradeacco":"000621718538967655",\n "taaccountid":"475AE141EE07252223",\n "tano":"47",\n "sharetype":"A",\n "accptmd":"3",\n "branchcode":"247000",\n "distributorcode":"247","extFields":{\'rechargeFlag\':\'1\'}\n}', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'201808311626320246tN\';"]', 'expected_data': "{.*'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功'.*}", 'affected_caseId': 26, 'compare_type': 1, 'wait_time': None}, {'case_id': 26, 'api_name': '【充值后续】303光大充值成功', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.ProductCoreTradeService', 'method': 'tradeContinue', 'request_data': '{"serialno":"201808311540580787ei","isSend":"1",\'extFields\':{"errCode":"0000", "errMsg":"交易成功", "tranSt":"Y"}}', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'201808311540580787ei\' AND PAYST=\'Y\';", "SELECT * from cts.cts_tradequtychg WHERE REFERNO=\'201808311540580787ei\' AND CHANGEQUTY=\'-5000\';"]', 'expected_data': "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功！', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}", 'affected_caseId': None, 'compare_type': 0, 'wait_time': None}, {'case_id': 27, 'api_name': '【充值】303光大充值', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.VaccoCoreTradeService', 'method': 'recharge', 'request_data': '{\n "subamt":"5000",\n "paymodel":"05",\n "channel":"JX",\n "bankid":"205AE16EA606342921",\n "bankno":"303",\n "bankacco":"6222620110038594231",\n "serialno":"201808311626320603Az",\n "custno":"1538967652",\n "apkind":"922",\n "subapkind":"922001",\n "apdt":"20180201",\n "aptm":"093540",\n "workdate":"20180201",\n "tradeacco":"000621718538967655",\n "taaccountid":"475AE141EE07252223",\n "tano":"47",\n "sharetype":"A",\n "accptmd":"3",\n "branchcode":"247000",\n "distributorcode":"247","extFields":{\'rechargeFlag\':\'1\'}\n}', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'201808311626320603Az\';"]', 'expected_data': "{.*'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功'.*}", 'affected_caseId': 28, 'compare_type': 1, 'wait_time': None}, {'case_id': 28, 'api_name': '【充值后续】303光大充值失败', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.ProductCoreTradeService', 'method': 'tradeContinue', 'request_data': '{"serialno":"201808311540580912Xk",\'extFields\':{"errCode":"0001", "errMsg":"交易失败", "tranSt":"F"}}', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'201808311540580912Xk\' AND PAYST=\'F\';"]', 'expected_data': "{'extFields': {}, 'errCode': '0001', 'tradeStatus': 'F', 'tradeMsg': '交易失败', 'errMsg': '交易失败', 'tradeCode': '0001', 'exObjFields': {}, 'key': None}", 'affected_caseId': None, 'compare_type': 0, 'wait_time': None}, {'case_id': 29, 'api_name': '【充值】304华夏充值', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.VaccoCoreTradeService', 'method': 'recharge', 'request_data': '{\n "subamt":"500.8",\n "paymodel":"05",\n "channel":"JX",\n "bankid":"205AE16EA606342921",\n "bankno":"304",\n "bankacco":"6222620110038594231",\n "serialno":"201808311626320397vy",\n "custno":"1538967652",\n "apkind":"922",\n "subapkind":"922001",\n "apdt":"20180501",\n "aptm":"093540",\n "workdate":"20180516",\n "tradeacco":"000621718538967655",\n "taaccountid":"475AE141EE07252223",\n "tano":"47",\n "sharetype":"A",\n "accptmd":"1",\n "branchcode":"247000",\n "distributorcode":"247","extFields":{\'rechargeFlag\':\'1\'}\n}', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'201808311626320397vy\';"]', 'expected_data': "{.*'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功'.*}", 'affected_caseId': 30, 'compare_type': 1, 'wait_time': None}, {'case_id': 30, 'api_name': '【充值后续】304华夏充值成功', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.ProductCoreTradeService', 'method': 'tradeContinue', 'request_data': '{"serialno":"201808311540580301mo","isSend":"1",\'extFields\':{"errCode":"0000", "errMsg":"交易成功", "tranSt":"Y"}}', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'201808311540580301mo\' AND PAYST=\'Y\';", "SELECT * from cts.cts_tradequtychg WHERE REFERNO=\'201808311540580301mo\' AND CHANGEQUTY=\'-500.8\';"]', 'expected_data': "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功！', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}", 'affected_caseId': None, 'compare_type': 0, 'wait_time': None}, {'case_id': 31, 'api_name': '【充值】304华夏充值', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.VaccoCoreTradeService', 'method': 'recharge', 'request_data': '{\n "subamt":"500.8",\n "paymodel":"05",\n "channel":"JX",\n "bankid":"205AE16EA606342921",\n "bankno":"304",\n "bankacco":"6222620110038594231",\n "serialno":"201808311626320201BX",\n "custno":"1538967652",\n "apkind":"922",\n "subapkind":"922001",\n "apdt":"20180501",\n "aptm":"093540",\n "workdate":"20180516",\n  "tradeacco":"000621718538967655",\n "taaccountid":"475AE141EE07252223",\n "tano":"47",\n "sharetype":"A",\n "accptmd":"1",\n "branchcode":"247000",\n "distributorcode":"247","extFields":{\'rechargeFlag\':\'1\'}\n}', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'201808311626320201BX\';"]', 'expected_data': "{.*'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功'.*}", 'affected_caseId': 32, 'compare_type': 1, 'wait_time': None}, {'case_id': 32, 'api_name': '【充值后续】304华夏充值失败', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.ProductCoreTradeService', 'method': 'tradeContinue', 'request_data': '{"serialno":"201808311540580222qV",\'extFields\':{"errCode":"0001", "errMsg":"交易失败", "tranSt":"F"}}', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'201808311540580222qV\' AND PAYST=\'F\';"]', 'expected_data': "{'extFields': {}, 'errCode': '0001', 'tradeStatus': 'F', 'tradeMsg': '交易失败', 'errMsg': '交易失败', 'tradeCode': '0001', 'exObjFields': {}, 'key': None}", 'affected_caseId': None, 'compare_type': 0, 'wait_time': None}, {'case_id': 33, 'api_name': '【充值】305民生充值', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.VaccoCoreTradeService', 'method': 'recharge', 'request_data': '{\n "subamt":"1001",\n "paymodel":"05",\n "channel":"JX",\n "bankid":"205AE16EA606342921",\n "bankno":"305",\n "bankacco":"6222620110038594231",\n "serialno":"201808311626320318yQ",\n "custno":"1538967652",\n "apkind":"922",\n "subapkind":"922001",\n "apdt":"20181201",\n "aptm":"093540",\n "workdate":"20181201",\n "tradeacco":"000621718538967655",\n "taaccountid":"475AE141EE07252223",\n "tano":"47",\n "sharetype":"A",\n "accptmd":"1",\n "branchcode":"247000",\n "distributorcode":"247","extFields":{\'rechargeFlag\':\'1\'}\n}', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'201808311626320318yQ\';"]', 'expected_data': "{.*'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功'.*}", 'affected_caseId': 34, 'compare_type': 1, 'wait_time': None}, {'case_id': 34, 'api_name': '【充值后续】305民生充值成功', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.ProductCoreTradeService', 'method': 'tradeContinue', 'request_data': '{"serialno":"20180831154058083We","isSend":"1",\'extFields\':{"errCode":"0000", "errMsg":"交易成功", "tranSt":"Y"}}', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'20180831154058083We\' AND PAYST=\'Y\';", "SELECT * from cts.cts_tradequtychg WHERE REFERNO=\'20180831154058083We\' AND CHANGEQUTY=\'-1001\';"]', 'expected_data': "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功！', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}", 'affected_caseId': None, 'compare_type': 0, 'wait_time': None}, {'case_id': 35, 'api_name': '【充值】305民生充值', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.VaccoCoreTradeService', 'method': 'recharge', 'request_data': '{\n "subamt":"1001",\n "paymodel":"05",\n "channel":"JX",\n "bankid":"205AE16EA606342921",\n "bankno":"305",\n "bankacco":"6222620110038594231",\n "serialno":"201808311626320367YN",\n "custno":"1538967652",\n "apkind":"922",\n "subapkind":"922001",\n "apdt":"20181201",\n "aptm":"093540",\n "workdate":"20181201",\n "tradeacco":"000621718538967655",\n "taaccountid":"475AE141EE07252223",\n "tano":"47",\n "sharetype":"A",\n "accptmd":"1",\n "branchcode":"247000",\n "distributorcode":"247","extFields":{\'rechargeFlag\':\'1\'}\n}', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'201808311626320367YN\';"]', 'expected_data': "{.*'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功'.*}", 'affected_caseId': 36, 'compare_type': 1, 'wait_time': None}, {'case_id': 36, 'api_name': '【充值后续】305民生充值失败', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.ProductCoreTradeService', 'method': 'tradeContinue', 'request_data': '{"serialno":"201808311540580588hR",\'extFields\':{"errCode":"0001", "errMsg":"交易失败", "tranSt":"F"}}', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'201808311540580588hR\' AND PAYST=\'F\';"]', 'expected_data': "{'extFields': {}, 'errCode': '0001', 'tradeStatus': 'F', 'tradeMsg': '交易失败', 'errMsg': '交易失败', 'tradeCode': '0001', 'exObjFields': {}, 'key': None}", 'affected_caseId': None, 'compare_type': 0, 'wait_time': None}, {'case_id': 37, 'api_name': '【充值】306广发充值', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.VaccoCoreTradeService', 'method': 'recharge', 'request_data': '{\n "subamt":"5000",\n "paymodel":"05",\n "channel":"JX",\n "bankid":"205B0CF78550959969",\n "bankno":"306",\n "bankacco":"6222620110038594231",\n "serialno":"201808311626320953hZ",\n "custno":"1604578759",\n "apkind":"922",\n "subapkind":"922001",\n "apdt":"20180516",\n "aptm":"093540",\n "workdate":"20180516",\n "tradeacco":"001035098604578762",\n "taaccountid":"475B0CB66D40432285",\n "tano":"47",\n "sharetype":"A",\n "accptmd":"1",\n "branchcode":"247000",\n "distributorcode":"247",\n"extFields":{\'rechargeFlag\':\'1\'}\n}', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'201808311626320953hZ\';"]', 'expected_data': "{.*'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功'.*}", 'affected_caseId': 38, 'compare_type': 1, 'wait_time': None}, {'case_id': 38, 'api_name': '【充值后续】306工行充值成功', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.ProductCoreTradeService', 'method': 'tradeContinue', 'request_data': '{"serialno":"201808311540580980zj","isSend":"1",\'extFields\':{"errCode":"0000", "errMsg":"交易成功", "tranSt":"Y"}}', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'201808311540580980zj\' AND PAYST=\'Y\';", "SELECT * from cts.cts_tradequtychg WHERE REFERNO=\'201808311540580980zj\' AND CHANGEQUTY=\'-5000\';"]', 'expected_data': "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功！', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}", 'affected_caseId': None, 'compare_type': 0, 'wait_time': None}, {'case_id': 39, 'api_name': '【充值】306广发充值', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.VaccoCoreTradeService', 'method': 'recharge', 'request_data': '{\n "subamt":"5000",\n "paymodel":"05",\n "channel":"JX",\n "bankid":"205B0CF78550959969",\n "bankno":"306",\n "bankacco":"6222620110038594231",\n "serialno":"201808311626320472Yr",\n "custno":"1604578759",\n "apkind":"922",\n "subapkind":"922001",\n "apdt":"20180516",\n "aptm":"093540",\n "workdate":"20180516",\n "tradeacco":"001035098604578762",\n "taaccountid":"475B0CB66D40432285",\n "tano":"47",\n "sharetype":"A",\n "accptmd":"1",\n "branchcode":"247000",\n "distributorcode":"247",\n"extFields":{\'rechargeFlag\':\'1\'}\n}', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'201808311626320472Yr\';"]', 'expected_data': "{.*'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功'.*}", 'affected_caseId': 40, 'compare_type': 1, 'wait_time': None}, {'case_id': 40, 'api_name': '【充值后续】306工行充值失败', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.ProductCoreTradeService', 'method': 'tradeContinue', 'request_data': '{"serialno":"201808311540580931RS",\'extFields\':{"errCode":"0001", "errMsg":"交易失败", "tranSt":"F"}}', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'201808311540580931RS\' AND PAYST=\'F\';"]', 'expected_data': "{'extFields': {}, 'errCode': '0001', 'tradeStatus': 'F', 'tradeMsg': '交易失败', 'errMsg': '交易失败', 'tradeCode': '0001', 'exObjFields': {}, 'key': None}", 'affected_caseId': None, 'compare_type': 0, 'wait_time': None}, {'case_id': 41, 'api_name': '【充值】307平安充值', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.VaccoCoreTradeService', 'method': 'recharge', 'request_data': '{\n "subamt":"400",\n "paymodel":"05",\n "channel":"JX",\n "bankid":"205B0CF78550959969",\n "bankno":"307",\n "bankacco":"6222620110038594231",\n "serialno":"201808311626320305cA",\n "custno":"1604578759",\n "apkind":"922",\n "subapkind":"922001",\n "apdt":"20180516",\n "aptm":"093540",\n "workdate":"20180516",\n "tradeacco":"001035098604578762",\n "taaccountid":"475B0CB66D40432285",\n "tano":"47",\n "sharetype":"A",\n "accptmd":"1",\n "branchcode":"247000",\n "distributorcode":"247",\n"extFields":{\'rechargeFlag\':\'1\'}\n}', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'201808311626320305cA\';"]', 'expected_data': "{.*'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功'.*}", 'affected_caseId': 42, 'compare_type': 1, 'wait_time': None}, {'case_id': 42, 'api_name': '【充值后续】307平安充值成功', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.ProductCoreTradeService', 'method': 'tradeContinue', 'request_data': '{"serialno":"201808311540580832TP","isSend":"1",\'extFields\':{"errCode":"0000", "errMsg":"交易成功", "tranSt":"Y"}}', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'201808311540580832TP\' AND PAYST=\'Y\';", "SELECT * from cts.cts_tradequtychg WHERE REFERNO=\'201808311540580832TP\' AND CHANGEQUTY=\'-400\';"]', 'expected_data': "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功！', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}", 'affected_caseId': None, 'compare_type': 0, 'wait_time': None}, {'case_id': 43, 'api_name': '【充值】307平安充值', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.VaccoCoreTradeService', 'method': 'recharge', 'request_data': '{\n "subamt":"400",\n "paymodel":"05",\n "channel":"JX",\n "bankid":"205B0CF78550959969",\n "bankno":"307",\n "bankacco":"6222620110038594231",\n "serialno":"201808311626320831cS",\n "custno":"1604578759",\n "apkind":"922",\n "subapkind":"922001",\n "apdt":"20180516",\n "aptm":"093540",\n "workdate":"20180516",\n "tradeacco":"001035098604578762",\n "taaccountid":"475B0CB66D40432285",\n "tano":"47",\n "sharetype":"A",\n "accptmd":"1",\n "branchcode":"247000",\n "distributorcode":"247",\n"extFields":{\'rechargeFlag\':\'1\'}\n}', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'201808311626320831cS\';"]', 'expected_data': "{.*'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功'.*}", 'affected_caseId': 44, 'compare_type': 1, 'wait_time': None}, {'case_id': 44, 'api_name': '【充值后续】307平安充值失败', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.ProductCoreTradeService', 'method': 'tradeContinue', 'request_data': '{"serialno":"201808311540580934VM",\'extFields\':{"errCode":"0001", "errMsg":"交易失败", "tranSt":"F"}}', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'201808311540580934VM\' AND PAYST=\'F\';"]', 'expected_data': "{'extFields': {}, 'errCode': '0001', 'tradeStatus': 'F', 'tradeMsg': '交易失败', 'errMsg': '交易失败', 'tradeCode': '0001', 'exObjFields': {}, 'key': None}", 'affected_caseId': None, 'compare_type': 0, 'wait_time': None}, {'case_id': 45, 'api_name': '【充值】308招商充值', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.VaccoCoreTradeService', 'method': 'recharge', 'request_data': '{\n "subamt":"50000.9",\n "paymodel":"05",\n "channel":"JX",\n "bankid":"205B0CF78550959969",\n "bankno":"308",\n "bankacco":"6222620110038594231",\n "serialno":"201808311626320366ki",\n "custno":"1604578759",\n "apkind":"922",\n "subapkind":"922001",\n "apdt":"20180516",\n "aptm":"093540",\n "workdate":"20180516",\n "tradeacco":"001035098604578762",\n "taaccountid":"475B0CB66D40432285",\n "tano":"47",\n "sharetype":"A",\n "accptmd":"1",\n "branchcode":"247000",\n "distributorcode":"247",\n"extFields":{\'rechargeFlag\':\'1\'}\n}', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'201808311626320366ki\';"]', 'expected_data': "{.*'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功'.*}", 'affected_caseId': 46, 'compare_type': 1, 'wait_time': None}, {'case_id': 46, 'api_name': '【充值后续】308招商充值成功', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.ProductCoreTradeService', 'method': 'tradeContinue', 'request_data': '{"serialno":"201808311540580678vI","isSend":"1",\'extFields\':{"errCode":"0000", "errMsg":"交易成功", "tranSt":"Y"}}', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'201808311540580678vI\' AND PAYST=\'Y\';", "SELECT * from cts.cts_tradequtychg WHERE REFERNO=\'201808311540580678vI\' AND CHANGEQUTY=\'-50000.9\';"]', 'expected_data': "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功！', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}", 'affected_caseId': None, 'compare_type': 0, 'wait_time': None}, {'case_id': 47, 'api_name': '【充值】308招商充值', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.VaccoCoreTradeService', 'method': 'recharge', 'request_data': '{\n "subamt":"5000",\n "paymodel":"05",\n "channel":"JX",\n "bankid":"205B0CF78550959969",\n "bankno":"308",\n "bankacco":"6222620110038594231",\n "serialno":"201808311626320134bL",\n "custno":"1604578759",\n "apkind":"922",\n "subapkind":"922001",\n "apdt":"20180516",\n "aptm":"093540",\n "workdate":"20180516",\n "tradeacco":"001035098604578762",\n "taaccountid":"475B0CB66D40432285",\n "tano":"47",\n "sharetype":"A",\n "accptmd":"1",\n "branchcode":"247000",\n "distributorcode":"247",\n"extFields":{\'rechargeFlag\':\'1\'}\n}', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'201808311626320134bL\';"]', 'expected_data': "{.*'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功'.*}", 'affected_caseId': 48, 'compare_type': 1, 'wait_time': None}, {'case_id': 48, 'api_name': '【充值后续】308招商充值失败', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.ProductCoreTradeService', 'method': 'tradeContinue', 'request_data': '{"serialno":"201808311540580734Bs",\'extFields\':{"errCode":"0001", "errMsg":"交易失败", "tranSt":"F"}}', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'201808311540580734Bs\' AND PAYST=\'F\';"]', 'expected_data': "{'extFields': {}, 'errCode': '0001', 'tradeStatus': 'F', 'tradeMsg': '交易失败', 'errMsg': '交易失败', 'tradeCode': '0001', 'exObjFields': {}, 'key': None}", 'affected_caseId': None, 'compare_type': 0, 'wait_time': None}, {'case_id': 49, 'api_name': '【充值】309兴业充值', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.VaccoCoreTradeService', 'method': 'recharge', 'request_data': '{\n "subamt":"1000.00",\n "paymodel":"05",\n "channel":"JX",\n "bankid":"205B0CF78550959969",\n "bankno":"309",\n "bankacco":"6222620110038594231",\n "serialno":"201808311626320908rf",\n "custno":"1604578759",\n "apkind":"922",\n "subapkind":"922001",\n "apdt":"20180516",\n "aptm":"093540",\n "workdate":"20180516",\n "tradeacco":"001035098604578762",\n "taaccountid":"475B0CB66D40432285",\n "tano":"47",\n "sharetype":"A",\n "accptmd":"1",\n "branchcode":"247000",\n "distributorcode":"247",\n"extFields":{\'rechargeFlag\':\'1\'}\n}', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'201808311626320908rf\';"]', 'expected_data': "{.*'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功'.*}", 'affected_caseId': 50, 'compare_type': 1, 'wait_time': None}, {'case_id': 50, 'api_name': '【充值后续】309工行充值成功', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.ProductCoreTradeService', 'method': 'tradeContinue', 'request_data': '{"serialno":"201808311540580425Gp","isSend":"1",\'extFields\':{"errCode":"0000", "errMsg":"交易成功", "tranSt":"Y"}}', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'201808311540580425Gp\' AND PAYST=\'Y\';", "SELECT * from cts.cts_tradequtychg WHERE REFERNO=\'201808311540580425Gp\' AND CHANGEQUTY=\'-1000.00\';"]', 'expected_data': "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功！', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}", 'affected_caseId': None, 'compare_type': 0, 'wait_time': None}, {'case_id': 51, 'api_name': '【充值】309兴业充值', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.VaccoCoreTradeService', 'method': 'recharge', 'request_data': '{\n "subamt":"5000",\n "paymodel":"05",\n "channel":"JX",\n "bankid":"205B0CF78550959969",\n "bankno":"309",\n "bankacco":"6222620110038594231",\n "serialno":"201808311626320754dJ",\n "custno":"1604578759",\n "apkind":"922",\n "subapkind":"922001",\n "apdt":"20180516",\n "aptm":"093540",\n "workdate":"20180516",\n "tradeacco":"001035098604578762",\n "taaccountid":"475B0CB66D40432285",\n "tano":"47",\n "sharetype":"A",\n "accptmd":"1",\n "branchcode":"247000",\n "distributorcode":"247",\n"extFields":{\'rechargeFlag\':\'1\'}\n}', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'201808311626320754dJ\';"]', 'expected_data': "{.*'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功'.*}", 'affected_caseId': 52, 'compare_type': 1, 'wait_time': None}, {'case_id': 52, 'api_name': '【充值后续】309工行充值失败', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.ProductCoreTradeService', 'method': 'tradeContinue', 'request_data': '{"serialno":"201808311540580669Eu",\'extFields\':{"errCode":"0001", "errMsg":"交易失败", "tranSt":"F"}}', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'201808311540580669Eu\' AND PAYST=\'F\';"]', 'expected_data': "{'extFields': {}, 'errCode': '0001', 'tradeStatus': 'F', 'tradeMsg': '交易失败', 'errMsg': '交易失败', 'tradeCode': '0001', 'exObjFields': {}, 'key': None}", 'affected_caseId': None, 'compare_type': 0, 'wait_time': None}, {'case_id': 53, 'api_name': '【充值】310浦发充值成功', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.VaccoCoreTradeService', 'method': 'recharge', 'request_data': '{\n "subamt":"222",\n "paymodel":"05",\n "channel":"JX",\n "bankid":"205B0CF78550959969",\n "bankno":"310",\n "bankacco":"6222620110038594231",\n "serialno":"201808311626320827SU",\n "custno":"1604578759",\n "apkind":"922",\n "subapkind":"922001",\n "apdt":"20180516",\n "aptm":"093540",\n "workdate":"20180516",\n "tradeacco":"001035098604578762",\n "taaccountid":"475B0CB66D40432285",\n "tano":"47",\n "sharetype":"A",\n "accptmd":"1",\n "branchcode":"247000",\n "distributorcode":"247",\n"extFields":{\'rechargeFlag\':\'1\'}\n}', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'201808311626320827SU\';"]', 'expected_data': "{.*'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功'.*}", 'affected_caseId': 54, 'compare_type': 1, 'wait_time': None}, {'case_id': 54, 'api_name': '【充值后续】310浦发充值成功', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.ProductCoreTradeService', 'method': 'tradeContinue', 'request_data': '{"serialno":"201808311540580841Qy","isSend":"1",\'extFields\':{"errCode":"0000", "errMsg":"交易成功", "tranSt":"Y"}}', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'201808311540580841Qy\' AND PAYST=\'Y\';", "SELECT * from cts.cts_tradequtychg WHERE REFERNO=\'201808311540580841Qy\' AND CHANGEQUTY=\'-222\';"]', 'expected_data': "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功！', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}", 'affected_caseId': None, 'compare_type': 0, 'wait_time': None}, {'case_id': 55, 'api_name': '【充值】310浦发充值成功', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.VaccoCoreTradeService', 'method': 'recharge', 'request_data': '{\n "subamt":"5000",\n "paymodel":"05",\n "channel":"JX",\n "bankid":"205B0CF78550959969",\n "bankno":"310",\n "bankacco":"6222620110038594231",\n "serialno":"20180831162632048MY",\n "custno":"1604578759",\n "apkind":"922",\n "subapkind":"922001",\n "apdt":"20180516",\n "aptm":"093540",\n "workdate":"20180516",\n "tradeacco":"001035098604578762",\n "taaccountid":"475B0CB66D40432285",\n "tano":"47",\n "sharetype":"A",\n "accptmd":"1",\n "branchcode":"247000",\n "distributorcode":"247",\n"extFields":{\'rechargeFlag\':\'1\'}\n}', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'20180831162632048MY\';"]', 'expected_data': "{.*'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功'.*}", 'affected_caseId': 56, 'compare_type': 1, 'wait_time': None}, {'case_id': 56, 'api_name': '【充值后续】310浦发充值失败', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.ProductCoreTradeService', 'method': 'tradeContinue', 'request_data': '{"serialno":"201808311540580377JD",\'extFields\':{"errCode":"0001", "errMsg":"交易失败", "tranSt":"F"}}', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'201808311540580377JD\' AND PAYST=\'F\';"]', 'expected_data': "{'extFields': {}, 'errCode': '0001', 'tradeStatus': 'F', 'tradeMsg': '交易失败', 'errMsg': '交易失败', 'tradeCode': '0001', 'exObjFields': {}, 'key': None}", 'affected_caseId': None, 'compare_type': 0, 'wait_time': None}, {'case_id': 57, 'api_name': '【充值】403邮政充值', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.VaccoCoreTradeService', 'method': 'recharge', 'request_data': '{\n "subamt":"555",\n "paymodel":"05",\n "channel":"JX",\n "bankid":"205B0CF78550959969",\n "bankno":"403",\n "bankacco":"6222620110038594231",\n "serialno":"201808311626320866lF",\n "custno":"1604578759",\n "apkind":"922",\n "subapkind":"922001",\n "apdt":"20180516",\n "aptm":"093540",\n "workdate":"20180516",\n "tradeacco":"001035098604578762",\n "taaccountid":"475B0CB66D40432285",\n "tano":"47",\n "sharetype":"A",\n "accptmd":"1",\n "branchcode":"247000",\n "distributorcode":"247",\n"extFields":{\'rechargeFlag\':\'1\'}\n}', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'201808311626320866lF\';"]', 'expected_data': "{.*'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功'.*}", 'affected_caseId': 58, 'compare_type': 1, 'wait_time': None}, {'case_id': 58, 'api_name': '【充值后续】403邮政充值成功', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.ProductCoreTradeService', 'method': 'tradeContinue', 'request_data': '{"serialno":"201808311540580161Mo","isSend":"1",\'extFields\':{"errCode":"0000", "errMsg":"交易成功", "tranSt":"Y"}}', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'201808311540580161Mo\' AND PAYST=\'Y\';", "SELECT * from cts.cts_tradequtychg WHERE REFERNO=\'201808311540580161Mo\' AND CHANGEQUTY=\'-555\';"]', 'expected_data': "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功！', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}", 'affected_caseId': None, 'compare_type': 0, 'wait_time': None}, {'case_id': 59, 'api_name': '【充值】403邮政充值', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.VaccoCoreTradeService', 'method': 'recharge', 'request_data': '{\n "subamt":"5000",\n "paymodel":"05",\n "channel":"JX",\n "bankid":"205B0CF78550959969",\n "bankno":"403",\n "bankacco":"6222620110038594231",\n "serialno":"201808311626320485CD",\n "custno":"1604578759",\n "apkind":"922",\n "subapkind":"922001",\n "apdt":"20180516",\n "aptm":"093540",\n "workdate":"20180516",\n "tradeacco":"001035098604578762",\n "taaccountid":"475B0CB66D40432285",\n "tano":"47",\n "sharetype":"A",\n "accptmd":"1",\n "branchcode":"247000",\n "distributorcode":"247",\n"extFields":{\'rechargeFlag\':\'1\'}\n}', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'201808311626320485CD\';"]', 'expected_data': "{.*'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功'.*}", 'affected_caseId': 60, 'compare_type': 1, 'wait_time': None}, {'case_id': 60, 'api_name': '【充值后续】403邮政充值失败', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.ProductCoreTradeService', 'method': 'tradeContinue', 'request_data': '{"serialno":"201808311540580361ff",\'extFields\':{"errCode":"0001", "errMsg":"交易失败", "tranSt":"F"}}', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'201808311540580361ff\' AND PAYST=\'F\';"]', 'expected_data': "{'extFields': {}, 'errCode': '0001', 'tradeStatus': 'F', 'tradeMsg': '交易失败', 'errMsg': '交易失败', 'tradeCode': '0001', 'exObjFields': {}, 'key': None}", 'affected_caseId': None, 'compare_type': 0, 'wait_time': None}, {'case_id': 61, 'api_name': '【充值】810北京银行充值', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.VaccoCoreTradeService', 'method': 'recharge', 'request_data': '{\n "subamt":"5005.1",\n "paymodel":"05",\n "channel":"JX",\n "bankid":"205B0CF78550959969",\n "bankno":"810",\n "bankacco":"6222620110038594231",\n "serialno":"201808311626320924ia",\n "custno":"1604578759",\n "apkind":"922",\n "subapkind":"922001",\n "apdt":"20180516",\n "aptm":"093540",\n "workdate":"20180516",\n "tradeacco":"001035098604578762",\n "taaccountid":"475B0CB66D40432285",\n "tano":"47",\n "sharetype":"A",\n "accptmd":"1",\n "branchcode":"247000",\n "distributorcode":"247",\n"extFields":{\'rechargeFlag\':\'1\'}\n}', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'201808311626320924ia\';"]', 'expected_data': "{.*'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功'.*}", 'affected_caseId': 62, 'compare_type': 1, 'wait_time': None}, {'case_id': 62, 'api_name': '【充值后续】810北京银行充值成功', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.ProductCoreTradeService', 'method': 'tradeContinue', 'request_data': '{"serialno":"201808311540580835sh","isSend":"1",\'extFields\':{"errCode":"0000", "errMsg":"交易成功", "tranSt":"Y"}}', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'201808311540580835sh\' AND PAYST=\'Y\';", "SELECT * from cts.cts_tradequtychg WHERE REFERNO=\'201808311540580835sh\' AND CHANGEQUTY=\'-5005.1\';"]', 'expected_data': "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功！', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}", 'affected_caseId': None, 'compare_type': 0, 'wait_time': None}, {'case_id': 63, 'api_name': '【充值】810北京银行充值', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.VaccoCoreTradeService', 'method': 'recharge', 'request_data': '{\n "subamt":"5000",\n "paymodel":"05",\n "channel":"JX",\n "bankid":"205B0CF78550959969",\n "bankno":"810",\n "bankacco":"6222620110038594231",\n "serialno":"201808311626320838sr",\n "custno":"1604578759",\n "apkind":"922",\n "subapkind":"922001",\n "apdt":"20180516",\n "aptm":"093540",\n "workdate":"20180516",\n "tradeacco":"001035098604578762",\n "taaccountid":"475B0CB66D40432285",\n "tano":"47",\n "sharetype":"A",\n "accptmd":"1",\n "branchcode":"247000",\n "distributorcode":"247",\n"extFields":{\'rechargeFlag\':\'1\'}\n}', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'201808311626320838sr\';"]', 'expected_data': "{.*'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功'.*}", 'affected_caseId': 64, 'compare_type': 1, 'wait_time': None}, {'case_id': 64, 'api_name': '【充值后续】810北京银行充值失败', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.ProductCoreTradeService', 'method': 'tradeContinue', 'request_data': '{"serialno":"201808311540580873ER",\'extFields\':{"errCode":"0001", "errMsg":"交易失败", "tranSt":"F"}}', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'201808311540580873ER\' AND PAYST=\'F\';"]', 'expected_data': "{'extFields': {}, 'errCode': '0001', 'tradeStatus': 'F', 'tradeMsg': '交易失败', 'errMsg': '交易失败', 'tradeCode': '0001', 'exObjFields': {}, 'key': None}", 'affected_caseId': None, 'compare_type': 0, 'wait_time': None}, {'case_id': 65, 'api_name': '【充值】811上海银行充值', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.VaccoCoreTradeService', 'method': 'recharge', 'request_data': '{\n "subamt":"65555",\n "paymodel":"05",\n "channel":"JX",\n "bankid":"205B0CF78550959969",\n "bankno":"811",\n "bankacco":"6222620110038594231",\n "serialno":"201808311626320334Ea",\n "custno":"1604578759",\n "apkind":"922",\n "subapkind":"922001",\n "apdt":"20180516",\n "aptm":"093540",\n "workdate":"20180516",\n "tradeacco":"001035098604578762",\n "taaccountid":"475B0CB66D40432285",\n "tano":"47",\n "sharetype":"A",\n "accptmd":"1",\n "branchcode":"247000",\n "distributorcode":"247",\n"extFields":{\'rechargeFlag\':\'1\'}\n}', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'201808311626320334Ea\';"]', 'expected_data': "{.*'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功'.*}", 'affected_caseId': 66, 'compare_type': 1, 'wait_time': None}, {'case_id': 66, 'api_name': '【充值后续】811上海银行充值成功', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.ProductCoreTradeService', 'method': 'tradeContinue', 'request_data': '{"serialno":"201808311540580999Ux","isSend":"1",\'extFields\':{"errCode":"0000", "errMsg":"交易成功", "tranSt":"Y"}}', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'201808311540580999Ux\' AND PAYST=\'Y\';", "SELECT * from cts.cts_tradequtychg WHERE REFERNO=\'201808311540580999Ux\' AND CHANGEQUTY=\'-65555\';"]', 'expected_data': "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功！', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}", 'affected_caseId': None, 'compare_type': 0, 'wait_time': None}, {'case_id': 67, 'api_name': '【充值】811上海银行充值', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.VaccoCoreTradeService', 'method': 'recharge', 'request_data': '{\n "subamt":"5000",\n "paymodel":"05",\n "channel":"JX",\n "bankid":"205B0CF78550959969",\n "bankno":"811",\n "bankacco":"6222620110038594231",\n "serialno":"201808311626320172Ih",\n "custno":"1604578759",\n "apkind":"922",\n "subapkind":"922001",\n "apdt":"20180516",\n "aptm":"093540",\n "workdate":"20180516",\n "tradeacco":"001035098604578762",\n "taaccountid":"475B0CB66D40432285",\n "tano":"47",\n "sharetype":"A",\n "accptmd":"1",\n "branchcode":"247000",\n "distributorcode":"247",\n"extFields":{\'rechargeFlag\':\'1\'}\n}', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'201808311626320172Ih\';"]', 'expected_data': "{.*'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功'.*}", 'affected_caseId': 68, 'compare_type': 1, 'wait_time': None}, {'case_id': 68, 'api_name': '【充值后续】811上海银行充值失败', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.ProductCoreTradeService', 'method': 'tradeContinue', 'request_data': '{"serialno":"201808311540580452WV",\'extFields\':{"errCode":"0001", "errMsg":"交易失败", "tranSt":"F"}}', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'201808311540580452WV\' AND PAYST=\'F\';"]', 'expected_data': "{'extFields': {}, 'errCode': '0001', 'tradeStatus': 'F', 'tradeMsg': '交易失败', 'errMsg': '交易失败', 'tradeCode': '0001', 'exObjFields': {}, 'key': None}", 'affected_caseId': None, 'compare_type': 0, 'wait_time': None}, {'case_id': 69, 'api_name': '【充值】813宁波银行充值', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.VaccoCoreTradeService', 'method': 'recharge', 'request_data': '{\n "subamt":"5000",\n "paymodel":"05",\n "channel":"JX",\n "bankid":"205B0CF78550959969",\n "bankno":"813",\n "bankacco":"6222620110038594231",\n "serialno":"201808311626320120hg",\n "custno":"1604578759",\n "apkind":"922",\n "subapkind":"922001",\n "apdt":"20180516",\n "aptm":"093540",\n "workdate":"20180516",\n "tradeacco":"001035098604578762",\n "taaccountid":"475B0CB66D40432285",\n "tano":"47",\n "sharetype":"A",\n "accptmd":"1",\n "branchcode":"247000",\n "distributorcode":"247",\n"extFields":{\'rechargeFlag\':\'1\'}\n}', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'201808311626320120hg\';"]', 'expected_data': "{.*'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功'.*}", 'affected_caseId': 70, 'compare_type': 1, 'wait_time': None}, {'case_id': 70, 'api_name': '【充值后续】813宁波银行充值成功', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.ProductCoreTradeService', 'method': 'tradeContinue', 'request_data': '{"serialno":"201808311540580576Rb","isSend":"1",\'extFields\':{"errCode":"0000", "errMsg":"交易成功", "tranSt":"Y"}}', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'201808311540580576Rb\' AND PAYST=\'Y\';", "SELECT * from cts.cts_tradequtychg WHERE REFERNO=\'201808311540580576Rb\' AND CHANGEQUTY=\'-5000\';"]', 'expected_data': "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功！', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}", 'affected_caseId': None, 'compare_type': 0, 'wait_time': None}, {'case_id': 71, 'api_name': '【充值】813宁波银行充值', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.VaccoCoreTradeService', 'method': 'recharge', 'request_data': '{\n "subamt":"5000",\n "paymodel":"05",\n "channel":"JX",\n "bankid":"205B0CF78550959969",\n "bankno":"813",\n "bankacco":"6222620110038594231",\n "serialno":"201808311626320547Pr",\n "custno":"1604578759",\n "apkind":"922",\n "subapkind":"922001",\n "apdt":"20180516",\n "aptm":"093540",\n "workdate":"20180516",\n "tradeacco":"001035098604578762",\n "taaccountid":"475B0CB66D40432285",\n "tano":"47",\n "sharetype":"A",\n "accptmd":"1",\n "branchcode":"247000",\n "distributorcode":"247",\n"extFields":{\'rechargeFlag\':\'1\'}\n}', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'201808311626320547Pr\';"]', 'expected_data': "{.*'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功'.*}", 'affected_caseId': 72, 'compare_type': 1, 'wait_time': None}, {'case_id': 72, 'api_name': '【充值后续】813宁波银行充值失败', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.ProductCoreTradeService', 'method': 'tradeContinue', 'request_data': '{"serialno":"201808311540580364UT",\'extFields\':{"errCode":"0001", "errMsg":"交易失败", "tranSt":"F"}}', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'201808311540580364UT\' AND PAYST=\'F\';"]', 'expected_data': "{'extFields': {}, 'errCode': '0001', 'tradeStatus': 'F', 'tradeMsg': '交易失败', 'errMsg': '交易失败', 'tradeCode': '0001', 'exObjFields': {}, 'key': None}", 'affected_caseId': None, 'compare_type': 0, 'wait_time': None}, {'case_id': 73, 'api_name': '【充值】973江苏银行充值', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.VaccoCoreTradeService', 'method': 'recharge', 'request_data': '{\n "subamt":"3900.67",\n "paymodel":"05",\n "channel":"JX",\n "bankid":"205B0CF78550959969",\n "bankno":"973",\n "bankacco":"6222620110038594231",\n "serialno":"20180831162632061uB",\n "custno":"1604578759",\n "apkind":"922",\n "subapkind":"922001",\n "apdt":"20180516",\n "aptm":"093540",\n "workdate":"20180516",\n "tradeacco":"001035098604578762",\n "taaccountid":"475B0CB66D40432285",\n "tano":"47",\n "sharetype":"A",\n "accptmd":"1",\n "branchcode":"247000",\n "distributorcode":"247",\n"extFields":{\'rechargeFlag\':\'1\'}\n}', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'20180831162632061uB\';"]', 'expected_data': "{.*'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功'.*}", 'affected_caseId': 74, 'compare_type': 1, 'wait_time': None}, {'case_id': 74, 'api_name': '【充值后续】973江苏银行充值成功', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.ProductCoreTradeService', 'method': 'tradeContinue', 'request_data': '{"serialno":"201808311540580518AA","isSend":"1",\'extFields\':{"errCode":"0000", "errMsg":"交易成功", "tranSt":"Y"}}', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'201808311540580518AA\' AND PAYST=\'Y\';", "SELECT * from cts.cts_tradequtychg WHERE REFERNO=\'201808311540580518AA\' AND CHANGEQUTY=\'-3900.67\';"]', 'expected_data': "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功！', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}", 'affected_caseId': None, 'compare_type': 0, 'wait_time': None}, {'case_id': 75, 'api_name': '【充值】973江苏银行充值', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.VaccoCoreTradeService', 'method': 'recharge', 'request_data': '{\n "subamt":"5000",\n "paymodel":"05",\n "channel":"JX",\n "bankid":"205B0CF78550959969",\n "bankno":"973",\n "bankacco":"6222620110038594231",\n "serialno":"201808311626320322pE",\n "custno":"1604578759",\n "apkind":"922",\n "subapkind":"922001",\n "apdt":"20180516",\n "aptm":"093540",\n "workdate":"20180516",\n "tradeacco":"001035098604578762",\n "taaccountid":"475B0CB66D40432285",\n "tano":"47",\n "sharetype":"A",\n "accptmd":"1",\n "branchcode":"247000",\n "distributorcode":"247",\n"extFields":{\'rechargeFlag\':\'1\'}\n}', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'201808311626320322pE\';"]', 'expected_data': "{.*'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功'.*}", 'affected_caseId': 76, 'compare_type': 1, 'wait_time': None}, {'case_id': 76, 'api_name': '【充值后续】973江苏银行充值失败', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.ProductCoreTradeService', 'method': 'tradeContinue', 'request_data': '{"serialno":"201808311540580571Nt",\'extFields\':{"errCode":"0001", "errMsg":"交易失败", "tranSt":"F"}}', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'201808311540580571Nt\' AND PAYST=\'F\';"]', 'expected_data': "{'extFields': {}, 'errCode': '0001', 'tradeStatus': 'F', 'tradeMsg': '交易失败', 'errMsg': '交易失败', 'tradeCode': '0001', 'exObjFields': {}, 'key': None}", 'affected_caseId': None, 'compare_type': 0, 'wait_time': None}, {'case_id': 77, 'api_name': '【充值】970南京银行充值', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.VaccoCoreTradeService', 'method': 'recharge', 'request_data': '{\n "subamt":"3500",\n "paymodel":"05",\n "channel":"JX",\n "bankid":"205B0CF78550959969",\n "bankno":"970",\n "bankacco":"6222620110038594231",\n "serialno":"201808311626320413sw",\n "custno":"1604578759",\n "apkind":"922",\n "subapkind":"922001",\n "apdt":"20180516",\n "aptm":"093540",\n "workdate":"20180516",\n "tradeacco":"001035098604578762",\n "taaccountid":"475B0CB66D40432285",\n "tano":"47",\n "sharetype":"A",\n "accptmd":"1",\n "branchcode":"247000",\n "distributorcode":"247",\n"extFields":{\'rechargeFlag\':\'1\'}\n}', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'201808311626320413sw\';"]', 'expected_data': "{.*'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功'.*}", 'affected_caseId': 78, 'compare_type': 1, 'wait_time': None}, {'case_id': 78, 'api_name': '【充值后续】970南京银行充值成功', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.ProductCoreTradeService', 'method': 'tradeContinue', 'request_data': '{"serialno":"201808311540580576Sj","isSend":"1",\'extFields\':{"errCode":"0000", "errMsg":"交易成功", "tranSt":"Y"}}', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'201808311540580576Sj\' AND PAYST=\'Y\';", "SELECT * from cts.cts_tradequtychg WHERE REFERNO=\'201808311540580576Sj\' AND CHANGEQUTY=\'-3500\';"]', 'expected_data': "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功！', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}", 'affected_caseId': None, 'compare_type': 0, 'wait_time': None}, {'case_id': 79, 'api_name': '【充值】970南京银行充值', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.VaccoCoreTradeService', 'method': 'recharge', 'request_data': '{\n "subamt":"5000",\n "paymodel":"05",\n "channel":"JX",\n "bankid":"205B0CF78550959969",\n "bankno":"970",\n "bankacco":"6222620110038594231",\n "serialno":"201808311626320409GW",\n "custno":"1604578759",\n "apkind":"922",\n "subapkind":"922001",\n "apdt":"20180516",\n "aptm":"093540",\n "workdate":"20180516",\n "tradeacco":"001035098604578762",\n "taaccountid":"475B0CB66D40432285",\n "tano":"47",\n "sharetype":"A",\n "accptmd":"1",\n "branchcode":"247000",\n "distributorcode":"247",\n"extFields":{\'rechargeFlag\':\'1\'}\n}', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'201808311626320409GW\';"]', 'expected_data': "{.*'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功'.*}", 'affected_caseId': 80, 'compare_type': 1, 'wait_time': None}, {'case_id': 80, 'api_name': '【充值后续】970南京银行充值失败', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.ProductCoreTradeService', 'method': 'tradeContinue', 'request_data': '{"serialno":"201808311540580106lv",\'extFields\':{"errCode":"0001", "errMsg":"交易失败", "tranSt":"F"}}', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'201808311540580106lv\' AND PAYST=\'F\';"]', 'expected_data': "{'extFields': {}, 'errCode': '0001', 'tradeStatus': 'F', 'tradeMsg': '交易失败', 'errMsg': '交易失败', 'tradeCode': '0001', 'exObjFields': {}, 'key': None}", 'affected_caseId': None, 'compare_type': 0, 'wait_time': None}, {'case_id': 81, 'api_name': '【充值】974江西银行充值', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.VaccoCoreTradeService', 'method': 'recharge', 'request_data': '{\n "subamt":"5000",\n "paymodel":"05",\n "channel":"JX",\n "bankid":"205B0CF78550959969",\n "bankno":"974",\n "bankacco":"6222620110038594231",\n "serialno":"201808311626320645Cz",\n "custno":"1604578759",\n "apkind":"922",\n "subapkind":"922001",\n "apdt":"20180516",\n "aptm":"093540",\n "workdate":"20180516",\n "tradeacco":"001035098604578762",\n "taaccountid":"475B0CB66D40432285",\n "tano":"47",\n "sharetype":"A",\n "accptmd":"1",\n "branchcode":"247000",\n "distributorcode":"247",\n"extFields":{\'rechargeFlag\':\'1\'}\n}', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'201808311626320645Cz\';"]', 'expected_data': "{.*'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功'.*}", 'affected_caseId': 82, 'compare_type': 1, 'wait_time': None}, {'case_id': 82, 'api_name': '【充值后续】974江西银行充值成功', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.ProductCoreTradeService', 'method': 'tradeContinue', 'request_data': '{"serialno":"201808311540580154Mj","isSend":"1",\'extFields\':{"errCode":"0000", "errMsg":"交易成功", "tranSt":"Y"}}', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'201808311540580154Mj\' AND PAYST=\'Y\';", "SELECT * from cts.cts_tradequtychg WHERE REFERNO=\'201808311540580154Mj\' AND CHANGEQUTY=\'-5000\';"]', 'expected_data': "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功！', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}", 'affected_caseId': None, 'compare_type': 0, 'wait_time': None}, {'case_id': 83, 'api_name': '【充值】974江西银行充值', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.VaccoCoreTradeService', 'method': 'recharge', 'request_data': '{\n "subamt":"5000",\n "paymodel":"05",\n "channel":"JX",\n "bankid":"205B0CF78550959969",\n "bankno":"974",\n "bankacco":"6222620110038594231",\n "serialno":"201808311626320848jQ",\n "custno":"1604578759",\n "apkind":"922",\n "subapkind":"922001",\n "apdt":"20180516",\n "aptm":"093540",\n "workdate":"20180516",\n "tradeacco":"001035098604578762",\n "taaccountid":"475B0CB66D40432285",\n "tano":"47",\n "sharetype":"A",\n "accptmd":"1",\n "branchcode":"247000",\n "distributorcode":"247",\n"extFields":{\'rechargeFlag\':\'1\'}\n}', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'201808311626320848jQ\';"]', 'expected_data': "{.*'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功'.*}", 'affected_caseId': 84, 'compare_type': 1, 'wait_time': None}, {'case_id': 84, 'api_name': '【充值后续】974江西银行充值失败', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.ProductCoreTradeService', 'method': 'tradeContinue', 'request_data': '{"serialno":"20180831154058046Qb",\'extFields\':{"errCode":"0001", "errMsg":"交易失败", "tranSt":"F"}}', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'20180831154058046Qb\' AND PAYST=\'F\';"]', 'expected_data': "{'extFields': {}, 'errCode': '0001', 'tradeStatus': 'F', 'tradeMsg': '交易失败', 'errMsg': '交易失败', 'tradeCode': '0001', 'exObjFields': {}, 'key': None}", 'affected_caseId': None, 'compare_type': 0, 'wait_time': None}, {'case_id': 85, 'api_name': '【充值】315恒丰银行充值', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.VaccoCoreTradeService', 'method': 'recharge', 'request_data': '{\n "subamt":"40000.12",\n "paymodel":"05",\n "channel":"JX",\n "bankid":"205B0CF78550959969",\n "bankno":"315",\n "bankacco":"6222620110038594231",\n "serialno":"201808311626320805Ti",\n "custno":"1604578759",\n "apkind":"922",\n "subapkind":"922001",\n "apdt":"20180516",\n "aptm":"093540",\n "workdate":"20180516",\n "tradeacco":"001035098604578762",\n "taaccountid":"475B0CB66D40432285",\n "tano":"47",\n "sharetype":"A",\n "accptmd":"1",\n "branchcode":"247000",\n "distributorcode":"247",\n"extFields":{\'rechargeFlag\':\'1\'}\n}', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'201808311626320805Ti\';"]', 'expected_data': "{.*'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功'.*}", 'affected_caseId': 86, 'compare_type': 1, 'wait_time': None}, {'case_id': 86, 'api_name': '【充值后续】315恒丰银行充值成功', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.ProductCoreTradeService', 'method': 'tradeContinue', 'request_data': '{"serialno":"201808311540580869dj","isSend":"1",\'extFields\':{"errCode":"0000", "errMsg":"交易成功", "tranSt":"Y"}}', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'201808311540580869dj\' AND PAYST=\'Y\';", "SELECT * from cts.cts_tradequtychg WHERE REFERNO=\'201808311540580869dj\' AND CHANGEQUTY=\'-40000.12\';"]', 'expected_data': "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功！', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}", 'affected_caseId': None, 'compare_type': 0, 'wait_time': None}, {'case_id': 87, 'api_name': '【充值】315恒丰银行充值', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.VaccoCoreTradeService', 'method': 'recharge', 'request_data': '{\n "subamt":"5000",\n "paymodel":"05",\n "channel":"JX",\n "bankid":"205B0CF78550959969",\n "bankno":"315",\n "bankacco":"6222620110038594231",\n "serialno":"201808311626320786MF",\n "custno":"1604578759",\n "apkind":"922",\n "subapkind":"922001",\n "apdt":"20180516",\n "aptm":"093540",\n "workdate":"20180516",\n "tradeacco":"001035098604578762",\n "taaccountid":"475B0CB66D40432285",\n "tano":"47",\n "sharetype":"A",\n "accptmd":"1",\n "branchcode":"247000",\n "distributorcode":"247",\n"extFields":{\'rechargeFlag\':\'1\'}\n}', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'201808311626320786MF\';"]', 'expected_data': "{.*'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功'.*}", 'affected_caseId': 88, 'compare_type': 1, 'wait_time': None}, {'case_id': 88, 'api_name': '【充值后续】315恒丰银行充值失败', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.ProductCoreTradeService', 'method': 'tradeContinue', 'request_data': '{"serialno":"20180831154058068Ng",\'extFields\':{"errCode":"0001", "errMsg":"交易失败", "tranSt":"F"}}', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'20180831154058068Ng\' AND PAYST=\'F\';"]', 'expected_data': "{'extFields': {}, 'errCode': '0001', 'tradeStatus': 'F', 'tradeMsg': '交易失败', 'errMsg': '交易失败', 'tradeCode': '0001', 'exObjFields': {}, 'key': None}", 'affected_caseId': None, 'compare_type': 0, 'wait_time': None}, {'case_id': 89, 'api_name': '【充值】充值金额含特殊符号', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.VaccoCoreTradeService', 'method': 'recharge', 'request_data': '{\n "subamt":"40￥2",\n "paymodel":"05",\n "channel":"JX",\n "bankid":"205AE16EA606342921",\n "bankno":"315",\n "bankacco":"6222620110038594231",\n "serialno":"201808311626320494cO",\n "custno":"1538967652",\n "apkind":"922",\n "subapkind":"922001",\n "apdt":"20180501",\n "aptm":"093540",\n "workdate":"20180516",\n "tradeacco":"008395590573718304",\n "taaccountid":"475AF52F9665610507",\n "tano":"47",\n "sharetype":"A",\n "accptmd":"1",\n "branchcode":"247000",\n "distributorcode":"247","extFields":{\'rechargeFlag\':\'1\'}\n}', 'execute_sql': '""', 'expected_data': 'Failed to invoke method recharge, cause: java.lang.NumberFormatException', 'affected_caseId': None, 'compare_type': 0, 'wait_time': None}, {'case_id': 90, 'api_name': '【充值】cusno与其他参数不匹配', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.VaccoCoreTradeService', 'method': 'recharge', 'request_data': '{\n "subamt":"1200",\n "paymodel":"05",\n "channel":"JX",\n "bankid":"205AE16EA606342921",\n "bankno":"315",\n "bankacco":"6222620110038594231",\n "serialno":"2018083116263207Ci",\n "custno":"1538967654",\n "apkind":"922",\n "subapkind":"922001",\n "apdt":"20180501",\n "aptm":"093540",\n "workdate":"20180516",\n "tradeacco":"008395590573718304",\n "taaccountid":"475AF52F9665610507",\n "tano":"47",\n "sharetype":"A",\n "accptmd":"1",\n "branchcode":"247000",\n "distributorcode":"247","extFields":{\'rechargeFlag\':\'1\'}\n}', 'execute_sql': '""', 'expected_data': "{'extFields': None, 'errCode': '0000', 'tradeStatus': 'F', 'tradeMsg': '查询客户信息结果为空或失败', 'errMsg': '申请成功', 'tradeCode': 'Q004', 'exObjFields': {}, 'key': None}", 'affected_caseId': None, 'compare_type': 0, 'wait_time': None}, {'case_id': 91, 'api_name': '【充值】cusno错误', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.VaccoCoreTradeService', 'method': 'recharge', 'request_data': '{\n "subamt":"1200",\n "paymodel":"05",\n "channel":"JX",\n "bankid":"205AE16EA606342921",\n "bankno":"315",\n "bankacco":"6222620110038594231",\n "serialno":"201808311626320344pG",\n "custno":"1538",\n "apkind":"922",\n "subapkind":"922001",\n "apdt":"20180501",\n "aptm":"093540",\n "workdate":"20180516",\n "tradeacco":"008395590573718304",\n "taaccountid":"475AF52F9665610507",\n "tano":"47",\n "sharetype":"A",\n "accptmd":"1",\n "branchcode":"247000",\n "distributorcode":"247","extFields":{\'rechargeFlag\':\'1\'}\n}', 'execute_sql': '""', 'expected_data': "{'extFields': None, 'errCode': '0000', 'tradeStatus': 'F', 'tradeMsg': '查询客户信息结果为空或失败', 'errMsg': '申请成功', 'tradeCode': 'Q004', 'exObjFields': {}, 'key': None}", 'affected_caseId': None, 'compare_type': 0, 'wait_time': None}, {'case_id': 92, 'api_name': '【提现】交易类型为952取现', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.VaccoCoreTradeService', 'method': 'withdraw', 'request_data': '{"subquty":"100",\n        "bankid":"205AE16EA606342921",\n        "paymodel":"04",\n        "channel":"JX",       "returnUrl":"https://www5.91wutong.com/acco/yhcgTrade/drawCashResult.htm",\n        "routeCode":"1",        "forgetPwdUrl":"https://www5.91wutong.com/user/account/passwordResetJx.htm",\n        "serialno":"201808311626320392Ec",\n        "custno":"1538967652",\n        "apkind":"952",\n        "subapkind":"952001",\n        "apdt":"20180525",\n        "aptm":"155807",\n        "workdate":"20180525",\n        "tradeacco":"000621718538967655",\n "taaccountid":"475AE141EE07252223",\n        "tano":"47",\n        "sharetype":"A",\n        "accptmd":"1",\n        "branchcode":"247000",\n        "distributorcode":"247"}', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'201808311626320392Ec\';"]', 'expected_data': "{.*'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功'.*}", 'affected_caseId': 93, 'compare_type': 1, 'wait_time': None}, {'case_id': 93, 'api_name': '【提现后续】交易类型为952取现成功', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.ProductCoreTradeService', 'method': 'tradeContinue', 'request_data': '{"serialno":"201808311540580304Bh",\'extFields\':{"errCode":"0000", "errMsg":"交易成功", "tranSt":"Y"}}', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'201808311540580304Bh\' AND PAYST=\'Y\';", "SELECT * from cts.cts_tradequtychg WHERE REFERNO=\'201808311540580304Bh\'  AND CHANGEQUTY=\'1000\';"]', 'expected_data': "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功！', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}", 'affected_caseId': None, 'compare_type': 0, 'wait_time': None}, {'case_id': 94, 'api_name': '【提现】交易类型为952取现', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.VaccoCoreTradeService', 'method': 'withdraw', 'request_data': '{"subquty":"100",\n        "bankid":"205AE16EA606342921",\n        "paymodel":"04",\n        "channel":"JX",       "returnUrl":"https://www5.91wutong.com/acco/yhcgTrade/drawCashResult.htm",\n        "routeCode":"1",        "forgetPwdUrl":"https://www5.91wutong.com/user/account/passwordResetJx.htm",\n        "serialno":"201808311626320538Pp",\n        "custno":"1538967652",\n        "apkind":"952",\n        "subapkind":"952001",\n        "apdt":"20180525",\n        "aptm":"155807",\n        "workdate":"20180525",\n        "tradeacco":"000621718538967655",\n "taaccountid":"475AE141EE07252223",\n        "tano":"47",\n        "sharetype":"A",\n        "accptmd":"1",\n        "branchcode":"247000",\n        "distributorcode":"247"}', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'201808311626320538Pp\';"]', 'expected_data': "{.*'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功'.*}", 'affected_caseId': 95, 'compare_type': 1, 'wait_time': None}, {'case_id': 95, 'api_name': '【提现后续】交易类型为952取现失败', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.ProductCoreTradeService', 'method': 'tradeContinue', 'request_data': '{"serialno":"201808311540580628FF",\'extFields\':{"errCode":"0001", "errMsg":"交易失败", "tranSt":"F"}}', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'201808311540580628FF\' AND PAYST=\'F\';"]', 'expected_data': "{.*'tradeStatus': 'F'.*}", 'affected_caseId': None, 'compare_type': 1, 'wait_time': None}, {'case_id': 96, 'api_name': '【提现】提现金额含空格', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.VaccoCoreTradeService', 'method': 'withdraw', 'request_data': '{"subquty":"10 0",\n        "bankid":"205B0CF78550959969",\n        "paymodel":"04",\n        "channel":"JX",       "returnUrl":"https://www5.91wutong.com/acco/yhcgTrade/drawCashResult.htm",\n        "routeCode":"1",        "forgetPwdUrl":"https://www5.91wutong.com/user/account/passwordResetJx.htm",\n        "serialno":"201808311626320283cV",\n        "custno":"1604578759",\n        "apkind":"952",\n        "subapkind":"952001",\n        "apdt":"20180525",\n        "aptm":"155807",\n        "workdate":"20180525",\n         "tradeacco":"001035098604578762",\n        "taaccountid":"475B0CB66D40432285",\n        "tano":"47",\n        "sharetype":"A",\n        "accptmd":"1",\n        "branchcode":"247000",\n        "distributorcode":"247"}', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'201808311626320283cV\';"]', 'expected_data': 'Failed to invoke method withdraw, cause: java.lang.NumberFormatException', 'affected_caseId': None, 'compare_type': 0, 'wait_time': None}, {'case_id': 97, 'api_name': '【提现】提现金额含特殊字符', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.VaccoCoreTradeService', 'method': 'withdraw', 'request_data': '{ "subquty":"1%00",\n        "bankid":"205B0CF78550959969",\n        "paymodel":"04",\n        "channel":"JX",\n        "returnUrl":"https://www5.91wutong.com/acco/yhcgTrade/drawCashResult.htm",\n        "routeCode":"1",\n        "forgetPwdUrl":"https://www5.91wutong.com/user/account/passwordResetJx.htm",\n        "serialno":"20180831162632095Dx",\n        "custno":"1604578759",\n        "apkind":"952",\n        "subapkind":"952001",\n        "apdt":"20180525",\n        "aptm":"155807",\n        "workdate":"20180525",\n        "tradeacco":"001035098604578762",\n        "taaccountid":"475B0CB66D40432285",\n        "tano":"47",\n        "sharetype":"A",\n        "accptmd":"1",\n        "branchcode":"247000",\n        "distributorcode":"247"}', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'20180831162632095Dx\';"]', 'expected_data': 'Failed to invoke method withdraw, cause: java.lang.NumberFormatException', 'affected_caseId': None, 'compare_type': 0, 'wait_time': None}, {'case_id': 98, 'api_name': '【提现】提现金额>账户余额', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.VaccoCoreTradeService', 'method': 'withdraw', 'request_data': '{ "subquty":"110000",\n        "bankid":"205AF2D52899667599",\n        "paymodel":"04",\n        "channel":"JX",\n        "returnUrl":"https://www5.91wutong.com/acco/yhcgTrade/drawCashResult.htm",\n        "routeCode":"1",\n        "forgetPwdUrl":"https://www5.91wutong.com/user/account/passwordResetJx.htm",\n        "serialno":"201808311626320359vi",\n        "custno":"1538965327",\n        "apkind":"952",\n        "subapkind":"952001",\n        "apdt":"20180525",\n        "aptm":"215807",\n        "workdate":"20180525",\n       "tradeacco":"000621718538965330",\n        "taaccountid":"475AD0470C45319298",\n        "tano":"47",\n        "sharetype":"A",\n        "accptmd":"1",\n        "branchcode":"247000",\n        "distributorcode":"247"}', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'201808311626320359vi\';"]', 'expected_data': "{'extFields': {}, 'errCode': 'BC21', 'tradeStatus': 'I', 'tradeMsg': '产品余额不足或者账户余额不足！', 'errMsg': '产品余额不足或者账户余额不足！', 'tradeCode': 'BC21', 'exObjFields': {}, 'key': None}", 'affected_caseId': None, 'compare_type': 0, 'wait_time': None}, {'case_id': 99, 'api_name': '【提现】客户号不存在', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.VaccoCoreTradeService', 'method': 'withdraw', 'request_data': '{ "subquty":"10.123",\n        "bankid":"205AF2D52899667599",\n        "paymodel":"04",\n        "channel":"JX",\n        "returnUrl":"https://www5.91wutong.com/acco/yhcgTrade/drawCashResult.htm",\n        "routeCode":"1",\n        "forgetPwdUrl":"https://www5.91wutong.com/user/account/passwordResetJx.htm",\n        "serialno":"201808311626320769gK",\n        "custno":"1538965327123",\n        "apkind":"952",\n        "subapkind":"952001",\n        "apdt":"20180525",\n        "aptm":"215807",\n        "workdate":"20180525",\n        "tradeacco":"000621718538965330",\n        "taaccountid":"475AD0470C45319298",\n        "tano":"47",\n        "sharetype":"A",\n        "accptmd":"1",\n        "branchcode":"247000",\n        "distributorcode":"247"}', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'201808311626320769gK\';"]', 'expected_data': "{'extFields': {}, 'errCode': 'Q004', 'tradeStatus': 'F', 'tradeMsg': '查询客户信息结果为空或失败', 'errMsg': '查询客户信息结果为空或失败', 'tradeCode': 'Q004', 'exObjFields': {}, 'key': None}", 'affected_caseId': None, 'compare_type': 0, 'wait_time': None}, {'case_id': 100, 'api_name': '【提现】客户号与其他参数不匹配', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.VaccoCoreTradeService', 'method': 'withdraw', 'request_data': '{"subquty":"10",\n        "bankid":"205AF2D52899667599",\n        "paymodel":"04",\n        "channel":"JX",\n        "returnUrl":"https://www5.91wutong.com/acco/yhcgTrade/drawCashResult.htm",\n        "routeCode":"1",\n        "forgetPwdUrl":"https://www5.91wutong.com/user/account/passwordResetJx.htm",\n        "serialno":"201808311626320682Tj",\n        "custno":"1538967652",\n        "apkind":"924",\n        "subapkind":"924001",\n        "apdt":"20180525",\n        "aptm":"215807",\n        "workdate":"20180525",\n        "tradeacco":"000621718538965330",\n        "taaccountid":"475AD0470C45319298",\n        "tano":"47",\n        "sharetype":"A",\n        "accptmd":"1",\n        "branchcode":"247000",\n        "distributorcode":"247"}', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'201808311626320682Tj\';"]', 'expected_data': "{'extFields': {}, 'errCode': 'Q019', 'tradeStatus': 'F', 'tradeMsg': '查询银行卡信息结果为空或失败', 'errMsg': '查询银行卡信息结果为空或失败', 'tradeCode': 'Q019', 'exObjFields': {}, 'key': None}", 'affected_caseId': None, 'compare_type': 0, 'wait_time': None}, {'case_id': 101, 'api_name': '【提现】交易类型为924取现成功', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.VaccoCoreTradeService', 'method': 'withdraw', 'request_data': '{ "subquty":"10",\n        "bankid":"205AE16EA606342921",\n        "paymodel":"04",\n        "channel":"JX",\n        "returnUrl":"https://www5.91wutong.com/acco/yhcgTrade/drawCashResult.htm",\n        "routeCode":"1",\n        "forgetPwdUrl":"https://www5.91wutong.com/user/account/passwordResetJx.htm",\n        "serialno":"201808311626320194ra",\n        "custno":"1538967652",\n        "apkind":"924",\n        "subapkind":"924001",\n        "apdt":"20180525",\n        "aptm":"215807",\n        "workdate":"20180525",\n       "tradeacco":"000621718538967655",\n "taaccountid":"475AE141EE07252223",\n        "tano":"47",\n        "sharetype":"A",\n        "accptmd":"1",\n        "branchcode":"247000",\n        "distributorcode":"247"}', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'201808311626320194ra\';"]', 'expected_data': "{.*'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功'.*}", 'affected_caseId': 102, 'compare_type': 1, 'wait_time': None}, {'case_id': 102, 'api_name': '【提现后续】交易类型为924取现成功', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.ProductCoreTradeService', 'method': 'tradeContinue', 'request_data': '{"serialno":"20180831154058033QG",\'extFields\':{"errCode":"0000", "errMsg":"交易成功", "tranSt":"Y"}}', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'20180831154058033QG\' AND PAYST=\'Y\';", "SELECT * from cts.cts_tradequtychg WHERE REFERNO=\'20180831154058033QG\' AND CHANGEQUTY=\'10\';"]', 'expected_data': "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功！', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}", 'affected_caseId': None, 'compare_type': 0, 'wait_time': None}, {'case_id': 103, 'api_name': '【提现】交易类型为924取现成功', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.VaccoCoreTradeService', 'method': 'withdraw', 'request_data': '{ "subquty":"10",\n        "bankid":"205AE16EA606342921",\n        "paymodel":"04",\n        "channel":"JX",\n        "returnUrl":"https://www5.91wutong.com/acco/yhcgTrade/drawCashResult.htm",\n        "routeCode":"1",\n        "forgetPwdUrl":"https://www5.91wutong.com/user/account/passwordResetJx.htm",\n        "serialno":"20180831162632066Uh",\n        "custno":"1538967652",\n        "apkind":"924",\n        "subapkind":"924001",\n        "apdt":"20180525",\n        "aptm":"215807",\n        "workdate":"20180525",\n       "tradeacco":"000621718538967655",\n "taaccountid":"475AE141EE07252223",\n        "tano":"47",\n        "sharetype":"A",\n        "accptmd":"1",\n        "branchcode":"247000",\n        "distributorcode":"247"}', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'20180831162632066Uh\';"]', 'expected_data': "{.*'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功'.*}", 'affected_caseId': 104, 'compare_type': 1, 'wait_time': None}, {'case_id': 104, 'api_name': '【提现后续】交易类型为924取现失败', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.ProductCoreTradeService', 'method': 'tradeContinue', 'request_data': '{"serialno":"201808311540580624uo",\'extFields\':{"errCode":"0001", "errMsg":"交易失败", "tranSt":"F"}}', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'201808311540580624uo\' AND PAYST=\'F\';"]', 'expected_data': "{.*'tradeStatus': 'F'.*}", 'affected_caseId': None, 'compare_type': 1, 'wait_time': None}, {'case_id': 105, 'api_name': '【提现】交易类型错误', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.VaccoCoreTradeService', 'method': 'withdraw', 'request_data': '{"subquty":"10",\n        "bankid":"205AE16EA606342921",\n        "paymodel":"04",\n        "channel":"JX",\n        "returnUrl":"https://www5.91wutong.com/acco/yhcgTrade/drawCashResult.htm",\n        "routeCode":"1",\n        "forgetPwdUrl":"https://www5.91wutong.com/user/account/passwordResetJx.htm",\n        "serialno":"201808311626320270MF",\n        "custno":"1538967652",\n        "apkind":"943",\n        "subapkind":"943001",\n        "apdt":"20180525",\n        "aptm":"215807",\n        "workdate":"20180525",\n         "tradeacco":"000621718538967655",\n "taaccountid":"475AE141EE07252223",\n        "tano":"47",\n        "sharetype":"A",\n        "accptmd":"3",\n        "branchcode":"247000",\n        "distributorcode":"247"}', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'201808311626320270MF\';"]', 'expected_data': "{'extFields': {}, 'errCode': 'P003', 'tradeStatus': None, 'tradeMsg': '业务类型[Apkind] 不符合逻辑. 期望值[952or924]', 'errMsg': '业务类型[Apkind] 不符合逻辑. 期望值[952or924]', 'tradeCode': 'P003', 'exObjFields': {}, 'key': None}", 'affected_caseId': None, 'compare_type': 0, 'wait_time': None}, {'case_id': 106, 'api_name': '【提现】渠道为2手机取现成功', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.VaccoCoreTradeService', 'method': 'withdraw', 'request_data': '{ "subquty":"10",\n        "bankid":"205AE16EA606342921",\n        "paymodel":"04",\n        "channel":"JX",\n        "returnUrl":"https://www5.91wutong.com/acco/yhcgTrade/drawCashResult.htm",\n        "routeCode":"1",\n        "forgetPwdUrl":"https://www5.91wutong.com/user/account/passwordResetJx.htm",\n        "serialno":"201808311626320545RJ",\n        "custno":"1538967652",\n        "apkind":"924",\n        "subapkind":"924001",\n        "apdt":"20180525",\n        "aptm":"215807",\n        "workdate":"20180525",\n   "tradeacco":"000621718538967655",\n "taaccountid":"475AE141EE07252223",\n        "tano":"47",\n        "sharetype":"A",\n        "accptmd":"2",\n        "branchcode":"247000",\n        "distributorcode":"247"}', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'201808311626320545RJ\';"]', 'expected_data': "{.*'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功'.*}", 'affected_caseId': 107, 'compare_type': 1, 'wait_time': None}, {'case_id': 107, 'api_name': '【提现后续】渠道accptmd为2手机取现成功', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.ProductCoreTradeService', 'method': 'tradeContinue', 'request_data': '{"serialno":"201808311540580221kM",\'extFields\':{"errCode":"0000", "errMsg":"交易成功", "tranSt":"Y"}}', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'201808311540580221kM\' AND PAYST=\'Y\';", "SELECT * from cts.cts_tradequtychg WHERE REFERNO=\'201808311540580221kM\' AND CHANGEQUTY=\'10\';"]', 'expected_data': "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功！', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}", 'affected_caseId': None, 'compare_type': 0, 'wait_time': None}, {'case_id': 108, 'api_name': '【提现】渠道为2手机取现成功', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.VaccoCoreTradeService', 'method': 'withdraw', 'request_data': '{ "subquty":"10",\n        "bankid":"205AE16EA606342921",\n        "paymodel":"04",\n        "channel":"JX",\n        "returnUrl":"https://www5.91wutong.com/acco/yhcgTrade/drawCashResult.htm",\n        "routeCode":"1",\n        "forgetPwdUrl":"https://www5.91wutong.com/user/account/passwordResetJx.htm",\n        "serialno":"201808311626320985Xj",\n        "custno":"1538967652",\n        "apkind":"924",\n        "subapkind":"924001",\n        "apdt":"20180525",\n        "aptm":"215807",\n        "workdate":"20180525",\n     "tradeacco":"000621718538967655",\n "taaccountid":"475AE141EE07252223",\n        "tano":"47",\n        "sharetype":"A",\n        "accptmd":"1",\n        "branchcode":"247000",\n        "distributorcode":"247"}', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'201808311626320985Xj\';"]', 'expected_data': "{.*'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功'.*}", 'affected_caseId': 109, 'compare_type': 1, 'wait_time': None}, {'case_id': 109, 'api_name': '【提现后续】渠道accptmd为2手机取现失败', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.ProductCoreTradeService', 'method': 'tradeContinue', 'request_data': '{"serialno":"201808311540580357hb",\'extFields\':{"errCode":"0001", "errMsg":"交易失败", "tranSt":"F"}}', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'201808311540580357hb\' AND PAYST=\'F\';"]', 'expected_data': "{.*'tradeStatus': 'F'.*}", 'affected_caseId': None, 'compare_type': 1, 'wait_time': None}, {'case_id': 110, 'api_name': '【提现】渠道为3企业版取现成功', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.VaccoCoreTradeService', 'method': 'withdraw', 'request_data': '{"subquty":"10",\n        "bankid":"205AE16EA606342921",\n        "paymodel":"04",\n        "channel":"JX",\n        "returnUrl":"https://www5.91wutong.com/acco/yhcgTrade/drawCashResult.htm",\n        "routeCode":"1",\n        "forgetPwdUrl":"https://www5.91wutong.com/user/account/passwordResetJx.htm",\n        "serialno":"201808311626320474hq",\n        "custno":"1538967652",\n        "apkind":"924",\n        "subapkind":"924001",\n        "apdt":"20180525",\n        "aptm":"215807",\n        "workdate":"20180525",\n       "tradeacco":"000621718538967655",\n "taaccountid":"475AE141EE07252223",\n        "tano":"47",\n        "sharetype":"A",\n        "accptmd":"3",\n        "branchcode":"247000",\n        "distributorcode":"247"}', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'201808311626320474hq\';"]', 'expected_data': "{.*'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功'.*}", 'affected_caseId': 111, 'compare_type': 1, 'wait_time': None}, {'case_id': 111, 'api_name': '【提现后续】渠道accptmd为3企业版取现成功', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.ProductCoreTradeService', 'method': 'tradeContinue', 'request_data': '{"serialno":"201808311540580668Fz",\'extFields\':{"errCode":"0000", "errMsg":"交易成功", "tranSt":"Y"}}', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'201808311540580668Fz\' AND PAYST=\'Y\';", "SELECT * from cts.cts_tradequtychg WHERE REFERNO=\'201808311540580668Fz\' AND CHANGEQUTY=\'10\';"]', 'expected_data': "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功！', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}", 'affected_caseId': None, 'compare_type': 0, 'wait_time': None}, {'case_id': 112, 'api_name': '【提现】渠道accptmd为3企业版取现成功', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.VaccoCoreTradeService', 'method': 'withdraw', 'request_data': '{"subquty":"10",\n        "bankid":"205AE16EA606342921",\n        "paymodel":"04",\n        "channel":"JX",\n        "returnUrl":"https://www5.91wutong.com/acco/yhcgTrade/drawCashResult.htm",\n        "routeCode":"1",\n        "forgetPwdUrl":"https://www5.91wutong.com/user/account/passwordResetJx.htm",\n        "serialno":"20180831162632033nM",\n        "custno":"1538967652",\n        "apkind":"924",\n        "subapkind":"924001",\n        "apdt":"20180525",\n        "aptm":"215807",\n        "workdate":"20180525",\n      "tradeacco":"000621718538967655",\n "taaccountid":"475AE141EE07252223",\n        "tano":"47",\n        "sharetype":"A",\n        "accptmd":"3",\n        "branchcode":"247000",\n        "distributorcode":"247"}', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'20180831162632033nM\';"]', 'expected_data': "{.*'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功'.*}", 'affected_caseId': 113, 'compare_type': 1, 'wait_time': None}, {'case_id': 113, 'api_name': '【提现后续】渠道accptmd为3企业版取现失败', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.ProductCoreTradeService', 'method': 'tradeContinue', 'request_data': '{"serialno":"201808311540580220eR",\'extFields\':{"errCode":"0001", "errMsg":"交易失败", "tranSt":"F"}}', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'201808311540580220eR\' AND PAYST=\'F\';"]', 'expected_data': "{.*'tradeStatus': 'F'.*}", 'affected_caseId': None, 'compare_type': 1, 'wait_time': None}, {'case_id': 114, 'api_name': '【提现】即信路由代码为2取现成功', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.VaccoCoreTradeService', 'method': 'withdraw', 'request_data': '{"subquty":"10",\n        "bankid":"205AE16EA606342921",\n        "paymodel":"04",\n        "channel":"JX",\n        "returnUrl":"https://www5.91wutong.com/acco/yhcgTrade/drawCashResult.htm",\n        "routeCode":"2",\n        "cardBankCnaps":"308584001024",\n        "forgetPwdUrl":"https://www5.91wutong.com/user/account/passwordResetJx.htm",\n        "serialno":"201808311626320614qN",\n        "custno":"1538967652",\n        "apkind":"924",\n        "subapkind":"924001",\n        "apdt":"20180525",\n        "aptm":"215807",\n        "workdate":"20180525",\n      "tradeacco":"000621718538967655",\n "taaccountid":"475AE141EE07252223",\n        "tano":"47",\n        "sharetype":"A",\n        "accptmd":"3",\n        "branchcode":"247000",\n        "distributorcode":"247"}', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'201808311626320614qN\';"]', 'expected_data': "{.*'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功'.*}", 'affected_caseId': 115, 'compare_type': 1, 'wait_time': None}, {'case_id': 115, 'api_name': '【提现后续】即信路由代码routecode为2取现成功', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.ProductCoreTradeService', 'method': 'tradeContinue', 'request_data': '{"serialno":"201808311540580239jZ",\'extFields\':{"errCode":"0000", "errMsg":"交易成功", "tranSt":"Y"}}', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'201808311540580239jZ\' AND PAYST=\'Y\';", "SELECT * from cts.cts_tradequtychg WHERE REFERNO=\'201808311540580239jZ\' AND CHANGEQUTY=\'10\';"]', 'expected_data': "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功！', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}", 'affected_caseId': None, 'compare_type': 0, 'wait_time': None}, {'case_id': 116, 'api_name': '【提现】即信路由代码routecode为2取现成功', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.VaccoCoreTradeService', 'method': 'withdraw', 'request_data': '{"subquty":"10",\n        "bankid":"205AE16EA606342921",\n        "paymodel":"04",\n        "channel":"JX",\n        "returnUrl":"https://www5.91wutong.com/acco/yhcgTrade/drawCashResult.htm",\n        "routeCode":"2",\n        "cardBankCnaps":"308584001024",\n        "forgetPwdUrl":"https://www5.91wutong.com/user/account/passwordResetJx.htm",\n        "serialno":"201808311626320980ly",\n        "custno":"1538967652",\n        "apkind":"924",\n        "subapkind":"924001",\n        "apdt":"20180525",\n        "aptm":"215807",\n        "workdate":"20180525",\n       "tradeacco":"000621718538967655",\n "taaccountid":"475AE141EE07252223",\n        "tano":"47",\n        "sharetype":"A",\n        "accptmd":"3",\n        "branchcode":"247000",\n        "distributorcode":"247"}', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'201808311626320980ly\';"]', 'expected_data': "{.*'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功'.*}", 'affected_caseId': 117, 'compare_type': 1, 'wait_time': None}, {'case_id': 117, 'api_name': '【提现后续】即信路由代码routecode为2取现失败', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.ProductCoreTradeService', 'method': 'tradeContinue', 'request_data': '{"serialno":"20180831154058042fD",\'extFields\':{"errCode":"0001", "errMsg":"交易失败", "tranSt":"F"}}', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'20180831154058042fD\' AND PAYST=\'F\';"]', 'expected_data': "{.*'tradeStatus': 'F'.*}", 'affected_caseId': None, 'compare_type': 1, 'wait_time': None}, {'case_id': 118, 'api_name': '【提现】支付模式错误', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.VaccoCoreTradeService', 'method': 'withdraw', 'request_data': '{"subquty":"10",\n        "bankid":"205AE16EA606342921",\n        "paymodel":"05",\n        "channel":"JX",\n        "returnUrl":"https://www5.91wutong.com/acco/yhcgTrade/drawCashResult.htm",\n        "routeCode":"2",\n        "cardBankCnaps":"308584001024",\n        "forgetPwdUrl":"https://www5.91wutong.com/user/account/passwordResetJx.htm",\n        "serialno":"201808311626320445lA",\n        "custno":"1538967652",\n        "apkind":"924",\n        "subapkind":"924001",\n        "apdt":"20180525",\n        "aptm":"215807",\n        "workdate":"20180525",\n        "tradeacco":"000621718538967655",\n "taaccountid":"475AE141EE07252223",\n        "tano":"47",\n        "sharetype":"A",\n        "accptmd":"3",\n        "branchcode":"247000",\n        "distributorcode":"247"}', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'201808311626320445lA\';"]', 'expected_data': "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'F', 'tradeMsg': '查询路由信息为空', 'errMsg': '申请成功', 'tradeCode': '9995', 'exObjFields': {}, 'key': None}", 'affected_caseId': None, 'compare_type': 0, 'wait_time': None}, {'case_id': 119, 'api_name': '【提现】return url返回梧桐页面链接为空', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.VaccoCoreTradeService', 'method': 'withdraw', 'request_data': '{"subquty":"10",\n        "bankid":"205AE16EA606342921",\n        "paymodel":"05",\n        "channel":"JX",\n        "returnUrl":"",\n        "routeCode":"2",\n        "cardBankCnaps":"308584001024",\n        "forgetPwdUrl":"https://www5.91wutong.com/user/account/passwordResetJx.htm",\n        "serialno":"201808311626320992fU",\n        "custno":"1538967652",\n        "apkind":"924",\n        "subapkind":"924001",\n        "apdt":"20180525",\n        "aptm":"215807",\n        "workdate":"20180525",\n       "tradeacco":"000621718538967655",\n "taaccountid":"475AE141EE07252223",\n        "tano":"47",\n        "sharetype":"A",\n        "accptmd":"3",\n        "branchcode":"247000",\n        "distributorcode":"247"}', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'201808311626320992fU\';"]', 'expected_data': "{'extFields': {}, 'errCode': 'P001', 'tradeStatus': None, 'tradeMsg': '返回梧桐地址[ReturnUrl] 不能为null.', 'errMsg': '返回梧桐地址[ReturnUrl] 不能为null.', 'tradeCode': 'P001', 'exObjFields': {}, 'key': None}", 'affected_caseId': None, 'compare_type': 0, 'wait_time': None}, {'case_id': 120, 'api_name': '【提现】忘记密码链接为空', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.VaccoCoreTradeService', 'method': 'withdraw', 'request_data': '{"subquty":"10",\n        "bankid":"205AE16EA606342921",\n        "paymodel":"04",\n        "channel":"JX",\n        "returnUrl":"https://www5.91wutong.com/acco/yhcgTrade/drawCashResult.htm",\n        "routeCode":"2",\n        "cardBankCnaps":"308584001024",\n        "forgetPwdUrl":"",\n        "serialno":"20180831162632093KH",\n        "custno":"1538967652",\n        "apkind":"924",\n        "subapkind":"924001",\n        "apdt":"20180525",\n        "aptm":"215807",\n        "workdate":"20180525",\n       "tradeacco":"000621718538967655",\n "taaccountid":"475AE141EE07252223",\n        "tano":"47",\n        "sharetype":"A",\n        "accptmd":"3",\n        "branchcode":"247000",\n        "distributorcode":"247"}', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'20180831162632093KH\';"]', 'expected_data': "{'extFields': {}, 'errCode': 'P001', 'tradeStatus': None, 'tradeMsg': '忘记密码链接[ForgetPwdUrl] 不能为null.', 'errMsg': '忘记密码链接[ForgetPwdUrl] 不能为null.', 'tradeCode': 'P001', 'exObjFields': {}, 'key': None}", 'affected_caseId': None, 'compare_type': 0, 'wait_time': None}, {'case_id': 121, 'api_name': '【余额购买】购买随心投产品申请成功', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.ProductCoreTradeService', 'method': 'buyByVacco', 'request_data': '{\n"periodic":"false",\n"subamt":"100.00",\n"honourdate":"20180720",\n"baseyield":"0.0828",\n"yield":"0.0828",\n"addyield":"0",\n"interestbegindate":"20180710",\n"interestenddate":"20180719",\n"serialno":"201808311626320874Ku",\n"custno":"1538943691",\n"apkind":"012","subapkind":"012001",\n"apdt":"20180710",\n"aptm":"102056",\n"workdate":"20180710",\n"tradeacco":"000621718538943694",\n"taaccountid":"475A7D638769350988",\n"tano":"47","productid":"732822",\n"sharetype":"A","accptmd":"1",\n"branchcode":"247000","distributorcode":"247"}', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'201808311626320874Ku\';"]', 'expected_data': "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}", 'affected_caseId': 122, 'compare_type': 0, 'wait_time': None}, {'case_id': 122, 'api_name': '【调用轮询接口处理交易请求】', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.ProductCoreTradeService', 'method': 'tradeContinueTask', 'request_data': '""', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'20180831154058095Hv\' AND APPLYST=\'Y\'AND TRANSST=\'Y\' AND PAYST=\'Y\';","SELECT * from cts.cts_tradequtychg WHERE REFERNO=\'20180831154058095Hv\' AND PRODUCTID=\'732822\'AND CHANGEQUTY=\'-100\';"]', 'expected_data': None, 'affected_caseId': None, 'compare_type': None, 'wait_time': None}, {'case_id': 123, 'api_name': '【余额购买】购买金额大于账户可用余额', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.ProductCoreTradeService', 'method': 'buyByVacco', 'request_data': '{\n"periodic":"false",\n"subamt":"10000.00",\n"honourdate":"20180720",\n"baseyield":"0.0828",\n"yield":"0.0828",\n"addyield":"0",\n"interestbegindate":"20180710",\n"interestenddate":"20180719",\n"serialno":"201808311626320612nv",\n"custno":"1538943529",\n"apkind":"012","subapkind":"012001",\n"apdt":"20180710",\n"aptm":"102056",\n"workdate":"20180710",\n"tradeacco":"000621718538943532",\n"taaccountid":"475A7D11AC36446661",\n"tano":"47","productid":"732822",\n"sharetype":"A","accptmd":"1",\n"branchcode":"247000","distributorcode":"247"}', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'201808311626320612nv\' AND APPLYST=\'F\';"]', 'expected_data': "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'F', 'tradeMsg': '产品余额不足或者账户余额不足！', 'errMsg': '申请成功', 'tradeCode': 'BC21', 'exObjFields': {}, 'key': None}", 'affected_caseId': None, 'compare_type': 0, 'wait_time': None}, {'case_id': 124, 'api_name': '【余额购买】购买金额大于产品剩余可购金额', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.ProductCoreTradeService', 'method': 'buyByVacco', 'request_data': '{\n"periodic":"false",\n"subamt":"100000",\n"honourdate":"20180720",\n"baseyield":"0.0828",\n"yield":"0.0828",\n"addyield":"0",\n"interestbegindate":"20180710",\n"interestenddate":"20180719",\n"serialno":"201808311626320773JH",\n"custno":"1538943559",\n"apkind":"012","subapkind":"012001",\n"apdt":"20180710",\n"aptm":"102056",\n"workdate":"20180710",\n"tradeacco":"000621718538943562",\n"taaccountid":"475A7D148427411438",\n"tano":"47","productid":"732821",\n"sharetype":"A","accptmd":"1",\n"branchcode":"247000","distributorcode":"247"}', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'201808311626320773JH\' AND APPLYST=\'F\';"]', 'expected_data': "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'F', 'tradeMsg': '产品余额不足或者账户余额不足！', 'errMsg': '申请成功', 'tradeCode': 'BC21', 'exObjFields': {}, 'key': None}", 'affected_caseId': None, 'compare_type': 0, 'wait_time': None}, {'case_id': 125, 'api_name': '【余额购买】输入金额含空格', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.ProductCoreTradeService', 'method': 'buyByVacco', 'request_data': '{\n"periodic":"false",\n"subamt":"10 0",\n"honourdate":"20180720",\n"baseyield":"0.0828",\n"yield":"0.0828",\n"addyield":"0",\n"interestbegindate":"20180710",\n"interestenddate":"20180719",\n"serialno":"201808311626320253gJ",\n"custno":"1538943691",\n"apkind":"012","subapkind":"012001",\n"apdt":"20180710",\n"aptm":"102056",\n"workdate":"20180710",\n"tradeacco":"000621718538943694",\n"taaccountid":"475A7D638769350988",\n"tano":"47","productid":"732822",\n"sharetype":"A","accptmd":"1",\n"branchcode":"247000","distributorcode":"247"}', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'201808311626320253gJ\' AND APPLYST=\'F\';"]', 'expected_data': 'Failed to invoke method buyByVacco, cause: java.lang.NumberFormatException', 'affected_caseId': None, 'compare_type': 0, 'wait_time': None}, {'case_id': 126, 'api_name': '【余额购买】输入金额含特殊字符', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.ProductCoreTradeService', 'method': 'buyByVacco', 'request_data': '{\n"periodic":"false",\n"subamt":"10%0.00",\n"honourdate":"20180720",\n"baseyield":"0.0828",\n"yield":"0.0828",\n"addyield":"0",\n"interestbegindate":"20180710",\n"interestenddate":"20180719",\n"serialno":"201808311626320413iK",\n"custno":"1538943691",\n"apkind":"012","subapkind":"012001",\n"apdt":"20180710",\n"aptm":"102056",\n"workdate":"20180710",\n"tradeacco":"000621718538943694",\n"taaccountid":"475A7D638769350988",\n"tano":"47","productid":"732822",\n"sharetype":"A","accptmd":"1",\n"branchcode":"247000","distributorcode":"247"}', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'201808311626320413iK\' AND APPLYST=\'F\';"]', 'expected_data': 'Failed to invoke method buyByVacco, cause: java.lang.NumberFormatException', 'affected_caseId': None, 'compare_type': 0, 'wait_time': None}, {'case_id': 127, 'api_name': '【余额购买】购买系统加息随心投产品', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.ProductCoreTradeService', 'method': 'buyByVacco', 'request_data': '{"periodic":"false",\n"subamt":"10",\n"honourdate":"20180720",\n"baseyield":"0.0828",\n"yield":"0.0838",\n"addyield":"0",\n"interestbegindate":"20180710",\n"interestenddate":"20180719",\n"serialno":"201808311626320791tF",\n"custno":"1538943691",\n"apkind":"012","subapkind":"012001",\n"apdt":"20180710",\n"aptm":"134256",\n"workdate":"20180710",\n"tradeacco":"000621718538943694",\n"taaccountid":"475A7D638769350988",\n"tano":"47","productid":"732822",\n"sharetype":"A","accptmd":"1",\n"branchcode":"247000","distributorcode":"247"}', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'201808311626320791tF\';"]', 'expected_data': "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}", 'affected_caseId': 128, 'compare_type': 0, 'wait_time': None}, {'case_id': 128, 'api_name': '【调用轮询接口处理交易请求】', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.ProductCoreTradeService', 'method': 'tradeContinueTask', 'request_data': '""', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'201808311540580810SM\' AND APPLYST=\'Y\'AND TRANSST=\'Y\' AND PAYST=\'Y\';","SELECT * from cts.cts_tradequtychg WHERE REFERNO=\'201808311540580810SM\' AND PRODUCTID=\'732822\'AND CHANGEQUTY=\'-10\';"]', 'expected_data': None, 'affected_caseId': None, 'compare_type': None, 'wait_time': None}, {'case_id': 129, 'api_name': '【余额购买】使用加息券购买随心投产品', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.ProductCoreTradeService', 'method': 'buyByVacco', 'request_data': '{"periodic":"false",\n"subamt":"100",\n"honourdate":"20180720",\n"baseyield":"0.0850",\n"yield":"0.0070",\n"addyield":"0.4",\n"exyield":"0",\n"exActivityFlag":"1",\n"couponid":"20180710153894369120709111860",\n"interestbegindate":"20180710",\n"interestenddate":"20180719",\n"serialno":"201808311626320466DO",\n"custno":"1538943691",\n"apkind":"012","subapkind":"012001",\n"apdt":"20180710",\n"aptm":"134256",\n"workdate":"20180710",\n"tradeacco":"000621718538943694",\n"taaccountid":"475A7D638769350988",\n"tano":"47","productid":"732908",\n"sharetype":"A","accptmd":"1",\n"branchcode":"247000","distributorcode":"247"}', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'201808311626320466DO\';"]', 'expected_data': "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}", 'affected_caseId': 130, 'compare_type': 0, 'wait_time': None}, {'case_id': 130, 'api_name': '【调用轮询接口处理交易请求】', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.ProductCoreTradeService', 'method': 'tradeContinueTask', 'request_data': '""', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'201808311540580557Nu\' AND APPLYST=\'Y\'AND TRANSST=\'Y\' AND PAYST=\'Y\';","SELECT * from cts.cts_tradequtychg WHERE REFERNO=\'201808311540580557Nu\' AND PRODUCTID=\'732908\'AND CHANGEQUTY=\'-100\';"]', 'expected_data': None, 'affected_caseId': None, 'compare_type': None, 'wait_time': None}, {'case_id': 131, 'api_name': '【余额购买】使用返现券购买随心投产品', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.ProductCoreTradeService', 'method': 'buyByVacco', 'request_data': '{"periodic":"false",\n        "subamt":"1000.00",\n        "couponid":"5B4C07350077bcEA",\n        "honourdate":"20190615",\n        "baseyield":"0.0828",\n        "yield":"0.0828",\n        "addyield":"0.0000",\n        "interestbegindate":"20180717",\n        "interestenddate":"20190614",\n        "exyield":"0",\n        "exActivityFlag":"1",\n        "serialno":"201808311626320191pb",\n        "custno":"1538943691",\n        "apkind":"012",\n        "subapkind":"012001",\n        "apdt":"20180717",\n        "aptm":"114840",\n        "workdate":"20180717",\n        "tradeacco":"000621718538943694",\n        "taaccountid":"475A7D638769350988",\n        "tano":"47",\n        "productid":"732818",\n        "sharetype":"A",\n        "accptmd":"1",\n        "branchcode":"247000",\n        "distributorcode":"247"}', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'201808311626320191pb\';"]', 'expected_data': "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}", 'affected_caseId': 132, 'compare_type': 0, 'wait_time': None}, {'case_id': 132, 'api_name': '【调用轮询接口处理交易请求】', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.ProductCoreTradeService', 'method': 'tradeContinueTask', 'request_data': '""', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'201808311540580537Cf\' AND APPLYST=\'Y\'AND TRANSST=\'Y\' AND PAYST=\'Y\';","SELECT * from cts.cts_traderequest WHERE SUBAPKIND=\'922919\' AND REFERNO=\'201808311540580537Cf\';"]', 'expected_data': None, 'affected_caseId': None, 'compare_type': None, 'wait_time': None}, {'case_id': 133, 'api_name': '【余额购买】购买随意转产品', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.ProductCoreTradeService', 'method': 'buyByVacco', 'request_data': '{"periodic":"false",\n"subamt":"100",\n"honourdate":"20180720",\n"baseyield":"0.0850",\n"yield":"0.0070",\n"addyield":"0.4",\n"exyield":"0",\n"exActivityFlag":"1",\n"couponid":"20180710153894369120709111860",\n"interestbegindate":"20180710",\n"interestenddate":"20180719",\n"serialno":"201808311626320389Tb",\n"custno":"1538943691",\n"apkind":"012","subapkind":"012001",\n"apdt":"20180710",\n"aptm":"134256",\n"workdate":"20180710",\n"tradeacco":"000621718538943694",\n"taaccountid":"475A7D638769350988",\n"tano":"47","productid":"732908",\n"sharetype":"A","accptmd":"1",\n"branchcode":"247000","distributorcode":"247"}', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'201808311626320389Tb\';"]', 'expected_data': "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}", 'affected_caseId': 134, 'compare_type': 0, 'wait_time': None}, {'case_id': 134, 'api_name': '【调用轮询接口处理交易请求】', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.ProductCoreTradeService', 'method': 'tradeContinueTask', 'request_data': '""', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'201808311540580306LD\' AND APPLYST=\'Y\'AND TRANSST=\'Y\' AND PAYST=\'Y\';","SELECT * from cts.cts_tradequtychg WHERE REFERNO=\'201808311540580306LD\' AND PRODUCTID=\'732908\'AND CHANGEQUTY=\'-100\';"]', 'expected_data': None, 'affected_caseId': None, 'compare_type': None, 'wait_time': None}, {'case_id': 135, 'api_name': '【余额购买】购买月月盈产品', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.ProductCoreTradeService', 'method': 'buyByVacco', 'request_data': '{\n"subamt":"10",\n"honourdate":"20180604",\n"baseyield":"0.0828",\n"yield":"0.0238",\n"addyield":"0",\n"interestbegindate":"20180525",\n"interestenddate":"20180603",\n"periodic":"true",\n"cycleDay":"20",\n"transferDay":"2",\n"serialno":"201808311626320227Qg",\n"custno":"1604568937",\n"apkind":"012","subapkind":"012001",\n"apdt":"20180525",\n"aptm":"134256",\n"workdate":"20180525",\n"tradeacco":"001035098604568940",\n"taaccountid":"475AFA3D7B64069928",\n"tano":"47","productid":"8802",\n"sharetype":"A","accptmd":"1",\n"branchcode":"247000","distributorcode":"247"}', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'201808311626320227Qg\';"]', 'expected_data': "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}", 'affected_caseId': 136, 'compare_type': 0, 'wait_time': None}, {'case_id': 136, 'api_name': '【调用轮询接口处理交易请求】', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.ProductCoreTradeService', 'method': 'tradeContinueTask', 'request_data': '""', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'201808311540580882xy\' AND APPLYST=\'Y\'AND TRANSST=\'Y\' AND PAYST=\'Y\';","SELECT * from cts.cts_tradequtychg WHERE REFERNO=\'201808311540580882xy\' AND PRODUCTID=\'8802\'AND CHANGEQUTY=\'-10\';"]', 'expected_data': None, 'affected_caseId': None, 'compare_type': None, 'wait_time': None}, {'case_id': 137, 'api_name': '【余额购买】购买季季升产品', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.ProductCoreTradeService', 'method': 'buyByVacco', 'request_data': '{\n"subamt":"10",\n"honourdate":"20180604",\n"baseyield":"0.0828",\n"yield":"0.0238",\n"addyield":"0",\n"interestbegindate":"20180525",\n"interestenddate":"20180603",\n"periodic":"true",\n"cycleDay":"20",\n"transferDay":"2",\n"serialno":"201808311626320986QH",\n"custno":"1604568937",\n"apkind":"012","subapkind":"012001",\n"apdt":"20180525",\n"aptm":"134256",\n"workdate":"20180525",\n"tradeacco":"001035098604568940",\n"taaccountid":"475AFA3D7B64069928",\n"tano":"47","productid":"8901",\n"sharetype":"A","accptmd":"1",\n"branchcode":"247000","distributorcode":"247"}', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'201808311626320986QH\';"]', 'expected_data': "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}", 'affected_caseId': 138, 'compare_type': 0, 'wait_time': None}, {'case_id': 138, 'api_name': '【调用轮询接口处理交易请求】', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.ProductCoreTradeService', 'method': 'tradeContinueTask', 'request_data': '""', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'201808311540580550PC\' AND APPLYST=\'Y\'AND TRANSST=\'Y\' AND PAYST=\'Y\';","SELECT * from cts.cts_tradequtychg WHERE REFERNO=\'201808311540580550PC\' AND PRODUCTID=\'8901\'AND CHANGEQUTY=\'-10\';"]', 'expected_data': None, 'affected_caseId': None, 'compare_type': None, 'wait_time': None}, {'case_id': 139, 'api_name': '【余额购买】购买双季智选产品', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.ProductCoreTradeService', 'method': 'buyByVacco', 'request_data': '{\n"subamt":"10",\n"honourdate":"20180604",\n"baseyield":"0.0828",\n"yield":"0.0238",\n"addyield":"0",\n"interestbegindate":"20180525",\n"interestenddate":"20180603",\n"periodic":"true",\n"cycleDay":"20",\n"transferDay":"2",\n"serialno":"201808311626320524RQ",\n"custno":"1604568937",\n"apkind":"012","subapkind":"012001",\n"apdt":"20180525",\n"aptm":"134256",\n"workdate":"20180525",\n"tradeacco":"001035098604568940",\n"taaccountid":"475AFA3D7B64069928",\n"tano":"47","productid":"8903",\n"sharetype":"A","accptmd":"1",\n"branchcode":"247000","distributorcode":"247"}', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'201808311626320524RQ\';"]', 'expected_data': "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}", 'affected_caseId': 140, 'compare_type': 0, 'wait_time': None}, {'case_id': 140, 'api_name': '【调用轮询接口处理交易请求】', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.ProductCoreTradeService', 'method': 'tradeContinueTask', 'request_data': '""', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'201808311540580691Mg\' AND APPLYST=\'Y\'AND TRANSST=\'Y\' AND PAYST=\'Y\';","SELECT * from cts.cts_tradequtychg WHERE REFERNO=\'201808311540580691Mg\' AND PRODUCTID=\'8903\'AND CHANGEQUTY=\'-10\';"]', 'expected_data': None, 'affected_caseId': None, 'compare_type': None, 'wait_time': None}, {'case_id': 141, 'api_name': '【余额购买】购买四季甄选产品', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.ProductCoreTradeService', 'method': 'buyByVacco', 'request_data': '{\n"subamt":"10",\n"honourdate":"20180604",\n"baseyield":"0.0828",\n"yield":"0.0238",\n"addyield":"0",\n"interestbegindate":"20180525",\n"interestenddate":"20180603",\n"periodic":"true",\n"cycleDay":"20",\n"transferDay":"2",\n"serialno":"201808311626320445MJ",\n"custno":"1604568937",\n"apkind":"012","subapkind":"012001",\n"apdt":"20180525",\n"aptm":"134256",\n"workdate":"20180525",\n"tradeacco":"001035098604568940",\n"taaccountid":"475AFA3D7B64069928",\n"tano":"47","productid":"8904",\n"sharetype":"A","accptmd":"1",\n"branchcode":"247000","distributorcode":"247"}', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'201808311626320445MJ\';"]', 'expected_data': "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}", 'affected_caseId': 142, 'compare_type': 0, 'wait_time': None}, {'case_id': 142, 'api_name': '【调用轮询接口处理交易请求】', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.ProductCoreTradeService', 'method': 'tradeContinueTask', 'request_data': '""', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'201808311540580513JD\' AND APPLYST=\'Y\'AND TRANSST=\'Y\' AND PAYST=\'Y\';","SELECT * from cts.cts_tradequtychg WHERE REFERNO=\'201808311540580513JD\' AND PRODUCTID=\'8904\'AND CHANGEQUTY=\'-10\';"]', 'expected_data': None, 'affected_caseId': None, 'compare_type': None, 'wait_time': None}, {'case_id': 143, 'api_name': '【余额购买】cusno不存在', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.ProductCoreTradeService', 'method': 'buyByVacco', 'request_data': '{\n"subamt":"10",\n"honourdate":"20180604",\n"baseyield":"0.0828",\n"yield":"0.0238",\n"addyield":"0",\n"interestbegindate":"20180525",\n"interestenddate":"20180603",\n"periodic":"true",\n"cycleDay":"20",\n"transferDay":"2",\n"serialno":"201808311626320702Ke",\n"custno":"1538967652ddddd",\n"apkind":"012","subapkind":"012001",\n"apdt":"20180525",\n"aptm":"134256",\n"workdate":"20180525",\n"tradeacco":"001035098604568940",\n"taaccountid":"475AFA3D7B64069928",\n"tano":"47","productid":"732681",\n"sharetype":"A","accptmd":"1",\n"branchcode":"247000","distributorcode":"247"}', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'201808311626320702Ke\';"]', 'expected_data': "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'F', 'tradeMsg': '查询客户信息结果为空或失败', 'errMsg': '申请成功', 'tradeCode': 'Q004', 'exObjFields': {}, 'key': None}", 'affected_caseId': None, 'compare_type': 0, 'wait_time': None}, {'case_id': 144, 'api_name': '【余额购买】productid不存在', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.ProductCoreTradeService', 'method': 'buyByVacco', 'request_data': '{\n"subamt":"10",\n"honourdate":"20180604",\n"baseyield":"0.0828",\n"yield":"0.0238",\n"addyield":"0",\n"interestbegindate":"20180525",\n"interestenddate":"20180603",\n"serialno":"201808311626320325Co",\n"custno":"1604568937",\n"apkind":"012","subapkind":"012001",\n"apdt":"20180525",\n"aptm":"134256",\n"workdate":"20180525",\n"tradeacco":"001035098604568940",\n"taaccountid":"475AFA3D7B64069928",\n"tano":"47","productid":"732681123",\n"sharetype":"A","accptmd":"1",\n"branchcode":"247000","distributorcode":"247"}', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'201808311626320325Co\';"]', 'expected_data': "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'F', 'tradeMsg': '查询产品客户号结果为空或失败', 'errMsg': '申请成功', 'tradeCode': 'Q021', 'exObjFields': {}, 'key': None}", 'affected_caseId': None, 'compare_type': 0, 'wait_time': None}, {'case_id': 145, 'api_name': '【余额购买】渠道2-手机购买随心投产品成功', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.ProductCoreTradeService', 'method': 'buyByVacco', 'request_data': '{\n"subamt":"10",\n"honourdate":"20180604",\n"baseyield":"0.0828",\n"yield":"0.0238",\n"addyield":"0",\n"interestbegindate":"20180525",\n"interestenddate":"20180603",\n"serialno":"20180831162632018lh",\n"custno":"1538967652",\n"apkind":"012","subapkind":"012001",\n"apdt":"20180525",\n"aptm":"134256",\n"workdate":"20180525",\n"tradeacco":"000621718538967655",\n"taaccountid":"475AE141EE07252223",\n"tano":"47","productid":"732822",\n"sharetype":"A","accptmd":"2",\n"branchcode":"247000","distributorcode":"247"}', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'20180831162632018lh\';"]', 'expected_data': "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}", 'affected_caseId': 146, 'compare_type': 0, 'wait_time': None}, {'case_id': 146, 'api_name': '【调用轮询接口处理交易请求】', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.ProductCoreTradeService', 'method': 'tradeContinueTask', 'request_data': '""', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'201808311540580981Dk\' AND APPLYST=\'Y\'AND TRANSST=\'Y\' AND PAYST=\'Y\';","SELECT * from cts.cts_tradequtychg WHERE REFERNO=\'201808311540580981Dk\' AND PRODUCTID=\'732822\'AND CHANGEQUTY=\'-10\';"]', 'expected_data': None, 'affected_caseId': None, 'compare_type': None, 'wait_time': None}, {'case_id': 147, 'api_name': '【余额购买】渠道3-企业版购买随心投产品成功', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.ProductCoreTradeService', 'method': 'buyByVacco', 'request_data': '{\n"subamt":"10",\n"honourdate":"20180604",\n"baseyield":"0.0828",\n"yield":"0.0238",\n"addyield":"0",\n"interestbegindate":"20180525",\n"interestenddate":"20180603",\n"serialno":"201808311626320765WV",\n"custno":"1538967652",\n"apkind":"012","subapkind":"012001",\n"apdt":"20180525",\n"aptm":"134256",\n"workdate":"20180525",\n"tradeacco":"000621718538967655",\n"taaccountid":"475AE141EE07252223",\n"tano":"47","productid":"732681",\n"sharetype":"A","accptmd":"3",\n"branchcode":"247000","distributorcode":"247"}', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'201808311626320765WV\';"]', 'expected_data': "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}", 'affected_caseId': 148, 'compare_type': 0, 'wait_time': None}, {'case_id': 148, 'api_name': '【调用轮询接口处理交易请求】', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.ProductCoreTradeService', 'method': 'tradeContinueTask', 'request_data': '""', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'201808311540580362Hb\' AND APPLYST=\'Y\'AND TRANSST=\'Y\' AND PAYST=\'Y\';","SELECT * from cts.cts_tradequtychg WHERE REFERNO=\'201808311540580362Hb\' AND PRODUCTID=\'732681\'AND CHANGEQUTY=\'-10\';"]', 'expected_data': None, 'affected_caseId': None, 'compare_type': None, 'wait_time': None}, {'case_id': 149, 'api_name': '【组合卖出】双季产品开放日卖出申请', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.ProductCoreTradeService', 'method': 'sellToVacco', 'request_data': '{"refercapno":"5AE02D4E13F7bc16",\n        "reemFlag":"0",\n        "selltype":1,\n        "periodic":"true",\n        "mixProd":"true",\n        "bigVCustno":"1597219229",\n        "honourFlag":"1",\n        "newFlag":"0",\n        "partPayment":"false",\n        "subquty":"100.00",\n        "feetp":"07",\n        "feemode":"1",\n        "feevalue":"0.0",\n        "serialno":"201808311626320404TD",\n        "custno":"1538943691",\n        "apkind":"014",\n        "subapkind":"014001",\n        "apdt":"20180831",\n        "aptm":"113344",\n        "workdate":"20180831",\n        "tradeacco":"000621718538943694",\n        "taaccountid":"475A7D638769350988",\n        "tano":"47",\n        "productid":"8903",\n        "sharetype":"A",\n        "accptmd":"1",\n        "branchcode":"247000",\n        "distributorcode":"247"}', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'201808311626320404TD\';"]', 'expected_data': "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}", 'affected_caseId': 151, 'compare_type': 0, 'wait_time': None}, {'case_id': 150, 'api_name': '【调用轮询接口处理交易请求】', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.ProductCoreTradeService', 'method': 'tradeContinueTask', 'request_data': '""', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'201808311626320404TD\';"]', 'expected_data': None, 'affected_caseId': None, 'compare_type': None, 'wait_time': 1}, {'case_id': 151, 'api_name': '【卖出后续接口】双季产品开放日卖出成功', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.ProductCoreTradeService', 'method': 'tradeContinue', 'request_data': '{"serialno":"201808311540580226JT","isSend":"1",\'extFields\':{"errCode":"0000", "errMsg":"交易成功", "tranSt":"Y"}}', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'201808311540580226JT\' AND APPLYST=\'Y\'AND TRANSST=\'Y\' AND PAYST=\'Y\';","SELECT * from cts.cts_tradequtychg WHERE REFERNO=\'201808311540580226JT\' AND PRODUCTID=\'9999\'AND CHANGEQUTY=\'100\';"]', 'expected_data': "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功！', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}", 'affected_caseId': None, 'compare_type': 0, 'wait_time': None}, {'case_id': 152, 'api_name': '【组合卖出】双季产品开放日卖出申请', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.ProductCoreTradeService', 'method': 'sellToVacco', 'request_data': '{"refercapno":"5AE02D4E13F7bc16",\n        "reemFlag":"0",\n        "selltype":1,\n        "periodic":"true",\n        "mixProd":"true",\n        "bigVCustno":"1597219229",\n        "honourFlag":"1",\n        "newFlag":"0",\n        "partPayment":"false",\n        "subquty":"100.00",\n        "feetp":"07",\n        "feemode":"1",\n        "feevalue":"0.0",\n        "serialno":"201808311626320197nF",\n        "custno":"1538943691",\n        "apkind":"014",\n        "subapkind":"014001",\n        "apdt":"20180831",\n        "aptm":"113344",\n        "workdate":"20180831",\n        "tradeacco":"000621718538943694",\n        "taaccountid":"475A7D638769350988",\n        "tano":"47",\n        "productid":"8903",\n        "sharetype":"A",\n        "accptmd":"1",\n        "branchcode":"247000",\n        "distributorcode":"247"}', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'201808311626320197nF\';"]', 'expected_data': "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}", 'affected_caseId': 154, 'compare_type': 0, 'wait_time': None}, {'case_id': 153, 'api_name': '【调用轮询接口处理交易请求】', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.ProductCoreTradeService', 'method': 'tradeContinueTask', 'request_data': '""', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'201808311626320197nF\';"]', 'expected_data': None, 'affected_caseId': None, 'compare_type': None, 'wait_time': 1}, {'case_id': 154, 'api_name': '【卖出后续接口】双季产品开放日卖出失败', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.ProductCoreTradeService', 'method': 'tradeContinue', 'request_data': '{"serialno":"201808311540580746wT",\'extFields\':{"errCode":"0001", "errMsg":"交易失败", "tranSt":"F"}}', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'201808311540580746wT\' AND APPLYST=\'Y\'AND TRANSST=\'Y\' AND PAYST=\'Y\';","SELECT * from cts.cts_tradequtychg WHERE REFERNO=\'201808311540580746wT\' AND PRODUCTID=\'8903\'AND CHANGEQUTY=\'100\';"]', 'expected_data': "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'F'.* 'errMsg': '申请成功', 'tradeCode': '0001', 'exObjFields': {}, 'key': None}", 'affected_caseId': None, 'compare_type': 1, 'wait_time': None}, {'case_id': 155, 'api_name': '【组合卖出】双季产品提前卖出申请', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.ProductCoreTradeService', 'method': 'sellToVacco', 'request_data': '{"refercapno":"5B06227E029Dbc36",\n        "reemFlag":"1",\n        "selltype":1,\n        "periodic":"true",\n        "mixProd":"true",\n        "bigVCustno":"1597219229",\n        "honourFlag":"1",\n        "newFlag":"0",\n        "partPayment":"false",\n        "subquty":"100.00",\n        "feetp":"07",\n        "feemode":"1",\n        "feevalue":"0.01",\n        "serialno":"201808311626320714kH",\n        "custno":"1538943691",\n        "apkind":"014",\n        "subapkind":"014001",\n        "apdt":"20180722",\n        "aptm":"113344",\n        "workdate":"20180722",\n        "tradeacco":"000621718538943694",\n        "taaccountid":"475A7D638769350988",\n        "tano":"47",\n        "productid":"8903",\n        "sharetype":"A",\n        "accptmd":"1",\n        "branchcode":"247000",\n        "distributorcode":"247"}', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'201808311626320714kH\';"]', 'expected_data': "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}", 'affected_caseId': 157, 'compare_type': 0, 'wait_time': None}, {'case_id': 156, 'api_name': '【调用轮询接口处理交易请求】', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.ProductCoreTradeService', 'method': 'tradeContinueTask', 'request_data': '""', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'201808311626320714kH\';"]', 'expected_data': None, 'affected_caseId': None, 'compare_type': None, 'wait_time': 1}, {'case_id': 157, 'api_name': '【卖出后续接口】双季产品提前卖出成功', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.ProductCoreTradeService', 'method': 'tradeContinue', 'request_data': '{"serialno":"201808311540580795yN","isSend":"1",\'extFields\':{"errCode":"0000", "errMsg":"交易成功", "tranSt":"Y"}}', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'201808311540580795yN\' AND APPLYST=\'Y\'AND TRANSST=\'Y\' AND PAYST=\'Y\';","SELECT * from cts.cts_tradequtychg WHERE REFERNO=\'201808311540580795yN\' AND PRODUCTID=\'9999\'AND CHANGEQUTY=\'99\';"]', 'expected_data': "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功！', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}", 'affected_caseId': None, 'compare_type': 0, 'wait_time': None}, {'case_id': 158, 'api_name': '【组合卖出】双季产品提前卖出申请', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.ProductCoreTradeService', 'method': 'sellToVacco', 'request_data': '{"refercapno":"5B06227E029Dbc36",\n        "reemFlag":"1",\n        "selltype":1,\n        "periodic":"true",\n        "mixProd":"true",\n        "bigVCustno":"1597219229",\n        "honourFlag":"1",\n        "newFlag":"0",\n        "partPayment":"false",\n        "subquty":"100.00",\n        "feetp":"07",\n        "feemode":"1",\n        "feevalue":"0.01",\n        "serialno":"201808311626320288dp",\n        "custno":"1538943691",\n        "apkind":"014",\n        "subapkind":"014001",\n        "apdt":"20180722",\n        "aptm":"113344",\n        "workdate":"20180722",\n        "tradeacco":"000621718538943694",\n        "taaccountid":"475A7D638769350988",\n        "tano":"47",\n        "productid":"8903",\n        "sharetype":"A",\n        "accptmd":"1",\n        "branchcode":"247000",\n        "distributorcode":"247"}', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'201808311626320288dp\';"]', 'expected_data': "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}", 'affected_caseId': 160, 'compare_type': 0, 'wait_time': None}, {'case_id': 159, 'api_name': '【调用轮询接口处理交易请求】', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.ProductCoreTradeService', 'method': 'tradeContinueTask', 'request_data': '""', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'201808311626320288dp\';"]', 'expected_data': None, 'affected_caseId': None, 'compare_type': None, 'wait_time': 1}, {'case_id': 160, 'api_name': '【卖出后续接口】双季产品开放日卖出失败', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.ProductCoreTradeService', 'method': 'tradeContinue', 'request_data': '{"serialno":"201808311540580288cL",\'extFields\':{"errCode":"0001", "errMsg":"交易失败", "tranSt":"F"}}', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'201808311540580288cL\' AND APPLYST=\'Y\'AND TRANSST=\'Y\' AND PAYST=\'Y\';","SELECT * from cts.cts_tradequtychg WHERE REFERNO=\'201808311540580288cL\' AND PRODUCTID=\'8903\'AND CHANGEQUTY=\'100\';"]', 'expected_data': "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'F'.* 'errMsg': '申请成功', 'tradeCode': '0001', 'exObjFields': {}, 'key': None}", 'affected_caseId': None, 'compare_type': 1, 'wait_time': None}, {'case_id': 161, 'api_name': '【组合卖出】双季产品不在开放日卖出', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.ProductCoreTradeService', 'method': 'sellToVacco', 'request_data': '{"refercapno":"59A65428006Cbc64",\n        "reemFlag":"0",\n        "selltype":1,\n        "periodic":"true",\n        "mixProd":"true",\n        "bigVCustno":"1503257540",\n        "honourFlag":"1",\n        "newFlag":"0",\n        "partPayment":"true",\n        "subquty":"10",\n        "serialno":"201808311626320530VC",\n        "custno":"1538747953",\n        "apkind":"142",\n        "subapkind":"142001",\n        "apdt":"20180531",\n        "aptm":"113242",\n        "workdate":"20180531",\n        "tradeacco":"000621718538747956",\n        "taaccountid":"4759A61C6F83922488",\n        "tano":"47",\n        "productid":"8903",\n        "sharetype":"A",\n        "accptmd":"1",\n        "branchcode":"247000",\n        "distributorcode":"247"}', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'201808311540580288cL\' AND APPLYST=\'Y\'AND TRANSST=\'Y\' AND PAYST=\'Y\';","SELECT * from cts.cts_tradequtychg WHERE REFERNO=\'201808311540580288cL\' AND PRODUCTID=\'8903\'AND CHANGEQUTY=\'100\';"]', 'expected_data': "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'F', 'tradeMsg': '客户持有的该产品不在开放日之内', 'errMsg': '申请成功', 'tradeCode': 'B006', 'exObjFields': {}, 'key': None}", 'affected_caseId': None, 'compare_type': 0, 'wait_time': None}, {'case_id': 162, 'api_name': '【散标转让】散标转让申请', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.ProductCoreTranService', 'method': 'transferApp', 'request_data': '{\n"serialno":"201808311626320996EW",\n"subquty":"10.00",\n"custno":"1538943691",\n"apkind":"055",\n"subapkind":"055001",\n"apdt":"20180726",\n"aptm":"161324",\n"workdate":"20180726",\n"sharetype":"A",\n"accptmd":"1",\n"branchcode":"247000",\n"distributorcode":"247",\n"referno":"5B5980AB002Cbc84",\n"tradeacco":"000621718538943694",\n"taaccountid":"475A7D638769350988",\n"productid":"732937",\n"tano":"47",\n"feetp":"06",\n"feemode":"1",\n"feevalue":"0.002",\n"baseyield":"0.0900",\n"yield":"0.0900",\n"addyield":"0.0000",\n"exyield":"0.0000",\n"interestbegindate":"20180726",\n"interestenddate":"20181016",\n"selltype":1}', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'201808311626320996EW\';"]', 'expected_data': "{'extFields': {}, 'errCode': '0000', 'errMsg': '申请成功', 'exObjFields': {}, 'key': None, 'status': 'Y'}", 'affected_caseId': 163, 'compare_type': 0, 'wait_time': None}, {'case_id': 163, 'api_name': '【散标转让】散标转让购买申请', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.ProductCoreTradeService', 'method': 'transferByVacco', 'request_data': '{\n"referno":"201808311540590457wa",\n"subquty":"10",\n"honourdate":"20181017",\n"baseyield":"0.0900",\n"yield":"0.0900",\n"addyield":"0.0000",\n"interestbegindate":"20180726",\n"interestenddate":"20181016",\n"exyield":"0",\n"serialno":"20180831162632059iV",\n"custno":"1538943811",\n"apkind":"056",\n"subapkind":"056001",\n"apdt":"20180726",\n"aptm":"134031",\n"workdate":"20180726",\n"tradeacco":"000621718538943814",\n"taaccountid":"475A7FB19598436383",\n"tano":"47",\n"productid":"732937",\n"sharetype":"A",\n"accptmd":"1",\n"branchcode":"247000",\n"distributorcode":"247"}', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'20180831162632059iV\';"]', 'expected_data': "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}", 'affected_caseId': 165, 'compare_type': 0, 'wait_time': None}, {'case_id': 164, 'api_name': '【调用轮询接口处理交易请求】', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.ProductCoreTradeService', 'method': 'tradeContinueTask', 'request_data': '""', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'20180831162632059iV\';"]', 'expected_data': "{'extFields': {}, 'errCode': '0000', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '申请成功', 'tradeCode': None, 'exObjFields': {}, 'key': None}", 'affected_caseId': None, 'compare_type': 0, 'wait_time': 1}, {'case_id': 165, 'api_name': '【转让购买后续接口】散标转让购买成功', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.ProductCoreTradeService', 'method': 'tradeContinue', 'request_data': '{"serialno":"201808311540590621FD","isSend":"1",\'extFields\':{"errCode":"0000", "errMsg":"交易成功", "tranSt":"Y"}}', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'201808311540590621FD\' AND APPLYST=\'Y\'AND TRANSST=\'Y\' AND PAYST=\'Y\';","SELECT * from cts.cts_tradequtychg WHERE REFERNO=\'201808311540590621FD\' AND PRODUCTID=\'9999\'AND CHANGEQUTY=\'10\';"]', 'expected_data': "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功！', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}", 'affected_caseId': None, 'compare_type': 0, 'wait_time': None}, {'case_id': 166, 'api_name': '【散标转让】散标转让申请', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.ProductCoreTranService', 'method': 'transferApp', 'request_data': '{\n"serialno":"201808311626320961Cx",\n"subquty":"100.00",\n"custno":"1538943691",\n"apkind":"055",\n"subapkind":"055001",\n"apdt":"20180726",\n"aptm":"161324",\n"workdate":"20180726",\n"sharetype":"A",\n"accptmd":"1",\n"branchcode":"247000",\n"distributorcode":"247",\n"referno":"5B5980AB002Cbc84",\n"tradeacco":"000621718538943694",\n"taaccountid":"475A7D638769350988",\n"productid":"732937",\n"tano":"47",\n"feetp":"06",\n"feemode":"1",\n"feevalue":"0.002",\n"baseyield":"0.0900",\n"yield":"0.0900",\n"addyield":"0.0000",\n"exyield":"0.0000",\n"interestbegindate":"20180726",\n"interestenddate":"20181016",\n"selltype":1}', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'201808311626320961Cx\';"]', 'expected_data': "{'extFields': {}, 'errCode': '0000', 'errMsg': '申请成功', 'exObjFields': {}, 'key': None, 'status': 'Y'}", 'affected_caseId': 167, 'compare_type': 0, 'wait_time': None}, {'case_id': 167, 'api_name': '【散标转让】散标转让购买申请', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.ProductCoreTradeService', 'method': 'transferByVacco', 'request_data': '{\n"referno":"201808311540590426go",\n"subquty":"100",\n"honourdate":"20181017",\n"baseyield":"0.0900",\n"yield":"0.0900",\n"addyield":"0.0000",\n"interestbegindate":"20180726",\n"interestenddate":"20181016",\n"exyield":"0",\n"serialno":"201808311626320135ee",\n"custno":"1538943811",\n"apkind":"056",\n"subapkind":"056001",\n"apdt":"20180726",\n"aptm":"134031",\n"workdate":"20180726",\n"tradeacco":"000621718538943814",\n"taaccountid":"475A7FB19598436383",\n"tano":"47",\n"productid":"732937",\n"sharetype":"A",\n"accptmd":"1",\n"branchcode":"247000",\n"distributorcode":"247"}', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'201808311626320135ee\';"]', 'expected_data': "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}", 'affected_caseId': 169, 'compare_type': 0, 'wait_time': None}, {'case_id': 168, 'api_name': '【调用轮询接口处理交易请求】', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.ProductCoreTradeService', 'method': 'tradeContinueTask', 'request_data': '""', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'201808311626320135ee\';"]', 'expected_data': "{'extFields': {}, 'errCode': '0000', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '申请成功', 'tradeCode': None, 'exObjFields': {}, 'key': None}", 'affected_caseId': None, 'compare_type': 0, 'wait_time': 1}, {'case_id': 169, 'api_name': '【转让购买后续接口】散标转让购买失败', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.ProductCoreTradeService', 'method': 'tradeContinue', 'request_data': '{"serialno":"201808311540590299ZG",\'extFields\':{"errCode":"0001", "errMsg":"交易失败", "tranSt":"F"}}', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'201808311540590299ZG\' AND PAYST=\'F\';"]', 'expected_data': "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'F', 'tradeMsg': '浜ゆ槗澶辫触', 'errMsg': '申请成功', 'tradeCode': '0001', 'exObjFields': {}, 'key': None}", 'affected_caseId': None, 'compare_type': 0, 'wait_time': None}, {'case_id': 170, 'api_name': '【散标转让】转让金额含空格', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.ProductCoreTranService', 'method': 'transferApp', 'request_data': '{\n"serialno":"201808311626320493oI",\n"subquty":"1 0.00",\n"custno":"1538943691",\n"apkind":"055",\n"subapkind":"055001",\n"apdt":"20180726",\n"aptm":"161324",\n"workdate":"20180726",\n"sharetype":"A",\n"accptmd":"1",\n"branchcode":"247000",\n"distributorcode":"247",\n"referno":"5B5980AB002Cbc84",\n"tradeacco":"000621718538943694",\n"taaccountid":"475A7D638769350988",\n"productid":"732937",\n"tano":"47",\n"feetp":"06",\n"feemode":"1",\n"feevalue":"0.002",\n"baseyield":"0.0900",\n"yield":"0.0900",\n"addyield":"0.0000",\n"exyield":"0.0000",\n"interestbegindate":"20180726",\n"interestenddate":"20181016",\n"selltype":1}', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'201808311540590299ZG\' AND PAYST=\'F\';"]', 'expected_data': 'Failed to invoke method transferApp, cause: java.lang.NumberFormatException', 'affected_caseId': None, 'compare_type': 0, 'wait_time': None}, {'case_id': 171, 'api_name': '【散标转让】转让金额含特殊字符', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.ProductCoreTranService', 'method': 'transferApp', 'request_data': '{\n"serialno":"201808311626320768LL",\n"subquty":"1@0.00",\n"custno":"1538943691",\n"apkind":"055",\n"subapkind":"055001",\n"apdt":"20180726",\n"aptm":"161324",\n"workdate":"20180726",\n"sharetype":"A",\n"accptmd":"1",\n"branchcode":"247000",\n"distributorcode":"247",\n"referno":"5B5980AB002Cbc84",\n"tradeacco":"000621718538943694",\n"taaccountid":"475A7D638769350988",\n"productid":"732937",\n"tano":"47",\n"feetp":"06",\n"feemode":"1",\n"feevalue":"0.002",\n"baseyield":"0.0900",\n"yield":"0.0900",\n"addyield":"0.0000",\n"exyield":"0.0000",\n"interestbegindate":"20180726",\n"interestenddate":"20181016",\n"selltype":1}', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'201808311540590299ZG\' AND PAYST=\'F\';"]', 'expected_data': 'Failed to invoke method transferApp, cause: java.lang.NumberFormatException', 'affected_caseId': None, 'compare_type': 0, 'wait_time': None}, {'case_id': 172, 'api_name': '【散标转让】转让份额大于购买份额购买失败', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.ProductCoreTranService', 'method': 'transferApp', 'request_data': '{\n"serialno":"201808311626320177ag",\n"subquty":"100.00",\n"custno":"1538943691",\n"apkind":"055",\n"subapkind":"055001",\n"apdt":"20180726",\n"aptm":"161324",\n"workdate":"20180726",\n"sharetype":"A",\n"accptmd":"1",\n"branchcode":"247000",\n"distributorcode":"247",\n"referno":"5B5980AB002Cbc84",\n"tradeacco":"000621718538943694",\n"taaccountid":"475A7D638769350988",\n"productid":"732937",\n"tano":"47",\n"feetp":"06",\n"feemode":"1",\n"feevalue":"0.002",\n"baseyield":"0.0900",\n"yield":"0.0900",\n"addyield":"0.0000",\n"exyield":"0.0000",\n"interestbegindate":"20180726",\n"interestenddate":"20181016",\n"selltype":1}', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'201808311626320177ag\' AND APPLYST=\'F\';"]', 'expected_data': "{'extFields': {}, 'errCode': '0000', 'errMsg': '申请成功', 'exObjFields': {}, 'key': None, 'status': 'Y'}", 'affected_caseId': None, 'compare_type': 0, 'wait_time': None}, {'case_id': 173, 'api_name': '【组合卖出】季季升产品提前卖出申请', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.ProductCoreTradeService', 'method': 'sellToVacco', 'request_data': '{"refercapno":"5B57DD261DFCbc4E",\n        "reemFlag":"1",\n        "selltype":1,\n        "periodic":"true",\n        "mixProd":"true",\n        "bigVCustno":"1503257540",\n        "honourFlag":"1",\n        "newFlag":"0",\n        "partPayment":"false",\n        "subquty":"10.00",\n        "feetp":"07",\n        "feemode":"1",\n        "feevalue":"0.01",\n        "serialno":"201808311626320965bj",\n        "custno":"1538943811",\n        "apkind":"014",\n        "subapkind":"014001",\n        "apdt":"20180722",\n        "aptm":"113344",\n        "workdate":"20180722",\n        "tradeacco":"000621718538943814",\n        "taaccountid":"475A7FB19598436383",\n        "tano":"47",\n        "productid":"8901",\n        "sharetype":"A",\n        "accptmd":"1",\n        "branchcode":"247000",\n        "distributorcode":"247"}', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'201808311626320965bj\';"]', 'expected_data': "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}", 'affected_caseId': 175, 'compare_type': 0, 'wait_time': None}, {'case_id': 174, 'api_name': '【调用轮询接口处理交易请求】', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.ProductCoreTradeService', 'method': 'tradeContinueTask', 'request_data': '""', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'201808311626320965bj\';"]', 'expected_data': None, 'affected_caseId': None, 'compare_type': None, 'wait_time': 1}, {'case_id': 175, 'api_name': '【卖出后续接口】季季升产品提前卖出成功', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.ProductCoreTradeService', 'method': 'tradeContinue', 'request_data': '{"serialno":"201808311540590448gQ","isSend":"1",\'extFields\':{"errCode":"0000", "errMsg":"交易成功", "tranSt":"Y"}}', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'201808311540590448gQ\' AND APPLYST=\'Y\'AND TRANSST=\'Y\' AND PAYST=\'Y\';","SELECT * from cts.cts_tradequtychg WHERE REFERNO=\'201808311540590448gQ\' AND PRODUCTID=\'9999\'AND CHANGEQUTY=\'9.9\';"]', 'expected_data': "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功！', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}", 'affected_caseId': None, 'compare_type': 0, 'wait_time': None}, {'case_id': 176, 'api_name': '【组合卖出】季季升产品提前卖出申请', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.ProductCoreTradeService', 'method': 'sellToVacco', 'request_data': '{"refercapno":"5B57DD261DFCbc4E",\n        "reemFlag":"1",\n        "selltype":1,\n        "periodic":"true",\n        "mixProd":"true",\n        "bigVCustno":"1503257540",\n        "honourFlag":"1",\n        "newFlag":"0",\n        "partPayment":"false",\n        "subquty":"10.00",\n        "feetp":"07",\n        "feemode":"1",\n        "feevalue":"0.01",\n        "serialno":"201808311626320464GI",\n        "custno":"1538943811",\n        "apkind":"014",\n        "subapkind":"014001",\n        "apdt":"20180722",\n        "aptm":"113344",\n        "workdate":"20180722",\n        "tradeacco":"000621718538943814",\n        "taaccountid":"475A7FB19598436383",\n        "tano":"47",\n        "productid":"8901",\n        "sharetype":"A",\n        "accptmd":"1",\n        "branchcode":"247000",\n        "distributorcode":"247"}', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'201808311626320464GI\';"]', 'expected_data': "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}", 'affected_caseId': 178, 'compare_type': 0, 'wait_time': None}, {'case_id': 177, 'api_name': '【调用轮询接口处理交易请求】', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.ProductCoreTradeService', 'method': 'tradeContinueTask', 'request_data': '""', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'201808311626320464GI\';"]', 'expected_data': None, 'affected_caseId': None, 'compare_type': None, 'wait_time': 1}, {'case_id': 178, 'api_name': '【卖出后续接口】季季升产品提前卖出失败', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.ProductCoreTradeService', 'method': 'tradeContinue', 'request_data': '{"serialno":"201808311540590241VV","isSend":"1",\'extFields\':{"errCode":"0000", "errMsg":"交易成功", "tranSt":"Y"}}', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'201808311540590241VV\' AND APPLYST=\'Y\'AND TRANSST=\'Y\' AND PAYST=\'Y\';","SELECT * from cts.cts_tradequtychg WHERE REFERNO=\'201808311540590241VV\' AND PRODUCTID=\'8901\'AND CHANGEQUTY=\'10\';"]', 'expected_data': "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'F', 'tradeMsg': '浜ゆ槗澶辫触', 'errMsg': '申请成功', 'tradeCode': '0001', 'exObjFields': {}, 'key': None}", 'affected_caseId': None, 'compare_type': 0, 'wait_time': None}, {'case_id': 179, 'api_name': '【组合卖出】使用优惠券季季升产品提前卖出申请', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.ProductCoreTradeService', 'method': 'sellToVacco', 'request_data': '{"refercapno":"5B57DD261DFCbc4E",\n        "sellCouponId":"5B569A9A006Abc55",\n        "reemFlag":"1",\n        "periodic":"true",\n        "mixProd":"true",\n        "bigVCustno":"1503257540",\n        "honourFlag":"1",\n        "newFlag":"0",\n        "partPayment":"false",\n        "subquty":"10.00",\n        "feetp":"07",\n        "feemode":"1",\n        "feevalue":"0.01",\n        "serialno":"201808311626320160dJ",\n        "custno":"1538943811",\n        "apkind":"014",\n        "subapkind":"014001",\n        "apdt":"20180722",\n        "aptm":"113344",\n        "workdate":"20180722",\n        "tradeacco":"000621718538943814",\n        "taaccountid":"475A7FB19598436383",\n        "tano":"47",\n        "productid":"8901",\n        "sharetype":"A",\n        "accptmd":"1",\n        "branchcode":"247000",\n        "distributorcode":"247"}', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'201808311626320160dJ\';"]', 'expected_data': "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}", 'affected_caseId': 181, 'compare_type': 0, 'wait_time': None}, {'case_id': 180, 'api_name': '【调用轮询接口处理交易请求】', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.ProductCoreTradeService', 'method': 'tradeContinueTask', 'request_data': '""', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'201808311626320160dJ\';"]', 'expected_data': None, 'affected_caseId': None, 'compare_type': None, 'wait_time': 1}, {'case_id': 181, 'api_name': '【卖出后续接口】使用优惠券季季升产品提前卖出成功', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.ProductCoreTradeService', 'method': 'tradeContinue', 'request_data': '{"serialno":"201808311540590932eX","isSend":"1",\'extFields\':{"errCode":"0000", "errMsg":"交易成功", "tranSt":"Y"}}', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'201808311540590932eX\' AND APPLYST=\'Y\'AND TRANSST=\'Y\' AND PAYST=\'Y\';","SELECT * from cts.cts_tradequtychg WHERE REFERNO=\'201808311540590932eX\' AND PRODUCTID=\'9999\'AND CHANGEQUTY=\'9.9\';"]', 'expected_data': "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功！', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}", 'affected_caseId': None, 'compare_type': 0, 'wait_time': None}, {'case_id': 182, 'api_name': '【组合卖出】使用优惠券季季升产品提前卖出申请', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.ProductCoreTradeService', 'method': 'sellToVacco', 'request_data': '{"refercapno":"5B57DD261DFCbc4E",\n        "sellCouponId":"5B569A9A006Abc55",\n        "reemFlag":"1",\n        "selltype":1,\n        "periodic":"true",\n        "mixProd":"true",\n        "bigVCustno":"1503257540",\n        "honourFlag":"1",\n        "newFlag":"0",\n        "partPayment":"false",\n        "subquty":"10.00",\n        "feetp":"07",\n        "feemode":"1",\n        "feevalue":"0.01",\n        "serialno":"201808311626320203hR",\n        "custno":"1538943811",\n        "apkind":"014",\n        "subapkind":"014001",\n        "apdt":"20180722",\n        "aptm":"113344",\n        "workdate":"20180722",\n        "tradeacco":"000621718538943814",\n        "taaccountid":"475A7FB19598436383",\n        "tano":"47",\n        "productid":"8901",\n        "sharetype":"A",\n        "accptmd":"1",\n        "branchcode":"247000",\n        "distributorcode":"247"}', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'201808311626320203hR\';"]', 'expected_data': "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}", 'affected_caseId': 184, 'compare_type': 0, 'wait_time': None}, {'case_id': 183, 'api_name': '【调用轮询接口处理交易请求】', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.ProductCoreTradeService', 'method': 'tradeContinueTask', 'request_data': '""', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'201808311626320203hR\';"]', 'expected_data': None, 'affected_caseId': None, 'compare_type': None, 'wait_time': 1}, {'case_id': 184, 'api_name': '【卖出后续接口】使用优惠券季季升产品提前卖出失败', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.ProductCoreTradeService', 'method': 'tradeContinue', 'request_data': '{"serialno":"201808311540590912LN","isSend":"1",\'extFields\':{"errCode":"0000", "errMsg":"交易成功", "tranSt":"Y"}}', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'201808311540590912LN\' AND APPLYST=\'Y\'AND TRANSST=\'Y\' AND PAYST=\'Y\';","SELECT * from cts.cts_tradequtychg WHERE REFERNO=\'201808311540590912LN\' AND PRODUCTID=\'8901\'AND CHANGEQUTY=\'10\';"]', 'expected_data': "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'F', 'tradeMsg': '浜ゆ槗澶辫触', 'errMsg': '申请成功', 'tradeCode': '0001', 'exObjFields': {}, 'key': None}", 'affected_caseId': None, 'compare_type': 0, 'wait_time': None}, {'case_id': 185, 'api_name': '【组合卖出】月月盈产品提前卖出申请', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.ProductCoreTradeService', 'method': 'sellToVacco', 'request_data': '{"refercapno":"5B74EB0A001FbcAC",\n        "reemFlag":"1",\n        "selltype":1,\n        "periodic":"true",\n        "mixProd":"true",\n        "bigVCustno":"1503136940",\n        "honourFlag":"1",\n        "newFlag":"0",\n        "partPayment":"false",\n        "subquty":"10.00",\n        "feetp":"07",\n        "feemode":"1",\n        "feevalue":"0.01",\n        "serialno":"201808311626320635bD",\n        "custno":"1538943811",\n        "apkind":"014",\n        "subapkind":"014001",\n        "apdt":"20180815",\n        "aptm":"164500",\n        "workdate":"20180815",\n        "tradeacco":"000621718538943814",\n        "taaccountid":"475A7FB19598436383",\n        "tano":"47",\n        "productid":"8802",\n        "sharetype":"A",\n        "accptmd":"1",\n        "branchcode":"247000",\n        "distributorcode":"247"}', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'201808311626320635bD\';"]', 'expected_data': "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}", 'affected_caseId': 187, 'compare_type': 0, 'wait_time': None}, {'case_id': 186, 'api_name': '【调用轮询接口处理交易请求】', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.ProductCoreTradeService', 'method': 'tradeContinueTask', 'request_data': '""', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'201808311626320635bD\';"]', 'expected_data': None, 'affected_caseId': None, 'compare_type': None, 'wait_time': 1}, {'case_id': 187, 'api_name': '【卖出后续接口】月月盈产品提前卖出成功', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.ProductCoreTradeService', 'method': 'tradeContinue', 'request_data': '{"serialno":"201808311540590979tG","isSend":"1",\'extFields\':{"errCode":"0000", "errMsg":"交易成功", "tranSt":"Y"}}', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'201808311540590979tG\' AND APPLYST=\'Y\'AND TRANSST=\'Y\' AND PAYST=\'Y\';","SELECT * from cts.cts_tradequtychg WHERE REFERNO=\'201808311540590979tG\' AND PRODUCTID=\'9999\'AND CHANGEQUTY=\'9.9\';"]', 'expected_data': "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功！', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}", 'affected_caseId': None, 'compare_type': 0, 'wait_time': None}, {'case_id': 188, 'api_name': '【组合卖出】月月盈产品提前卖出申请', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.ProductCoreTradeService', 'method': 'sellToVacco', 'request_data': '{"refercapno":"5B74EB0A001FbcAC",\n        "reemFlag":"1",\n        "selltype":1,\n        "periodic":"true",\n        "mixProd":"true",\n        "bigVCustno":"1503136940",\n        "honourFlag":"1",\n        "newFlag":"0",\n        "partPayment":"false",\n        "subquty":"10.00",\n        "feetp":"07",\n        "feemode":"1",\n        "feevalue":"0.01",\n        "serialno":"201808311626320776oJ",\n        "custno":"1538943811",\n        "apkind":"014",\n        "subapkind":"014001",\n        "apdt":"20180815",\n        "aptm":"164500",\n        "workdate":"20180815",\n        "tradeacco":"000621718538943814",\n        "taaccountid":"475A7FB19598436383",\n        "tano":"47",\n        "productid":"8802",\n        "sharetype":"A",\n        "accptmd":"1",\n        "branchcode":"247000",\n        "distributorcode":"247"}', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'201808311626320776oJ\';"]', 'expected_data': "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}", 'affected_caseId': 190, 'compare_type': 0, 'wait_time': None}, {'case_id': 189, 'api_name': '【调用轮询接口处理交易请求】', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.ProductCoreTradeService', 'method': 'tradeContinueTask', 'request_data': '""', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'201808311626320776oJ\';"]', 'expected_data': None, 'affected_caseId': None, 'compare_type': None, 'wait_time': 1}, {'case_id': 190, 'api_name': '【卖出后续接口】月月盈产品提前卖出失败', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.ProductCoreTradeService', 'method': 'tradeContinue', 'request_data': '{"serialno":"201808311540590310rg","isSend":"1",\'extFields\':{"errCode":"0000", "errMsg":"交易成功", "tranSt":"Y"}}', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'201808311540590310rg\' AND APPLYST=\'Y\'AND TRANSST=\'Y\' AND PAYST=\'Y\';","SELECT * from cts.cts_tradequtychg WHERE REFERNO=\'201808311540590310rg\' AND PRODUCTID=\'8802\'AND CHANGEQUTY=\'10\';"]', 'expected_data': "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'F', 'tradeMsg': '浜ゆ槗澶辫触', 'errMsg': '申请成功', 'tradeCode': '0001', 'exObjFields': {}, 'key': None}", 'affected_caseId': None, 'compare_type': 0, 'wait_time': None}, {'case_id': 191, 'api_name': '【组合卖出】使用优惠券季季升产品提前卖出申请', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.ProductCoreTradeService', 'method': 'sellToVacco', 'request_data': '{"refercapno":"5B74EB0A001FbcAC",\n        "sellCouponId":"5B569A9A006Abc55",\n        "reemFlag":"1",\n        "selltype":1,\n        "periodic":"true",\n        "mixProd":"true",\n        "bigVCustno":"1503136940",\n        "honourFlag":"1",\n        "newFlag":"0",\n        "partPayment":"false",\n        "subquty":"10.00",\n        "feetp":"07",\n        "feemode":"1",\n        "feevalue":"0.01",\n        "serialno":"zcvbr123s12sdf31",\n        "custno":"1538943811",\n        "apkind":"014",\n        "subapkind":"014001",\n        "apdt":"20180815",\n        "aptm":"164500",\n        "workdate":"20180815",\n        "tradeacco":"000621718538943814",\n        "taaccountid":"475A7FB19598436383",\n        "tano":"47",\n        "productid":"8802",\n        "sharetype":"A",\n        "accptmd":"1",\n        "branchcode":"247000",\n        "distributorcode":"247"}', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'temp_serial\';"]', 'expected_data': "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}", 'affected_caseId': 193, 'compare_type': 0, 'wait_time': None}, {'case_id': 192, 'api_name': '【调用轮询接口处理交易请求】', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.ProductCoreTradeService', 'method': 'tradeContinueTask', 'request_data': '""', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'temp_serial\';"]', 'expected_data': None, 'affected_caseId': None, 'compare_type': None, 'wait_time': 1}, {'case_id': 193, 'api_name': '【卖出后续接口】使用优惠券月月盈产品提前卖出成功', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.ProductCoreTradeService', 'method': 'tradeContinue', 'request_data': '{"serialno":"zcvbr123s12sdf31","isSend":"1",\'extFields\':{"errCode":"0000", "errMsg":"交易成功", "tranSt":"Y"}}', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'zcvbr123s12sdf31\' AND APPLYST=\'Y\'AND TRANSST=\'Y\' AND PAYST=\'Y\';","SELECT * from cts.cts_tradequtychg WHERE REFERNO=\'zcvbr123s12sdf31\' AND PRODUCTID=\'9999\'AND CHANGEQUTY=\'9.9\';"]', 'expected_data': "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功！', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}", 'affected_caseId': None, 'compare_type': 0, 'wait_time': None}, {'case_id': 194, 'api_name': '【组合卖出】使用优惠券月月盈产品提前卖出申请', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.ProductCoreTradeService', 'method': 'sellToVacco', 'request_data': '{"refercapno":"5B74EB0A001FbcAC",\n        "sellCouponId":"5B569A9A006Abc55",\n        "reemFlag":"1",\n        "selltype":1,\n        "periodic":"true",\n        "mixProd":"true",\n        "bigVCustno":"1503136940",\n        "honourFlag":"1",\n        "newFlag":"0",\n        "partPayment":"false",\n        "subquty":"10.00",\n        "feetp":"07",\n        "feemode":"1",\n        "feevalue":"0.01",\n        "serialno":"zcvbr123s12sdf31",\n        "custno":"1538943811",\n        "apkind":"014",\n        "subapkind":"014001",\n        "apdt":"20180815",\n        "aptm":"164500",\n        "workdate":"20180815",\n        "tradeacco":"000621718538943814",\n        "taaccountid":"475A7FB19598436383",\n        "tano":"47",\n        "productid":"8802",\n        "sharetype":"A",\n        "accptmd":"1",\n        "branchcode":"247000",\n        "distributorcode":"247"}', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'temp_serial\';"]', 'expected_data': "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}", 'affected_caseId': 196, 'compare_type': 0, 'wait_time': None}, {'case_id': 195, 'api_name': '【调用轮询接口处理交易请求】', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.ProductCoreTradeService', 'method': 'tradeContinueTask', 'request_data': '""', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'temp_serial\';"]', 'expected_data': None, 'affected_caseId': None, 'compare_type': None, 'wait_time': 1}, {'case_id': 196, 'api_name': '【卖出后续接口】使用优惠券月月盈产品提前卖出失败', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.ProductCoreTradeService', 'method': 'tradeContinue', 'request_data': '{"serialno":"zcvbr123s12sdf31","isSend":"1",\'extFields\':{"errCode":"0000", "errMsg":"交易成功", "tranSt":"Y"}}', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'zcvbr123s12sdf31\' AND APPLYST=\'Y\'AND TRANSST=\'Y\' AND PAYST=\'Y\';","SELECT * from cts.cts_tradequtychg WHERE REFERNO=\'zcvbr123s12sdf31\' AND PRODUCTID=\'8802\'AND CHANGEQUTY=\'10\';"]', 'expected_data': "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'F', 'tradeMsg': '浜ゆ槗澶辫触', 'errMsg': '申请成功', 'tradeCode': '0001', 'exObjFields': {}, 'key': None}", 'affected_caseId': None, 'compare_type': 0, 'wait_time': None}, {'case_id': 197, 'api_name': '【组合卖出】四季甄选产品提前卖出申请', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.ProductCoreTradeService', 'method': 'sellToVacco', 'request_data': '{"refercapno":"5B57DE5B20F7bc4E",\n        "reemFlag":"1",\n        "selltype":1,\n        "periodic":"true",\n        "mixProd":"true",\n        "bigVCustno":"1597219235",\n        "honourFlag":"1",\n        "newFlag":"0",\n        "partPayment":"false",\n        "subquty":"10.00",\n        "feetp":"07",\n        "feemode":"1",\n        "feevalue":"0.01",\n        "serialno":"201808311626320454Tk",\n        "custno":"1538943811",\n        "apkind":"014",\n        "subapkind":"014001",\n        "apdt":"20180815",\n        "aptm":"164500",\n        "workdate":"20180815",\n        "tradeacco":"000621718538943814",\n        "taaccountid":"475A7FB19598436383",\n        "tano":"47",\n        "productid":"8904",\n        "sharetype":"A",\n        "accptmd":"1",\n        "branchcode":"247000",\n        "distributorcode":"247"}', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'201808311626320454Tk\';"]', 'expected_data': "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}", 'affected_caseId': 199, 'compare_type': 0, 'wait_time': None}, {'case_id': 198, 'api_name': '【调用轮询接口处理交易请求】', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.ProductCoreTradeService', 'method': 'tradeContinueTask', 'request_data': '""', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'201808311626320454Tk\';"]', 'expected_data': None, 'affected_caseId': None, 'compare_type': None, 'wait_time': 1}, {'case_id': 199, 'api_name': '【卖出后续接口】四季甄选产品提前卖出成功', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.ProductCoreTradeService', 'method': 'tradeContinue', 'request_data': '{"serialno":"201808311540590841HD","isSend":"1",\'extFields\':{"errCode":"0000", "errMsg":"交易成功", "tranSt":"Y"}}', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'201808311540590841HD\' AND APPLYST=\'Y\'AND TRANSST=\'Y\' AND PAYST=\'Y\';","SELECT * from cts.cts_tradequtychg WHERE REFERNO=\'201808311540590841HD\' AND PRODUCTID=\'9999\'AND CHANGEQUTY=\'9.9\';"]', 'expected_data': "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功！', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}", 'affected_caseId': None, 'compare_type': 0, 'wait_time': None}, {'case_id': 200, 'api_name': '【组合卖出】四季甄选产品提前卖出申请', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.ProductCoreTradeService', 'method': 'sellToVacco', 'request_data': '{"refercapno":"5B57DE5B20F7bc4E",\n        "reemFlag":"1",\n        "selltype":1,\n        "periodic":"true",\n        "mixProd":"true",\n        "bigVCustno":"1597219235",\n        "honourFlag":"1",\n        "newFlag":"0",\n        "partPayment":"false",\n        "subquty":"10.00",\n        "feetp":"07",\n        "feemode":"1",\n        "feevalue":"0.01",\n        "serialno":"201808311626320878Tp",\n        "custno":"1538943811",\n        "apkind":"014",\n        "subapkind":"014001",\n        "apdt":"20180815",\n        "aptm":"164500",\n        "workdate":"20180815",\n        "tradeacco":"000621718538943814",\n        "taaccountid":"475A7FB19598436383",\n        "tano":"47",\n        "productid":"8904",\n        "sharetype":"A",\n        "accptmd":"1",\n        "branchcode":"247000",\n        "distributorcode":"247"}', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'201808311626320878Tp\';"]', 'expected_data': "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}", 'affected_caseId': 202, 'compare_type': 0, 'wait_time': None}, {'case_id': 201, 'api_name': '【调用轮询接口处理交易请求】', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.ProductCoreTradeService', 'method': 'tradeContinueTask', 'request_data': '""', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'201808311626320878Tp\';"]', 'expected_data': None, 'affected_caseId': None, 'compare_type': None, 'wait_time': 1}, {'case_id': 202, 'api_name': '【卖出后续接口】四季甄选产品提前卖出失败', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.ProductCoreTradeService', 'method': 'tradeContinue', 'request_data': '{"serialno":"201808311540590273Kt","isSend":"1",\'extFields\':{"errCode":"0000", "errMsg":"交易成功", "tranSt":"Y"}}', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'201808311540590273Kt\' AND APPLYST=\'Y\'AND TRANSST=\'Y\' AND PAYST=\'Y\';","SELECT * from cts.cts_tradequtychg WHERE REFERNO=\'201808311540590273Kt\' AND PRODUCTID=\'8904\'AND CHANGEQUTY=\'10\';"]', 'expected_data': "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'F', 'tradeMsg': '浜ゆ槗澶辫触', 'errMsg': '申请成功', 'tradeCode': '0001', 'exObjFields': {}, 'key': None}", 'affected_caseId': None, 'compare_type': 0, 'wait_time': None}, {'case_id': 203, 'api_name': '【组合卖出】使用优惠券四季甄选产品提前卖出申请', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.ProductCoreTradeService', 'method': 'sellToVacco', 'request_data': '{"refercapno":"5B57DE5B20F7bc4E",\n        "sellCouponId":"5B569A9A006Abc55",\n        "reemFlag":"1",\n        "selltype":1,\n        "periodic":"true",\n        "mixProd":"true",\n        "bigVCustno":"1597219235",\n        "honourFlag":"1",\n        "newFlag":"0",\n        "partPayment":"false",\n        "subquty":"10.00",\n        "feetp":"07",\n        "feemode":"1",\n        "feevalue":"0.01",\n        "serialno":"201808311626320262tN",\n        "custno":"1538943811",\n        "apkind":"014",\n        "subapkind":"014001",\n        "apdt":"20180815",\n        "aptm":"164500",\n        "workdate":"20180815",\n        "tradeacco":"000621718538943814",\n        "taaccountid":"475A7FB19598436383",\n        "tano":"47",\n        "productid":"8904",\n        "sharetype":"A",\n        "accptmd":"1",\n        "branchcode":"247000",\n        "distributorcode":"247"}', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'201808311626320262tN\';"]', 'expected_data': "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}", 'affected_caseId': 205, 'compare_type': 0, 'wait_time': None}, {'case_id': 204, 'api_name': '【调用轮询接口处理交易请求】', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.ProductCoreTradeService', 'method': 'tradeContinueTask', 'request_data': '""', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'201808311626320262tN\';"]', 'expected_data': None, 'affected_caseId': None, 'compare_type': None, 'wait_time': 1}, {'case_id': 205, 'api_name': '【卖出后续接口】使用优惠券四季甄选产品提前卖出成功', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.ProductCoreTradeService', 'method': 'tradeContinue', 'request_data': '{"serialno":"201808311540590511FT","isSend":"1",\'extFields\':{"errCode":"0000", "errMsg":"交易成功", "tranSt":"Y"}}', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'201808311540590511FT\' AND APPLYST=\'Y\'AND TRANSST=\'Y\' AND PAYST=\'Y\';","SELECT * from cts.cts_tradequtychg WHERE REFERNO=\'201808311540590511FT\' AND PRODUCTID=\'9999\'AND CHANGEQUTY=\'9.9\';"]', 'expected_data': "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功！', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}", 'affected_caseId': None, 'compare_type': 0, 'wait_time': None}, {'case_id': 206, 'api_name': '【组合卖出】使用优惠券四季甄选产品提前卖出申请', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.ProductCoreTradeService', 'method': 'sellToVacco', 'request_data': '{"refercapno":"5B57DE5B20F7bc4E",\n        "sellCouponId":"5B569A9A006Abc55",\n        "reemFlag":"1",\n        "selltype":1,\n        "periodic":"true",\n        "mixProd":"true",\n        "bigVCustno":"1597219235",\n        "honourFlag":"1",\n        "newFlag":"0",\n        "partPayment":"false",\n        "subquty":"10.00",\n        "feetp":"07",\n        "feemode":"1",\n        "feevalue":"0.01",\n        "serialno":"201808311626320948TK",\n        "custno":"1538943811",\n        "apkind":"014",\n        "subapkind":"014001",\n        "apdt":"20180815",\n        "aptm":"164500",\n        "workdate":"20180815",\n        "tradeacco":"000621718538943814",\n        "taaccountid":"475A7FB19598436383",\n        "tano":"47",\n        "productid":"8904",\n        "sharetype":"A",\n        "accptmd":"1",\n        "branchcode":"247000",\n        "distributorcode":"247"}', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'201808311626320948TK\';"]', 'expected_data': "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}", 'affected_caseId': 208, 'compare_type': 0, 'wait_time': None}, {'case_id': 207, 'api_name': '【调用轮询接口处理交易请求】', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.ProductCoreTradeService', 'method': 'tradeContinueTask', 'request_data': '""', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'201808311626320948TK\';"]', 'expected_data': None, 'affected_caseId': None, 'compare_type': None, 'wait_time': 1}, {'case_id': 208, 'api_name': '【卖出后续接口】使用优惠券四季甄选产品提前卖出失败', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.ProductCoreTradeService', 'method': 'tradeContinue', 'request_data': '{"serialno":"201808311540590315UC","isSend":"1",\'extFields\':{"errCode":"0000", "errMsg":"交易成功", "tranSt":"Y"}}', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'201808311540590315UC\' AND APPLYST=\'Y\'AND TRANSST=\'Y\' AND PAYST=\'Y\';","SELECT * from cts.cts_tradequtychg WHERE REFERNO=\'201808311540590315UC\' AND PRODUCTID=\'8904\'AND CHANGEQUTY=\'10\';"]', 'expected_data': "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'F', 'tradeMsg': '浜ゆ槗澶辫触', 'errMsg': '申请成功', 'tradeCode': '0001', 'exObjFields': {}, 'key': None}", 'affected_caseId': None, 'compare_type': 0, 'wait_time': None}, {'case_id': 209, 'api_name': '【组合卖出】月月盈产品开放日卖出申请', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.ProductCoreTradeService', 'method': 'sellToVacco', 'request_data': '{"refercapno":"5B569C0E0225bc08",\n        "sellCouponId":"5B569A9A006Abc55",\n        "reemFlag":"0",\n        "selltype":1,\n        "periodic":"true",\n        "mixProd":"true",\n        "bigVCustno":"1503136940",\n        "honourFlag":"1",\n        "newFlag":"0",\n        "partPayment":"false",\n        "subquty":"10.00",\n        "feetp":"07",\n        "feemode":"1",\n        "feevalue":"0.0",\n        "serialno":"201808311626320710hS",\n        "custno":"1538943811",\n        "apkind":"014",\n        "subapkind":"014001",\n        "apdt":"20180831",\n        "aptm":"164500",\n        "workdate":"20180831",\n        "tradeacco":"000621718538943814",\n        "taaccountid":"475A7FB19598436383",\n        "tano":"47",\n        "productid":"8802",\n        "sharetype":"A",\n        "accptmd":"1",\n        "branchcode":"247000",\n        "distributorcode":"247"}', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'201808311626320710hS\';"]', 'expected_data': "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}", 'affected_caseId': 211, 'compare_type': 0, 'wait_time': None}, {'case_id': 210, 'api_name': '【调用轮询接口处理交易请求】', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.ProductCoreTradeService', 'method': 'tradeContinueTask', 'request_data': '""', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'201808311626320710hS\';"]', 'expected_data': None, 'affected_caseId': None, 'compare_type': None, 'wait_time': 1}, {'case_id': 211, 'api_name': '【卖出后续接口】月月盈产品开放日卖出成功', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.ProductCoreTradeService', 'method': 'tradeContinue', 'request_data': '{"serialno":"201808311540590277bT","isSend":"1",\'extFields\':{"errCode":"0000", "errMsg":"交易成功", "tranSt":"Y"}}', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'201808311540590277bT\' AND APPLYST=\'Y\'AND TRANSST=\'Y\' AND PAYST=\'Y\';","SELECT * from cts.cts_tradequtychg WHERE REFERNO=\'201808311540590277bT\' AND PRODUCTID=\'9999\'AND CHANGEQUTY=\'9.9\';"]', 'expected_data': "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功！', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}", 'affected_caseId': None, 'compare_type': 0, 'wait_time': None}, {'case_id': 212, 'api_name': '【组合卖出】月月盈产品开放日卖出申请', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.ProductCoreTradeService', 'method': 'sellToVacco', 'request_data': '{"refercapno":"5B569C0E0225bc08",\n        "sellCouponId":"5B569A9A006Abc55",\n        "reemFlag":"0",\n        "selltype":1,\n        "periodic":"true",\n        "mixProd":"true",\n        "bigVCustno":"1503136940",\n        "honourFlag":"1",\n        "newFlag":"0",\n        "partPayment":"false",\n        "subquty":"10.00",\n        "feetp":"07",\n        "feemode":"1",\n        "feevalue":"0.0",\n        "serialno":"201808311626320133tc",\n        "custno":"1538943811",\n        "apkind":"014",\n        "subapkind":"014001",\n        "apdt":"20180831",\n        "aptm":"164500",\n        "workdate":"20180831",\n        "tradeacco":"000621718538943814",\n        "taaccountid":"475A7FB19598436383",\n        "tano":"47",\n        "productid":"8802",\n        "sharetype":"A",\n        "accptmd":"1",\n        "branchcode":"247000",\n        "distributorcode":"247"}', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'201808311626320133tc\';"]', 'expected_data': "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}", 'affected_caseId': 215, 'compare_type': 0, 'wait_time': None}, {'case_id': 213, 'api_name': '【调用轮询接口处理交易请求】', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.ProductCoreTradeService', 'method': 'tradeContinueTask', 'request_data': '""', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'201808311626320133tc\';"]', 'expected_data': None, 'affected_caseId': None, 'compare_type': None, 'wait_time': 1}, {'case_id': 214, 'api_name': '【卖出后续接口】月月盈产品开放日卖出失败', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.ProductCoreTradeService', 'method': 'tradeContinue', 'request_data': '{"serialno":"${}","isSend":"1",\'extFields\':{"errCode":"0000", "errMsg":"交易成功", "tranSt":"Y"}}', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'${}\' AND APPLYST=\'Y\'AND TRANSST=\'Y\' AND PAYST=\'Y\';","SELECT * from cts.cts_tradequtychg WHERE REFERNO=\'${}\' AND PRODUCTID=\'8901\'AND CHANGEQUTY=\'10\';"]', 'expected_data': "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'F', 'tradeMsg': '浜ゆ槗澶辫触', 'errMsg': '申请成功', 'tradeCode': '0001', 'exObjFields': {}, 'key': None}", 'affected_caseId': None, 'compare_type': 0, 'wait_time': None}, {'case_id': 215, 'api_name': '【组合卖出】月月盈产品不在开放日卖出', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.ProductCoreTradeService', 'method': 'sellToVacco', 'request_data': '{"refercapno":"5B569C0E0225bc08",\n        "sellCouponId":"5B569A9A006Abc55",\n        "reemFlag":"0",\n        "selltype":1,\n        "periodic":"true",\n        "mixProd":"true",\n        "bigVCustno":"1503136940",\n        "honourFlag":"1",\n        "newFlag":"0",\n        "partPayment":"false",\n        "subquty":"10.00",\n        "feetp":"07",\n        "feemode":"1",\n        "feevalue":"0.0",\n        "serialno":"201808311626320824Lt",\n        "custno":"1538943811",\n        "apkind":"014",\n        "subapkind":"014001",\n        "apdt":"20170820",\n        "aptm":"164500",\n        "workdate":"20170820",\n        "tradeacco":"000621718538943814",\n        "taaccountid":"475A7FB19598436383",\n        "tano":"47",\n        "productid":"8802",\n        "sharetype":"A",\n        "accptmd":"1",\n        "branchcode":"247000",\n        "distributorcode":"247"}', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'201808311626320824Lt\';"]', 'expected_data': "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'F', 'tradeMsg': '客户持有的该产品不在开放日之内', 'errMsg': '申请成功', 'tradeCode': 'B006', 'exObjFields': {}, 'key': None}", 'affected_caseId': None, 'compare_type': 0, 'wait_time': None}, {'case_id': 216, 'api_name': '【组合卖出】季季升产品开放日卖出申请', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.ProductCoreTradeService', 'method': 'sellToVacco', 'request_data': '{"refercapno":"5B57DD261DFCbc4E",\n        "reemFlag":"0",\n        "selltype":1,\n        "periodic":"true",\n        "mixProd":"true",\n        "bigVCustno":"1503257540",\n        "honourFlag":"1",\n        "newFlag":"0",\n        "partPayment":"false",\n        "subquty":"10.00",\n        "feetp":"07",\n        "feemode":"1",\n        "feevalue":"0.0",\n        "serialno":"201808311626320740qI",\n        "custno":"1538943811",\n        "apkind":"014",\n        "subapkind":"014001",\n        "apdt":"20180831",\n        "aptm":"164500",\n        "workdate":"20180831",\n        "tradeacco":"000621718538943814",\n        "taaccountid":"475A7FB19598436383",\n        "tano":"47",\n        "productid":"8901",\n        "sharetype":"A",\n        "accptmd":"1",\n        "branchcode":"247000",\n        "distributorcode":"247"}', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'201808311626320740qI\';"]', 'expected_data': "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}", 'affected_caseId': 218, 'compare_type': 0, 'wait_time': None}, {'case_id': 217, 'api_name': '【调用轮询接口处理交易请求】', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.ProductCoreTradeService', 'method': 'tradeContinueTask', 'request_data': '""', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'201808311626320740qI\';"]', 'expected_data': None, 'affected_caseId': None, 'compare_type': None, 'wait_time': 1}, {'case_id': 218, 'api_name': '【卖出后续接口】季季升产品开放日卖出成功', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.ProductCoreTradeService', 'method': 'tradeContinue', 'request_data': '{"serialno":"20180831154059010bC","isSend":"1",\'extFields\':{"errCode":"0000", "errMsg":"交易成功", "tranSt":"Y"}}', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'20180831154059010bC\' AND APPLYST=\'Y\'AND TRANSST=\'Y\' AND PAYST=\'Y\';","SELECT * from cts.cts_tradequtychg WHERE REFERNO=\'20180831154059010bC\' AND PRODUCTID=\'9999\'AND CHANGEQUTY=\'9.9\';"]', 'expected_data': "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功！', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}", 'affected_caseId': None, 'compare_type': 0, 'wait_time': None}, {'case_id': 219, 'api_name': '【组合卖出】季季升产品开放日卖出申请', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.ProductCoreTradeService', 'method': 'sellToVacco', 'request_data': '{"refercapno":"5B57DD261DFCbc4E",\n        "reemFlag":"0",\n        "selltype":1,\n        "periodic":"true",\n        "mixProd":"true",\n        "bigVCustno":"1503257540",\n        "honourFlag":"1",\n        "newFlag":"0",\n        "partPayment":"false",\n        "subquty":"10.00",\n        "feetp":"07",\n        "feemode":"1",\n        "feevalue":"0.0",\n        "serialno":"201808311626320846jT",\n        "custno":"1538943811",\n        "apkind":"014",\n        "subapkind":"014001",\n        "apdt":"20180831",\n        "aptm":"164500",\n        "workdate":"20180831",\n        "tradeacco":"000621718538943814",\n        "taaccountid":"475A7FB19598436383",\n        "tano":"47",\n        "productid":"8901",\n        "sharetype":"A",\n        "accptmd":"1",\n        "branchcode":"247000",\n        "distributorcode":"247"}', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'201808311626320846jT\';"]', 'expected_data': "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}", 'affected_caseId': 221, 'compare_type': 0, 'wait_time': None}, {'case_id': 220, 'api_name': '【调用轮询接口处理交易请求】', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.ProductCoreTradeService', 'method': 'tradeContinueTask', 'request_data': '""', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'201808311626320846jT\';"]', 'expected_data': None, 'affected_caseId': None, 'compare_type': None, 'wait_time': 1}, {'case_id': 221, 'api_name': '【卖出后续接口】季季升产品开放日卖出失败', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.ProductCoreTradeService', 'method': 'tradeContinue', 'request_data': '{"serialno":"201808311540590445Uc","isSend":"1",\'extFields\':{"errCode":"0000", "errMsg":"交易成功", "tranSt":"Y"}}', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'201808311540590445Uc\' AND APPLYST=\'Y\'AND TRANSST=\'Y\' AND PAYST=\'Y\';","SELECT * from cts.cts_tradequtychg WHERE REFERNO=\'201808311540590445Uc\' AND PRODUCTID=\'8901\'AND CHANGEQUTY=\'10\';"]', 'expected_data': "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'F', 'tradeMsg': '浜ゆ槗澶辫触', 'errMsg': '申请成功', 'tradeCode': '0001', 'exObjFields': {}, 'key': None}", 'affected_caseId': None, 'compare_type': 0, 'wait_time': None}, {'case_id': 222, 'api_name': '【组合卖出】季季升产品不在开放日卖出', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.ProductCoreTradeService', 'method': 'sellToVacco', 'request_data': '{"refercapno":"5B57DD261DFCbc4E",\n        "reemFlag":"0",\n        "selltype":1,\n        "periodic":"true",\n        "mixProd":"true",\n        "bigVCustno":"1503257540",\n        "honourFlag":"1",\n        "newFlag":"0",\n        "partPayment":"false",\n        "subquty":"10.00",\n        "feetp":"07",\n        "feemode":"1",\n        "feevalue":"0.0",\n        "serialno":"201808311626320677LS",\n        "custno":"1538943811",\n        "apkind":"014",\n        "subapkind":"014001",\n        "apdt":"20170820",\n        "aptm":"164500",\n        "workdate":"20170820",\n        "tradeacco":"000621718538943814",\n        "taaccountid":"475A7FB19598436383",\n        "tano":"47",\n        "productid":"8901",\n        "sharetype":"A",\n        "accptmd":"1",\n        "branchcode":"247000",\n        "distributorcode":"247"}', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'201808311626320677LS\';"]', 'expected_data': "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'F', 'tradeMsg': '客户持有的该产品不在开放日之内', 'errMsg': '申请成功', 'tradeCode': 'B006', 'exObjFields': {}, 'key': None}", 'affected_caseId': None, 'compare_type': 0, 'wait_time': None}, {'case_id': 223, 'api_name': '【组合卖出】四季甄选产品开放日卖出申请', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.ProductCoreTradeService', 'method': 'sellToVacco', 'request_data': '{"refercapno":"5B7A57C6008EbcA4",\n        "reemFlag":"0",\n        "selltype":1,\n        "periodic":"true",\n        "mixProd":"true",\n        "bigVCustno":"1597219235",\n        "honourFlag":"1",\n        "newFlag":"0",\n        "partPayment":"false",\n        "subquty":"10.00",\n        "feetp":"07",\n        "feemode":"1",\n        "feevalue":"0.0",\n        "serialno":"201808311626320615RH",\n        "custno":"1538943811",\n        "apkind":"014",\n        "subapkind":"014001",\n        "apdt":"20180831",\n        "aptm":"164500",\n        "workdate":"20180831",\n        "tradeacco":"000621718538943814",\n        "taaccountid":"475A7FB19598436383",\n        "tano":"47",\n        "productid":"8904",\n        "sharetype":"A",\n        "accptmd":"1",\n        "branchcode":"247000",\n        "distributorcode":"247"}', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'201808311626320615RH\';"]', 'expected_data': "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}", 'affected_caseId': 225, 'compare_type': 0, 'wait_time': None}, {'case_id': 224, 'api_name': '【调用轮询接口处理交易请求】', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.ProductCoreTradeService', 'method': 'tradeContinueTask', 'request_data': '""', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'201808311626320615RH\';"]', 'expected_data': None, 'affected_caseId': None, 'compare_type': None, 'wait_time': 1}, {'case_id': 225, 'api_name': '【卖出后续接口】四季甄选产品开放日卖出成功', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.ProductCoreTradeService', 'method': 'tradeContinue', 'request_data': '{"serialno":"20180831154059072Lw","isSend":"1",\'extFields\':{"errCode":"0000", "errMsg":"交易成功", "tranSt":"Y"}}', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'20180831154059072Lw\' AND APPLYST=\'Y\'AND TRANSST=\'Y\' AND PAYST=\'Y\';","SELECT * from cts.cts_tradequtychg WHERE REFERNO=\'20180831154059072Lw\' AND PRODUCTID=\'9999\'AND CHANGEQUTY=\'9.9\';"]', 'expected_data': "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功！', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}", 'affected_caseId': None, 'compare_type': 0, 'wait_time': None}, {'case_id': 226, 'api_name': '【组合卖出】四季甄选产品开放日卖出申请', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.ProductCoreTradeService', 'method': 'sellToVacco', 'request_data': '{"refercapno":"5B7A57C6008EbcA4",\n        "reemFlag":"0",\n        "selltype":1,\n        "periodic":"true",\n        "mixProd":"true",\n        "bigVCustno":"1597219235",\n        "honourFlag":"1",\n        "newFlag":"0",\n        "partPayment":"false",\n        "subquty":"10.00",\n        "feetp":"07",\n        "feemode":"1",\n        "feevalue":"0.0",\n        "serialno":"201808311626320667uN",\n        "custno":"1538943811",\n        "apkind":"014",\n        "subapkind":"014001",\n        "apdt":"20180831",\n        "aptm":"164500",\n        "workdate":"20180831",\n        "tradeacco":"000621718538943814",\n        "taaccountid":"475A7FB19598436383",\n        "tano":"47",\n        "productid":"8904",\n        "sharetype":"A",\n        "accptmd":"1",\n        "branchcode":"247000",\n        "distributorcode":"247"}', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'201808311626320667uN\';"]', 'expected_data': "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}", 'affected_caseId': 228, 'compare_type': 0, 'wait_time': None}, {'case_id': 227, 'api_name': '【调用轮询接口处理交易请求】', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.ProductCoreTradeService', 'method': 'tradeContinueTask', 'request_data': '""', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'201808311626320667uN\';"]', 'expected_data': None, 'affected_caseId': None, 'compare_type': None, 'wait_time': 1}, {'case_id': 228, 'api_name': '【卖出后续接口】四季甄选产品开放日卖出失败', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.ProductCoreTradeService', 'method': 'tradeContinue', 'request_data': '{"serialno":"201808311540590157Fn","isSend":"1",\'extFields\':{"errCode":"0000", "errMsg":"交易成功", "tranSt":"Y"}}', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'201808311540590157Fn\' AND APPLYST=\'Y\'AND TRANSST=\'Y\' AND PAYST=\'Y\';","SELECT * from cts.cts_tradequtychg WHERE REFERNO=\'201808311540590157Fn\' AND PRODUCTID=\'8904\'AND CHANGEQUTY=\'10\';"]', 'expected_data': "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'F', 'tradeMsg': '浜ゆ槗澶辫触', 'errMsg': '申请成功', 'tradeCode': '0001', 'exObjFields': {}, 'key': None}", 'affected_caseId': None, 'compare_type': 0, 'wait_time': None}, {'case_id': 229, 'api_name': '【组合卖出】四季甄选产品不在开放日卖出', 'ip': '120.26.205.204', 'port': 17006, 'interface': 'com.wt.cts.service.ProductCoreTradeService', 'method': 'sellToVacco', 'request_data': '{"refercapno":"5B7A57C6008EbcA4",\n        "reemFlag":"0",\n        "selltype":1,\n        "periodic":"true",\n        "mixProd":"true",\n        "bigVCustno":"1597219235",\n        "honourFlag":"1",\n        "newFlag":"0",\n        "partPayment":"false",\n        "subquty":"10.00",\n        "feetp":"07",\n        "feemode":"1",\n        "feevalue":"0.0",\n        "serialno":"201808311626320211Ne",\n        "custno":"1538943811",\n        "apkind":"014",\n        "subapkind":"014001",\n        "apdt":"20170820",\n        "aptm":"164500",\n        "workdate":"20170820",\n        "tradeacco":"000621718538943814",\n        "taaccountid":"475A7FB19598436383",\n        "tano":"47",\n        "productid":"8904",\n        "sharetype":"A",\n        "accptmd":"1",\n        "branchcode":"247000",\n        "distributorcode":"247"}', 'execute_sql': '["SELECT * from cts.cts_traderequest WHERE SERIALNO=\'201808311626320211Ne\';"]', 'expected_data': "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'F', 'tradeMsg': '客户持有的该产品不在开放日之内', 'errMsg': '申请成功', 'tradeCode': 'B006', 'exObjFields': {}, 'key': None}", 'affected_caseId': None, 'compare_type': 0, 'wait_time': None}, {'case_id': 230, 'api_name': '【账户注册】企业客户有推荐人成功注册', 'ip': '120.26.205.32', 'port': 17005, 'interface': 'com.wt.cif.service.CifCustService', 'method': 'openAccount', 'request_data': '{"serialno":"20180831162632098YM",\n        "invTp":"1",\n        "mobileNo":"13760200147",\n        "loginPasswd":"202cb962ac59075b964b07152d234b70",\n        "phoneCode":"1111",\n        "refererMobile":"15021996508",\n        "accofrom":"1",\n        "distributorCode":"247",\n        "branchcode":"24700",\n        "email":"744700813@qq.com",\n        "oneRecommend":"1"\n}', 'execute_sql': '["select * from cif.cif_custinfo WHERE MOBILENO=\'13760200147\';"]', 'expected_data': "{.*'errCode': '0000', 'errMsg': '交易成功'.* 'status': 'Y'}", 'affected_caseId': None, 'compare_type': 1, 'wait_time': None}, {'case_id': 231, 'api_name': '【账户注册】个人客户无推荐人成功注册', 'ip': '120.26.205.32', 'port': 17005, 'interface': 'com.wt.cif.service.CifCustService', 'method': 'openAccount', 'request_data': '{"serialno":"201808311626320892qU",\n        "invTp":"2",\n        "mobileNo":"13760200148",\n        "loginPasswd":"202cb962ac59075b964b07152d234b70",\n        "phoneCode":"1111",\n        "accofrom":"1",\n        "distributorCode":"247",\n        "branchcode":"24700",\n        "email":"744700813@qq.com",\n        "oneRecommend":"0"\n}', 'execute_sql': '["select * from cif.cif_custinfo WHERE MOBILENO=\'13760200148\';"]', 'expected_data': "{.*'errCode': '0000', 'errMsg': '交易成功'.* 'status': 'Y'}", 'affected_caseId': None, 'compare_type': 1, 'wait_time': None}, {'case_id': 232, 'api_name': '【账户注册】注册手机号为空', 'ip': '120.26.205.32', 'port': 17005, 'interface': 'com.wt.cif.service.CifCustService', 'method': 'openAccount', 'request_data': '{"serialno":"201808311626320864Em",\n        "invTp":"1",\n        "mobileNo":"",\n        "loginPasswd":"202cb962ac59075b964b07152d234b70",\n        "phoneCode":"1111",\n        "refererMobile":"15021996508",\n        "accofrom":"1",\n        "distributorCode":"247",\n        "branchcode":"24700",\n        "email":"744700813@qq.com",\n        "oneRecommend":"1"\n}', 'execute_sql': '""', 'expected_data': "{'extFields': {}, 'custNo': None, 'headImgUrl': None, 'openId': None, 'nickName': None, 'errCode': 'A030', 'errMsg': '开户入参验证参数为空[手机号码]', 'mobileNo': None, 'key': None, 'token': None, 'status': 'F'}", 'affected_caseId': None, 'compare_type': 0, 'wait_time': None}, {'case_id': 233, 'api_name': '【账户注册】登录密码为空', 'ip': '120.26.205.32', 'port': 17005, 'interface': 'com.wt.cif.service.CifCustService', 'method': 'openAccount', 'request_data': '{"serialno":"201808311626320878vm",\n        "invTp":"1",\n        "mobileNo":"13760200149",\n        "loginPasswd":"",\n        "phoneCode":"1111",\n        "refererMobile":"15021996508",\n        "accofrom":"1",\n        "distributorCode":"247",\n        "branchcode":"24700",\n        "email":"744700813@qq.com",\n        "oneRecommend":"1"\n}', 'execute_sql': '""', 'expected_data': "{'extFields': {}, 'custNo': None, 'headImgUrl': None, 'openId': None, 'nickName': None, 'errCode': 'A050', 'errMsg': '开户入参验证参数为空[登录密码]', 'mobileNo': None, 'key': None, 'token': None, 'status': 'F'}", 'affected_caseId': None, 'compare_type': 0, 'wait_time': None}, {'case_id': 234, 'api_name': '【账户注册】注册手机号少于11位', 'ip': '120.26.205.32', 'port': 17005, 'interface': 'com.wt.cif.service.CifCustService', 'method': 'openAccount', 'request_data': '{"serialno":"201808311626320623xL",\n        "invTp":"1",\n        "mobileNo":"1502199644",\n        "loginPasswd":"202cb962ac59075b964b07152d234b70",\n        "phoneCode":"1111",\n        "refererMobile":"15021996508",\n        "accofrom":"1",\n        "distributorCode":"247",\n        "branchcode":"24700",\n        "email":"744700813@qq.com",\n        "oneRecommend":"1"\n}', 'execute_sql': '""', 'expected_data': "{'extFields': {}, 'custNo': None, 'headImgUrl': None, 'openId': None, 'nickName': None, 'errCode': 'A013', 'errMsg': '开户入参验证参数错误[手机号码]', 'mobileNo': None, 'key': None, 'token': None, 'status': 'F'}", 'affected_caseId': None, 'compare_type': 0, 'wait_time': None}, {'case_id': 235, 'api_name': '【账户注册】注册手机号大于11位', 'ip': '120.26.205.32', 'port': 17005, 'interface': 'com.wt.cif.service.CifCustService', 'method': 'openAccount', 'request_data': '{"serialno":"201808311626320466qi",\n        "invTp":"1",\n        "mobileNo":"150219964489",\n        "loginPasswd":"202cb962ac59075b964b07152d234b70",\n        "phoneCode":"1111",\n        "refererMobile":"15021996508",\n        "accofrom":"1",\n        "distributorCode":"247",\n        "branchcode":"24700",\n        "email":"744700813@qq.com",\n        "oneRecommend":"1"\n}', 'execute_sql': '""', 'expected_data': "{'extFields': {}, 'custNo': None, 'headImgUrl': None, 'openId': None, 'nickName': None, 'errCode': 'A013', 'errMsg': '开户入参验证参数错误[手机号码]', 'mobileNo': None, 'key': None, 'token': None, 'status': 'F'}", 'affected_caseId': None, 'compare_type': 0, 'wait_time': None}, {'case_id': 236, 'api_name': '【账户注册】注册手机号含特殊字符', 'ip': '120.26.205.32', 'port': 17005, 'interface': 'com.wt.cif.service.CifCustService', 'method': 'openAccount', 'request_data': '{"serialno":"20180831162632051Ws",\n        "invTp":"1",\n        "mobileNo":"15021996@44",\n        "loginPasswd":"202cb962ac59075b964b07152d234b70",\n        "phoneCode":"1111",\n        "refererMobile":"15021996508",\n        "accofrom":"1",\n        "distributorCode":"247",\n        "branchcode":"24700",\n        "email":"744700813@qq.com",\n        "oneRecommend":"1"\n}', 'execute_sql': '""', 'expected_data': "{'extFields': {}, 'custNo': None, 'headImgUrl': None, 'openId': None, 'nickName': None, 'errCode': 'A013', 'errMsg': '开户入参验证参数错误[手机号码]', 'mobileNo': None, 'key': None, 'token': None, 'status': 'F'}", 'affected_caseId': None, 'compare_type': 0, 'wait_time': None}, {'case_id': 237, 'api_name': '【账户注册】注册手机号含空格', 'ip': '120.26.205.32', 'port': 17005, 'interface': 'com.wt.cif.service.CifCustService', 'method': 'openAccount', 'request_data': '{"serialno":"201808311626320201Xm",\n        "invTp":"1",\n        "mobileNo":"15021996 44",\n        "loginPasswd":"202cb962ac59075b964b07152d234b70",\n        "phoneCode":"1111",\n        "refererMobile":"15021996508",\n        "accofrom":"1",\n        "distributorCode":"247",\n        "branchcode":"24700",\n        "email":"744700813@qq.com",\n        "oneRecommend":"1"\n}', 'execute_sql': '""', 'expected_data': "{'extFields': {}, 'custNo': None, 'headImgUrl': None, 'openId': None, 'nickName': None, 'errCode': 'A013', 'errMsg': '开户入参验证参数错误[手机号码]', 'mobileNo': None, 'key': None, 'token': None, 'status': 'F'}", 'affected_caseId': None, 'compare_type': 0, 'wait_time': None}, {'case_id': 238, 'api_name': '【账户注册】用户已注册', 'ip': '120.26.205.32', 'port': 17005, 'interface': 'com.wt.cif.service.CifCustService', 'method': 'openAccount', 'request_data': '{"serialno":"201808311626320971QU",\n        "invTp":"1",\n        "mobileNo":"13760200147",\n        "loginPasswd":"202cb962ac59075b964b07152d234b70",\n        "phoneCode":"1111",\n        "refererMobile":"15021996508",\n        "accofrom":"1",\n        "distributorCode":"247",\n        "branchcode":"24700",\n        "email":"744700813@qq.com",\n        "oneRecommend":"1"\n}', 'execute_sql': '""', 'expected_data': "{'extFields': {}, 'custNo': None, 'headImgUrl': None, 'openId': None, 'nickName': None, 'errCode': 'B011', 'errMsg': '开户业务验证失败[该手机号已注册]', 'mobileNo': None, 'key': None, 'token': None, 'status': 'F'}", 'affected_caseId': None, 'compare_type': 0, 'wait_time': None}, {'case_id': 239, 'api_name': '【账户登录】账户官网登录成功', 'ip': '120.26.205.32', 'port': 17005, 'interface': 'com.wt.cif.service.CifPassportService', 'method': 'passportLogin', 'request_data': '{"loginName":"13760200147",\n        "loginPwd":"202cb962ac59075b964b07152d234b70",\n        "accoFrom":"1",\n}', 'execute_sql': '""', 'expected_data': "{.*'errMsg': '交易成功'.* 'errCode': '0000'.*'status': 'Y'}", 'affected_caseId': None, 'compare_type': 1, 'wait_time': None}, {'case_id': 240, 'api_name': '【账户登录】账户柜台登录成功', 'ip': '120.26.205.32', 'port': 17005, 'interface': 'com.wt.cif.service.CifPassportService', 'method': 'passportLogin', 'request_data': '{"loginName":"13760200148",\n        "loginPwd":"202cb962ac59075b964b07152d234b70",\n        "accoFrom":"1",\n}', 'execute_sql': '""', 'expected_data': "{.*'errMsg': '交易成功'.* 'errCode': '0000'.*'status': 'Y'}", 'affected_caseId': None, 'compare_type': 1, 'wait_time': None}, {'case_id': 241, 'api_name': '【账户登录】账户手机登录成功', 'ip': '120.26.205.32', 'port': 17005, 'interface': 'com.wt.cif.service.CifPassportService', 'method': 'passportLogin', 'request_data': '{"loginName":"13760200147",\n        "loginPwd":"202cb962ac59075b964b07152d234b70",\n        "accoFrom":"1",\n}', 'execute_sql': '""', 'expected_data': "{.*'errMsg': '交易成功'.* 'errCode': '0000'.*'status': 'Y'}", 'affected_caseId': None, 'compare_type': 1, 'wait_time': None}, {'case_id': 242, 'api_name': '【账户登录】账户企业版登录成功', 'ip': '120.26.205.32', 'port': 17005, 'interface': 'com.wt.cif.service.CifPassportService', 'method': 'passportLogin', 'request_data': '{"loginName":"13760200147",\n        "loginPwd":"202cb962ac59075b964b07152d234b70",\n        "accoFrom":"1",\n}', 'execute_sql': '""', 'expected_data': "{.*'errMsg': '交易成功'.* 'errCode': '0000'.*'status': 'Y'}", 'affected_caseId': None, 'compare_type': 1, 'wait_time': None}, {'case_id': 243, 'api_name': '【账户登录】账户微信登录成功', 'ip': '120.26.205.32', 'port': 17005, 'interface': 'com.wt.cif.service.CifPassportService', 'method': 'passportLogin', 'request_data': '{"loginName":"13760200147",\n        "loginPwd":"202cb962ac59075b964b07152d234b70",\n        "accoFrom":"1",\n}', 'execute_sql': '""', 'expected_data': "{.*'errMsg': '交易成功'.* 'errCode': '0000'.*'status': 'Y'}", 'affected_caseId': None, 'compare_type': 1, 'wait_time': None}, {'case_id': 244, 'api_name': '【账户登录】用户名为空', 'ip': '120.26.205.32', 'port': 17005, 'interface': 'com.wt.cif.service.CifPassportService', 'method': 'passportLogin', 'request_data': '{"loginName":"",\n        "loginPwd":"202cb962ac59075b964b07152d234b70",\n        "accoFrom":"1",\n}', 'execute_sql': '""', 'expected_data': "{'custNo': None, 'openId': None, 'nickName': None, 'loginpwdErrMax': 0, 'errMsg': '通行证登陆入参验证参数为空[登陆账号]', 'mobileNo': None, 'loginpwdErr': 0, 'token': None, 'extFields': {}, 'headImgUrl': None, 'invtp': None, 'errCode': 'A112', 'key': None, 'status': 'F'}", 'affected_caseId': None, 'compare_type': 0, 'wait_time': None}, {'case_id': 245, 'api_name': '【账户登录】密码为空', 'ip': '120.26.205.32', 'port': 17005, 'interface': 'com.wt.cif.service.CifPassportService', 'method': 'passportLogin', 'request_data': '{"loginName":"13760200147",\n        "loginPwd":"",\n        "accoFrom":"1",\n}', 'execute_sql': '""', 'expected_data': "{'custNo': None, 'openId': None, 'nickName': None, 'loginpwdErrMax': 0, 'errMsg': '通行证登陆入参验证参数为空[登陆密码]', 'mobileNo': None, 'loginpwdErr': 0, 'token': None, 'extFields': {}, 'headImgUrl': None, 'invtp': None, 'errCode': 'A113', 'key': None, 'status': 'F'}", 'affected_caseId': None, 'compare_type': 0, 'wait_time': None}, {'case_id': 246, 'api_name': '【账户登录】用户名错误', 'ip': '120.26.205.32', 'port': 17005, 'interface': 'com.wt.cif.service.CifPassportService', 'method': 'passportLogin', 'request_data': '{"loginName":"13760200011",\n        "loginPwd":"202cb962ac59075b964b07152d234b70",\n        "accoFrom":"1",\n}', 'execute_sql': '""', 'expected_data': "{'custNo': None, 'openId': None, 'nickName': None, 'loginpwdErrMax': 0, 'errMsg': '业务验证失败[客户不存在]', 'mobileNo': None, 'loginpwdErr': 0, 'token': None, 'extFields': {}, 'headImgUrl': None, 'invtp': None, 'errCode': 'B023', 'key': None, 'status': 'F'}", 'affected_caseId': None, 'compare_type': 0, 'wait_time': None}, {'case_id': 247, 'api_name': '【账户登录】密码错误', 'ip': '120.26.205.32', 'port': 17005, 'interface': 'com.wt.cif.service.CifPassportService', 'method': 'passportLogin', 'request_data': '{"loginName":"13760200147",\n        "loginPwd":"202cb962ac59075b964b07152d23",\n        "accoFrom":"1",\n}', 'execute_sql': '""', 'expected_data': "{'custNo': None, 'openId': None, 'nickName': None, 'loginpwdErrMax': 5, 'errMsg': '通行证登陆业务验证失败[登录密码不匹配]', 'mobileNo': None, 'loginpwdErr': 1, 'token': None, 'extFields': {}, 'headImgUrl': None, 'invtp': None, 'errCode': 'A003', 'key': None, 'status': 'F'}", 'affected_caseId': None, 'compare_type': 0, 'wait_time': None}]
 Fri, 31 Aug 2018 16:26:33  INFO myMysql.py connect_mysql [ line:54 ] 数据库连接成功！！
 Fri, 31 Aug 2018 16:26:33  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:26:33  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【充值】102工行充值
 Fri, 31 Aug 2018 16:26:33  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.VaccoCoreTradeService
 Fri, 31 Aug 2018 16:26:33  INFO test_api.py test_api [ line:39 ] 接口请求method:recharge
 Fri, 31 Aug 2018 16:26:33  INFO test_api.py test_api [ line:40 ] 接口请求data:{
 "subamt":"5000",
 "paymodel":"05",
 "channel":"JX",
 "bankid":"205B0CF78550959969",
 "bankno":"102",
 "bankacco":"6222620110038594231",
 "serialno":"201808311626310260xJ",
 "custno":"1604578759",
 "apkind":"922",
 "subapkind":"922001",
 "apdt":"20180516",
 "aptm":"093540",
 "workdate":"20180516",
 "tradeacco":"001035098604578762",
 "taaccountid":"475B0CB66D40432285",
 "tano":"47",
 "sharetype":"A",
 "accptmd":"1",
 "branchcode":"247000",
 "distributorcode":"247",
"extFields":{"rechargeFlag":"1"}
}
 Fri, 31 Aug 2018 16:26:33  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {'retUrl': None, 'seqNo': '108289', 'txTime': '093540', 'channel': '000002', 'sign': 'EY/trQkpT6gyn5a/0glCgGs0u9YW4QqVUa5ykL8+M4gALwkmFn2nsVQ3hz4JDGV1U0Zvk2uRnV1ruDU7lTnx4J9J7UsMT8AHjBk2C1QGVNQwNxXY+XK8GlTn76FIXW7cXSRUsOd9dBM4gSJSrgQg6z+HuDTXvjNNGo+llpf3L+09f5+1BXdq/Yi44lAyxYSo9NVAAMGmNHyAey4UX4HkAbvHdFoQi8KsbyfUbOBUNKAXDP2H4MC+6l+73IoxOsCb7vfQ93BUZ/svmvrJjT26qZi9Q3ZvaCedYHAgNEfOfPqKqFHiJfDuvTXHDUgTUV8RQg0aD/ViDZbeE0keSkIrWg==', 'cardNo': '6228484555533333333', 'idNo': '421023198705019116', 'forgotPwdUrl': None, 'userIP': None, 'currency': '156', 'instCode': '00920001', 'successfulUrl': None, 'authSeq': None, 'bankCode': '30050000', 'idType': '01', 'mobile': '13759947589', 'JxUrl': 'https://access.credit2go.cn/escrow/p2p/page/directRechargePage', 'authFlag': None, 'version': '10', 'txAmount': '5000', 'accountId': '6212462170000078011', 'name': '对对对', 'notifyUrl': 'http://www5.91wutong.com/open/jixin/directRechargePageNotifyUrl.htm?channel=yhcg', 'txCode': 'directRechargePage', 'txDate': '20180516'}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:26:33  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:{.*'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功'.*}
 Fri, 31 Aug 2018 16:26:33  INFO test_api.py test_api [ line:65 ] =====开始比对检验返回结果=======
 Fri, 31 Aug 2018 16:26:33  INFO test_api.py test_api [ line:66 ] 正则表达式匹配模式
 Fri, 31 Aug 2018 16:26:33  INFO test_api.py test_api [ line:69 ] 结果匹配，测试用例通过
 Fri, 31 Aug 2018 16:26:33  INFO test_api.py test_api [ line:81 ] 数据库里存在符合预期条件的数据,测试通过:()
 Fri, 31 Aug 2018 16:26:33  INFO test_api.py test_api [ line:84 ] ================结束一次接口请求===========
 Fri, 31 Aug 2018 16:26:33  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:26:33  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【充值后续】102工行充值成功
 Fri, 31 Aug 2018 16:26:33  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.ProductCoreTradeService
 Fri, 31 Aug 2018 16:26:33  INFO test_api.py test_api [ line:39 ] 接口请求method:tradeContinue
 Fri, 31 Aug 2018 16:26:33  INFO test_api.py test_api [ line:40 ] 接口请求data:{'serialno':'201808311540580752Ts','extFields':{'errCode':'0000', 'errMsg':'交易成功', 'tranSt':'Y'}}
 Fri, 31 Aug 2018 16:26:33  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {}, 'errCode': 'Q015', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '查询交易原单结果为空或失败', 'tradeCode': None, 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:26:33  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功！', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:26:33  INFO test_api.py test_api [ line:56 ] =====开始比对检验返回结果=======
 Fri, 31 Aug 2018 16:26:33  INFO test_api.py test_api [ line:57 ] 全值匹配模式
 Fri, 31 Aug 2018 16:26:33  ERROR test_api.py test_api [ line:62 ] 全值结果比对失败原因为："{'extFields': {}, 'errCode': 'Q015', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '查询交易原单结果为空或失败', 'tradeCode': None, 'exObjFields': {}, 'key': None}" not found in "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功！', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}"
Traceback (most recent call last):
  File "H:\python3_apiTest\TestCases\test_api.py", line 59, in test_api
    self.assertIn(str(res),case_data["expected_data"])
  File "F:\python36\lib\unittest\case.py", line 1089, in assertIn
    self.fail(self._formatMessage(msg, standardMsg))
  File "F:\python36\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: "{'extFields': {}, 'errCode': 'Q015', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '查询交易原单结果为空或失败', 'tradeCode': None, 'exObjFields': {}, 'key': None}" not found in "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功！', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}"
 Fri, 31 Aug 2018 16:26:33  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:26:33  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【充值】102工行充值
 Fri, 31 Aug 2018 16:26:33  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.VaccoCoreTradeService
 Fri, 31 Aug 2018 16:26:33  INFO test_api.py test_api [ line:39 ] 接口请求method:recharge
 Fri, 31 Aug 2018 16:26:33  INFO test_api.py test_api [ line:40 ] 接口请求data:{
 "subamt":"5000",
 "paymodel":"05",
 "channel":"JX",
 "bankid":"205B0CF78550959969",
 "bankno":"102",
 "bankacco":"6222620110038594231",
 "serialno":"201808311626310695bj",
 "custno":"1604578759",
 "apkind":"922",
 "subapkind":"922001",
 "apdt":"20180516",
 "aptm":"093540",
 "workdate":"20180516",
 "tradeacco":"001035098604578762",
 "taaccountid":"475B0CB66D40432285",
 "tano":"47",
 "sharetype":"A",
 "accptmd":"1",
 "branchcode":"247000",
 "distributorcode":"247",
"extFields":{'rechargeFlag':'1'}
}
 Fri, 31 Aug 2018 16:26:33  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {'retUrl': None, 'seqNo': '123097', 'txTime': '093540', 'channel': '000002', 'sign': 'XC4C2swL56vFepQQdhRJGP83TBFS1meWINsLRs1crcP/WvcN3aHadC2zEdR7baF+arQahsZaC6DWWm4tEnEU13TGr6Q++PSZtSf6JTIPEUilkCzCShbGzMrHZ7hmqpepKvPYYWO9iC/R8B8W2tHQsmbkG+I7I7stg8nkNiphkUYObXET7XQ8xzsH4QNT6CNCEctYnW7YDrc6ZJVzRjG8v6DYPLiDAX4/fuHWaXOW9AgEMYl4vNXo9ivUivBTPRz6IfhjmeCJCQDXtiH4oOKvrRZ1Jk7kEHRI2aAuetTldU2HofFK21ij4IQjzR3zizwdtVWdk+sgFkal6hxpKpeC5A==', 'cardNo': '6228484555533333333', 'idNo': '421023198705019116', 'forgotPwdUrl': None, 'userIP': None, 'currency': '156', 'instCode': '00920001', 'successfulUrl': None, 'authSeq': None, 'bankCode': '30050000', 'idType': '01', 'mobile': '13759947589', 'JxUrl': 'https://access.credit2go.cn/escrow/p2p/page/directRechargePage', 'authFlag': None, 'version': '10', 'txAmount': '5000', 'accountId': '6212462170000078011', 'name': '对对对', 'notifyUrl': 'http://www5.91wutong.com/open/jixin/directRechargePageNotifyUrl.htm?channel=yhcg', 'txCode': 'directRechargePage', 'txDate': '20180516'}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:26:33  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:{.*'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功'.*}
 Fri, 31 Aug 2018 16:26:33  INFO test_api.py test_api [ line:65 ] =====开始比对检验返回结果=======
 Fri, 31 Aug 2018 16:26:33  INFO test_api.py test_api [ line:66 ] 正则表达式匹配模式
 Fri, 31 Aug 2018 16:26:33  INFO test_api.py test_api [ line:69 ] 结果匹配，测试用例通过
 Fri, 31 Aug 2018 16:26:34  INFO test_api.py test_api [ line:81 ] 数据库里存在符合预期条件的数据,测试通过:()
 Fri, 31 Aug 2018 16:26:34  INFO test_api.py test_api [ line:84 ] ================结束一次接口请求===========
 Fri, 31 Aug 2018 16:26:34  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:26:34  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【充值后续】102工行充值失败
 Fri, 31 Aug 2018 16:26:34  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.ProductCoreTradeService
 Fri, 31 Aug 2018 16:26:34  INFO test_api.py test_api [ line:39 ] 接口请求method:tradeContinue
 Fri, 31 Aug 2018 16:26:34  INFO test_api.py test_api [ line:40 ] 接口请求data:{"serialno":"201808311540580511KE",'extFields':{"errCode":"0001", "errMsg":"交易失败", "tranSt":"F"}}
 Fri, 31 Aug 2018 16:26:34  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {}, 'errCode': 'Q015', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '查询交易原单结果为空或失败', 'tradeCode': None, 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:26:34  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:{'extFields': {}, 'errCode': '0001', 'tradeStatus': 'F', 'tradeMsg': '交易失败', 'errMsg': '交易失败', 'tradeCode': '0001', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:26:34  INFO test_api.py test_api [ line:56 ] =====开始比对检验返回结果=======
 Fri, 31 Aug 2018 16:26:34  INFO test_api.py test_api [ line:57 ] 全值匹配模式
 Fri, 31 Aug 2018 16:26:34  ERROR test_api.py test_api [ line:62 ] 全值结果比对失败原因为："{'extFields': {}, 'errCode': 'Q015', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '查询交易原单结果为空或失败', 'tradeCode': None, 'exObjFields': {}, 'key': None}" not found in "{'extFields': {}, 'errCode': '0001', 'tradeStatus': 'F', 'tradeMsg': '交易失败', 'errMsg': '交易失败', 'tradeCode': '0001', 'exObjFields': {}, 'key': None}"
Traceback (most recent call last):
  File "H:\python3_apiTest\TestCases\test_api.py", line 59, in test_api
    self.assertIn(str(res),case_data["expected_data"])
  File "F:\python36\lib\unittest\case.py", line 1089, in assertIn
    self.fail(self._formatMessage(msg, standardMsg))
  File "F:\python36\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: "{'extFields': {}, 'errCode': 'Q015', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '查询交易原单结果为空或失败', 'tradeCode': None, 'exObjFields': {}, 'key': None}" not found in "{'extFields': {}, 'errCode': '0001', 'tradeStatus': 'F', 'tradeMsg': '交易失败', 'errMsg': '交易失败', 'tradeCode': '0001', 'exObjFields': {}, 'key': None}"
 Fri, 31 Aug 2018 16:26:34  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:26:34  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【充值】103农行充值
 Fri, 31 Aug 2018 16:26:34  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.VaccoCoreTradeService
 Fri, 31 Aug 2018 16:26:34  INFO test_api.py test_api [ line:39 ] 接口请求method:recharge
 Fri, 31 Aug 2018 16:26:34  INFO test_api.py test_api [ line:40 ] 接口请求data:{
 "subamt":"1000",
 "paymodel":"05",
 "channel":"JX",
 "bankid":"205AE16EA606342921",
 "bankno":"103",
 "bankacco":"6222620110038594231",
 "serialno":"201808311626310531Bz",
 "custno":"1538967652",
 "apkind":"922",
 "subapkind":"922001",
 "apdt":"20180501",
 "aptm":"133540",
 "workdate":"20180501",
 "tradeacco":"000621718538967655",
 "taaccountid":"475AE141EE07252223",
 "tano":"47",
 "sharetype":"A",
 "accptmd":"2",
 "branchcode":"247000",
 "distributorcode":"247",
"extFields":{'rechargeFlag':'1'}
}
 Fri, 31 Aug 2018 16:26:34  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {'retUrl': None, 'seqNo': '139059', 'txTime': '133540', 'channel': '000001', 'sign': 'cztSyOdg8NE6w9h9ThWDPaMRXj814vVdABYUGTHykA6FRyPJz6LnlXxhej0dgemHwljlMf4/nWmAhfC5zoj/A5hVKs7rhyNRDkyPBzBKMEUmCvpY4x18skKir5se6Nc3sTqTmgj+WA3hIJp/4XJAhmCOK99B20uYCChiC2PP8VXVLGyssM4oLa+WwxYQJczLVVqv0RyWIAuvzW0PhVAjJnIEmxi+WagITk6HERtpLb24/4KVdQtx9WQSK7XGvDUAEgxX3c1QUzuoQssICCDEWI2ye6d8uv1xbToxZAKjK4fL56UAylz9YTGQLQ4ZErwoM51D8JpIZw0u/X1m36GGYw==', 'cardNo': '6222620110038594231', 'idNo': '310112197701016335', 'forgotPwdUrl': None, 'userIP': None, 'currency': '156', 'instCode': '00920001', 'successfulUrl': None, 'authSeq': None, 'bankCode': '30050000', 'idType': '01', 'mobile': '13588888888', 'JxUrl': 'https://access.credit2go.cn/escrow/p2p/page/directRechargePage', 'authFlag': None, 'version': '10', 'txAmount': '1000', 'accountId': '6212462170000118072', 'name': '测试账户凌浩', 'notifyUrl': 'http://www5.91wutong.com/open/jixin/directRechargePageNotifyUrl.htm?channel=yhcg', 'txCode': 'directRechargePage', 'txDate': '20180501'}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:26:34  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:{.*'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功'.*}
 Fri, 31 Aug 2018 16:26:34  INFO test_api.py test_api [ line:65 ] =====开始比对检验返回结果=======
 Fri, 31 Aug 2018 16:26:34  INFO test_api.py test_api [ line:66 ] 正则表达式匹配模式
 Fri, 31 Aug 2018 16:26:34  INFO test_api.py test_api [ line:69 ] 结果匹配，测试用例通过
 Fri, 31 Aug 2018 16:26:34  INFO test_api.py test_api [ line:81 ] 数据库里存在符合预期条件的数据,测试通过:()
 Fri, 31 Aug 2018 16:26:34  INFO test_api.py test_api [ line:84 ] ================结束一次接口请求===========
 Fri, 31 Aug 2018 16:26:34  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:26:34  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【充值后续】103农行充值成功
 Fri, 31 Aug 2018 16:26:34  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.ProductCoreTradeService
 Fri, 31 Aug 2018 16:26:34  INFO test_api.py test_api [ line:39 ] 接口请求method:tradeContinue
 Fri, 31 Aug 2018 16:26:34  INFO test_api.py test_api [ line:40 ] 接口请求data:{"serialno":"201808311540580770aN",'extFields':{"errCode":"0000", "errMsg":"交易成功", "tranSt":"Y"}}
 Fri, 31 Aug 2018 16:26:34  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {}, 'errCode': 'Q015', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '查询交易原单结果为空或失败', 'tradeCode': None, 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:26:34  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功！', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:26:34  INFO test_api.py test_api [ line:56 ] =====开始比对检验返回结果=======
 Fri, 31 Aug 2018 16:26:34  INFO test_api.py test_api [ line:57 ] 全值匹配模式
 Fri, 31 Aug 2018 16:26:34  ERROR test_api.py test_api [ line:62 ] 全值结果比对失败原因为："{'extFields': {}, 'errCode': 'Q015', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '查询交易原单结果为空或失败', 'tradeCode': None, 'exObjFields': {}, 'key': None}" not found in "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功！', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}"
Traceback (most recent call last):
  File "H:\python3_apiTest\TestCases\test_api.py", line 59, in test_api
    self.assertIn(str(res),case_data["expected_data"])
  File "F:\python36\lib\unittest\case.py", line 1089, in assertIn
    self.fail(self._formatMessage(msg, standardMsg))
  File "F:\python36\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: "{'extFields': {}, 'errCode': 'Q015', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '查询交易原单结果为空或失败', 'tradeCode': None, 'exObjFields': {}, 'key': None}" not found in "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功！', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}"
 Fri, 31 Aug 2018 16:26:34  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:26:34  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【充值】103农行充值
 Fri, 31 Aug 2018 16:26:34  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.VaccoCoreTradeService
 Fri, 31 Aug 2018 16:26:34  INFO test_api.py test_api [ line:39 ] 接口请求method:recharge
 Fri, 31 Aug 2018 16:26:34  INFO test_api.py test_api [ line:40 ] 接口请求data:{
 "subamt":"1000",
 "paymodel":"05",
 "channel":"JX",
 "bankid":"205AE16EA606342921",
 "bankno":"103",
 "bankacco":"6222620110038594231",
 "serialno":"201808311626320202xL",
 "custno":"1538967652",
 "apkind":"922",
 "subapkind":"922001",
 "apdt":"20180501",
 "aptm":"133540",
 "workdate":"20180501",
 "tradeacco":"000621718538967655",
 "taaccountid":"475AE141EE07252223",
 "tano":"47",
 "sharetype":"A",
 "accptmd":"2",
 "branchcode":"247000",
 "distributorcode":"247",
"extFields":{'rechargeFlag':'1'}
}
 Fri, 31 Aug 2018 16:26:34  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {'retUrl': None, 'seqNo': '102383', 'txTime': '133540', 'channel': '000001', 'sign': 'pBtJgPBoB0nr2WE4DdbsGxAPIdLcpRsE4ILrtqg3T0f/GS4UcDjDrJeVcB3TKDz16043KypA/Ia35LKSRNUb2wBK6OQkhpbUg26qf22VMaPD7lu1GZqDvfqXcIHPO2aHm3bkuijwhk4oCgE6oDFzTVSOWLjMu30uKqEOxNFLPqWMRPzU6+0bc5fZW9UalMFleY9topfgLtv8mrTzldIM6U2ngxdoXmGpuJRhXieApnGKchGJpxrWC7Bn7UJM1hH7VPthjsulyqYVFJg7/QGkkdi5/8B55gTmHfTQDTVA2tpxGiIObCBZAY+k6RFCV2E0zWhwqSX26iExH5Dqg81Ntw==', 'cardNo': '6222620110038594231', 'idNo': '310112197701016335', 'forgotPwdUrl': None, 'userIP': None, 'currency': '156', 'instCode': '00920001', 'successfulUrl': None, 'authSeq': None, 'bankCode': '30050000', 'idType': '01', 'mobile': '13588888888', 'JxUrl': 'https://access.credit2go.cn/escrow/p2p/page/directRechargePage', 'authFlag': None, 'version': '10', 'txAmount': '1000', 'accountId': '6212462170000118072', 'name': '测试账户凌浩', 'notifyUrl': 'http://www5.91wutong.com/open/jixin/directRechargePageNotifyUrl.htm?channel=yhcg', 'txCode': 'directRechargePage', 'txDate': '20180501'}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:26:34  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:{.*'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功'.*}
 Fri, 31 Aug 2018 16:26:34  INFO test_api.py test_api [ line:65 ] =====开始比对检验返回结果=======
 Fri, 31 Aug 2018 16:26:34  INFO test_api.py test_api [ line:66 ] 正则表达式匹配模式
 Fri, 31 Aug 2018 16:26:34  INFO test_api.py test_api [ line:69 ] 结果匹配，测试用例通过
 Fri, 31 Aug 2018 16:26:34  INFO test_api.py test_api [ line:81 ] 数据库里存在符合预期条件的数据,测试通过:()
 Fri, 31 Aug 2018 16:26:34  INFO test_api.py test_api [ line:84 ] ================结束一次接口请求===========
 Fri, 31 Aug 2018 16:26:34  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:26:34  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【充值后续】103农行充值失败
 Fri, 31 Aug 2018 16:26:34  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.ProductCoreTradeService
 Fri, 31 Aug 2018 16:26:34  INFO test_api.py test_api [ line:39 ] 接口请求method:tradeContinue
 Fri, 31 Aug 2018 16:26:34  INFO test_api.py test_api [ line:40 ] 接口请求data:{"serialno":"201808311540580284ZM",'extFields':{"errCode":"0001", "errMsg":"交易失败", "tranSt":"F"}}
 Fri, 31 Aug 2018 16:26:34  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {}, 'errCode': 'Q015', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '查询交易原单结果为空或失败', 'tradeCode': None, 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:26:34  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:{'extFields': {}, 'errCode': '0001', 'tradeStatus': 'F', 'tradeMsg': '交易失败', 'errMsg': '交易失败', 'tradeCode': '0001', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:26:34  INFO test_api.py test_api [ line:56 ] =====开始比对检验返回结果=======
 Fri, 31 Aug 2018 16:26:34  INFO test_api.py test_api [ line:57 ] 全值匹配模式
 Fri, 31 Aug 2018 16:26:34  ERROR test_api.py test_api [ line:62 ] 全值结果比对失败原因为："{'extFields': {}, 'errCode': 'Q015', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '查询交易原单结果为空或失败', 'tradeCode': None, 'exObjFields': {}, 'key': None}" not found in "{'extFields': {}, 'errCode': '0001', 'tradeStatus': 'F', 'tradeMsg': '交易失败', 'errMsg': '交易失败', 'tradeCode': '0001', 'exObjFields': {}, 'key': None}"
Traceback (most recent call last):
  File "H:\python3_apiTest\TestCases\test_api.py", line 59, in test_api
    self.assertIn(str(res),case_data["expected_data"])
  File "F:\python36\lib\unittest\case.py", line 1089, in assertIn
    self.fail(self._formatMessage(msg, standardMsg))
  File "F:\python36\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: "{'extFields': {}, 'errCode': 'Q015', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '查询交易原单结果为空或失败', 'tradeCode': None, 'exObjFields': {}, 'key': None}" not found in "{'extFields': {}, 'errCode': '0001', 'tradeStatus': 'F', 'tradeMsg': '交易失败', 'errMsg': '交易失败', 'tradeCode': '0001', 'exObjFields': {}, 'key': None}"
 Fri, 31 Aug 2018 16:26:34  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:26:34  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【充值】104中行充值
 Fri, 31 Aug 2018 16:26:34  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.VaccoCoreTradeService
 Fri, 31 Aug 2018 16:26:34  INFO test_api.py test_api [ line:39 ] 接口请求method:recharge
 Fri, 31 Aug 2018 16:26:34  INFO test_api.py test_api [ line:40 ] 接口请求data:{
 "subamt":"500",
 "paymodel":"05",
 "channel":"JX",
 "bankid":"205AE16EA606342921",
 "bankno":"104",
 "bankacco":"6222620110038594231",
 "serialno":"201808311626320456Ji",
 "custno":"1538967652",
 "apkind":"922",
 "subapkind":"922001",
 "apdt":"20180509",
 "aptm":"133540",
 "workdate":"20180509",
 "tradeacco":"000621718538967655",
 "taaccountid":"475AE141EE07252223",
 "tano":"47",
 "sharetype":"A",
 "accptmd":"3",
 "branchcode":"247000",
 "distributorcode":"247",
"extFields":{'rechargeFlag':'1'}
}
 Fri, 31 Aug 2018 16:26:34  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {'retUrl': None, 'seqNo': '114501', 'txTime': '133540', 'channel': '000004', 'sign': 'QKr2/0ytSO00cIRvcq1KqY68VcrKma5Ad4qWRolGLyZWD9wZ5E9RAEh85EdILXzdXdCkjrwLzsFSHbF5V55xjUhV4BUviAk7j0OCvIn5sZ/s1hwO1NZh30VCx8rxYVxbbNJnKMZZF/YGuYK49zrPVsEigUWKJJLJbk7R4IIApRu6yaZf4uEuX3mxqU0BuQuRH9lXgKr4nv/ubhZqdQx01Ba9f/NT7t2frEcZpXVj0N+ZjNf9F+ClwkvSsIUHAyVFBYy+CS3S5iHClVHvOV32myC8ItZYb5Xn3IJpyAsmcVd2AEL+L0MD4Q36PHCwsTAGv2GBbj4B3w9XqiAD9q6YXQ==', 'cardNo': '6222620110038594231', 'idNo': '310112197701016335', 'forgotPwdUrl': None, 'userIP': None, 'currency': '156', 'instCode': '00920001', 'successfulUrl': None, 'authSeq': None, 'bankCode': '30050000', 'idType': '01', 'mobile': '13588888888', 'JxUrl': 'https://access.credit2go.cn/escrow/p2p/page/directRechargePage', 'authFlag': None, 'version': '10', 'txAmount': '500', 'accountId': '6212462170000118072', 'name': '测试账户凌浩', 'notifyUrl': 'http://www5.91wutong.com/open/jixin/directRechargePageNotifyUrl.htm?channel=yhcg', 'txCode': 'directRechargePage', 'txDate': '20180509'}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:26:34  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:{.*'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功'.*}
 Fri, 31 Aug 2018 16:26:34  INFO test_api.py test_api [ line:65 ] =====开始比对检验返回结果=======
 Fri, 31 Aug 2018 16:26:34  INFO test_api.py test_api [ line:66 ] 正则表达式匹配模式
 Fri, 31 Aug 2018 16:26:34  INFO test_api.py test_api [ line:69 ] 结果匹配，测试用例通过
 Fri, 31 Aug 2018 16:26:34  INFO test_api.py test_api [ line:81 ] 数据库里存在符合预期条件的数据,测试通过:()
 Fri, 31 Aug 2018 16:26:34  INFO test_api.py test_api [ line:84 ] ================结束一次接口请求===========
 Fri, 31 Aug 2018 16:26:34  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:26:34  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【充值后续】104中行充值成功
 Fri, 31 Aug 2018 16:26:34  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.ProductCoreTradeService
 Fri, 31 Aug 2018 16:26:34  INFO test_api.py test_api [ line:39 ] 接口请求method:tradeContinue
 Fri, 31 Aug 2018 16:26:34  INFO test_api.py test_api [ line:40 ] 接口请求data:{"serialno":"201808311540580616CR","isSend":"1",'extFields':{"errCode":"0000", "errMsg":"交易成功", "tranSt":"Y"}}
 Fri, 31 Aug 2018 16:26:34  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {}, 'errCode': 'Q015', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '查询交易原单结果为空或失败', 'tradeCode': None, 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:26:34  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功！', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:26:34  INFO test_api.py test_api [ line:56 ] =====开始比对检验返回结果=======
 Fri, 31 Aug 2018 16:26:34  INFO test_api.py test_api [ line:57 ] 全值匹配模式
 Fri, 31 Aug 2018 16:26:34  ERROR test_api.py test_api [ line:62 ] 全值结果比对失败原因为："{'extFields': {}, 'errCode': 'Q015', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '查询交易原单结果为空或失败', 'tradeCode': None, 'exObjFields': {}, 'key': None}" not found in "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功！', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}"
Traceback (most recent call last):
  File "H:\python3_apiTest\TestCases\test_api.py", line 59, in test_api
    self.assertIn(str(res),case_data["expected_data"])
  File "F:\python36\lib\unittest\case.py", line 1089, in assertIn
    self.fail(self._formatMessage(msg, standardMsg))
  File "F:\python36\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: "{'extFields': {}, 'errCode': 'Q015', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '查询交易原单结果为空或失败', 'tradeCode': None, 'exObjFields': {}, 'key': None}" not found in "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功！', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}"
 Fri, 31 Aug 2018 16:26:34  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:26:34  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【充值】104中行充值
 Fri, 31 Aug 2018 16:26:34  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.VaccoCoreTradeService
 Fri, 31 Aug 2018 16:26:34  INFO test_api.py test_api [ line:39 ] 接口请求method:recharge
 Fri, 31 Aug 2018 16:26:34  INFO test_api.py test_api [ line:40 ] 接口请求data:{
 "subamt":"500",
 "paymodel":"05",
 "channel":"JX",
 "bankid":"205AE16EA606342921",
 "bankno":"104",
 "bankacco":"6222620110038594231",
 "serialno":"201808311626320420jF",
 "custno":"1538967652",
 "apkind":"922",
 "subapkind":"922001",
 "apdt":"20180509",
 "aptm":"133540",
 "workdate":"20180509",
 "tradeacco":"000621718538967655",
 "taaccountid":"475AE141EE07252223",
 "tano":"47",
 "sharetype":"A",
 "accptmd":"3",
 "branchcode":"247000",
 "distributorcode":"247",
"extFields":{'rechargeFlag':'1'}
}
 Fri, 31 Aug 2018 16:26:34  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {'retUrl': None, 'seqNo': '120043', 'txTime': '133540', 'channel': '000004', 'sign': 'NVaUaGLWSgoJXrRJoLyGwaniLRS5bd6jG2WJzmFDyEccs9mpKacwyInOP19xLMzGUvz2WADBGH+crSxBTtkRz/A1+yiOld+tUeVJZSIFbIkHw9gJPVuIJEoo25drV0683jevpyGcgSi155g430tP+//r0RZ30LJRQh+0R/LqegRFVGl8yXTZwWWWUA3YXnsl9aQ9Ni+o4vnEdXHUEGozoDr0JNjXawznh9AXaE24OiWc4RNoPrwUMjIixGq/5uDKsge6k7ILef5sgIZ5JjaAVU0XX3729nixfSTcQwHeZDrieWDkLw3X2mFeigLOo7ZVu1hyxsnOXR5sRJa9BOmuDQ==', 'cardNo': '6222620110038594231', 'idNo': '310112197701016335', 'forgotPwdUrl': None, 'userIP': None, 'currency': '156', 'instCode': '00920001', 'successfulUrl': None, 'authSeq': None, 'bankCode': '30050000', 'idType': '01', 'mobile': '13588888888', 'JxUrl': 'https://access.credit2go.cn/escrow/p2p/page/directRechargePage', 'authFlag': None, 'version': '10', 'txAmount': '500', 'accountId': '6212462170000118072', 'name': '测试账户凌浩', 'notifyUrl': 'http://www5.91wutong.com/open/jixin/directRechargePageNotifyUrl.htm?channel=yhcg', 'txCode': 'directRechargePage', 'txDate': '20180509'}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:26:34  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:{.*'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功'.*}
 Fri, 31 Aug 2018 16:26:34  INFO test_api.py test_api [ line:65 ] =====开始比对检验返回结果=======
 Fri, 31 Aug 2018 16:26:34  INFO test_api.py test_api [ line:66 ] 正则表达式匹配模式
 Fri, 31 Aug 2018 16:26:34  INFO test_api.py test_api [ line:69 ] 结果匹配，测试用例通过
 Fri, 31 Aug 2018 16:26:34  INFO test_api.py test_api [ line:81 ] 数据库里存在符合预期条件的数据,测试通过:()
 Fri, 31 Aug 2018 16:26:34  INFO test_api.py test_api [ line:84 ] ================结束一次接口请求===========
 Fri, 31 Aug 2018 16:26:34  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:26:34  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【充值后续】104中行充值失败
 Fri, 31 Aug 2018 16:26:34  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.ProductCoreTradeService
 Fri, 31 Aug 2018 16:26:34  INFO test_api.py test_api [ line:39 ] 接口请求method:tradeContinue
 Fri, 31 Aug 2018 16:26:34  INFO test_api.py test_api [ line:40 ] 接口请求data:{"serialno":"201808311540580331ks",'extFields':{"errCode":"0001", "errMsg":"交易失败", "tranSt":"F"}}
 Fri, 31 Aug 2018 16:26:34  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {}, 'errCode': 'Q015', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '查询交易原单结果为空或失败', 'tradeCode': None, 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:26:34  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:{'extFields': {}, 'errCode': '0001', 'tradeStatus': 'F', 'tradeMsg': '交易失败', 'errMsg': '交易失败', 'tradeCode': '0001', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:26:34  INFO test_api.py test_api [ line:56 ] =====开始比对检验返回结果=======
 Fri, 31 Aug 2018 16:26:34  INFO test_api.py test_api [ line:57 ] 全值匹配模式
 Fri, 31 Aug 2018 16:26:34  ERROR test_api.py test_api [ line:62 ] 全值结果比对失败原因为："{'extFields': {}, 'errCode': 'Q015', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '查询交易原单结果为空或失败', 'tradeCode': None, 'exObjFields': {}, 'key': None}" not found in "{'extFields': {}, 'errCode': '0001', 'tradeStatus': 'F', 'tradeMsg': '交易失败', 'errMsg': '交易失败', 'tradeCode': '0001', 'exObjFields': {}, 'key': None}"
Traceback (most recent call last):
  File "H:\python3_apiTest\TestCases\test_api.py", line 59, in test_api
    self.assertIn(str(res),case_data["expected_data"])
  File "F:\python36\lib\unittest\case.py", line 1089, in assertIn
    self.fail(self._formatMessage(msg, standardMsg))
  File "F:\python36\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: "{'extFields': {}, 'errCode': 'Q015', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '查询交易原单结果为空或失败', 'tradeCode': None, 'exObjFields': {}, 'key': None}" not found in "{'extFields': {}, 'errCode': '0001', 'tradeStatus': 'F', 'tradeMsg': '交易失败', 'errMsg': '交易失败', 'tradeCode': '0001', 'exObjFields': {}, 'key': None}"
 Fri, 31 Aug 2018 16:26:34  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:26:34  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【充值】105建行充值
 Fri, 31 Aug 2018 16:26:34  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.VaccoCoreTradeService
 Fri, 31 Aug 2018 16:26:34  INFO test_api.py test_api [ line:39 ] 接口请求method:recharge
 Fri, 31 Aug 2018 16:26:34  INFO test_api.py test_api [ line:40 ] 接口请求data:{
 "subamt":"4000",
 "paymodel":"05",
 "channel":"JX",
 "bankid":"205AE16EA606342921",
 "bankno":"105",
 "bankacco":"6222620110038594231",
 "serialno":"201808311626320528gF",
 "custno":"1538967652",
 "apkind":"922",
 "subapkind":"922001",
 "apdt":"20180228",
 "aptm":"223540",
 "workdate":"20180228",
 "tradeacco":"000621718538967655",
 "taaccountid":"475AE141EE07252223",
 "tano":"47",
 "sharetype":"A",
 "accptmd":"2",
 "branchcode":"247000",
 "distributorcode":"247",
"extFields":{'rechargeFlag':'1'}
}
 Fri, 31 Aug 2018 16:26:35  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {'retUrl': None, 'seqNo': '106533', 'txTime': '223540', 'channel': '000001', 'sign': 'QpW99YFooEBHDZpV9AVy07EG+oKp9Op5swKcWJJrZ4/FJdr2/EXsVP5R3TjEfkqQ9dvH1fTCjjkJfj0L8Dpk/EAKXRKK/IboALJsx8sYVdHsqqssJmTB+yvdCqIi39ECd76l3SC4FrdBT85uTnrQUZCHEmKmrbv8n6zdkW5ofFXGpeIA5a5viUfuUd1DIEjssMLeWhYJs9bBC7FgS5tr8inBn0TT85GQUUniRqwrVUkWmqn+xnyPrUa6Pcfn+nt1c2+U0UI1YSp91yu7NjNwPtveuKnyCIrawESer5If4xv1k43PqrH0vVVoze3gbUNRBQwH2reNkEZ9oAyZ0arJxg==', 'cardNo': '6222620110038594231', 'idNo': '310112197701016335', 'forgotPwdUrl': None, 'userIP': None, 'currency': '156', 'instCode': '00920001', 'successfulUrl': None, 'authSeq': None, 'bankCode': '30050000', 'idType': '01', 'mobile': '13588888888', 'JxUrl': 'https://access.credit2go.cn/escrow/p2p/page/directRechargePage', 'authFlag': None, 'version': '10', 'txAmount': '4000', 'accountId': '6212462170000118072', 'name': '测试账户凌浩', 'notifyUrl': 'http://www5.91wutong.com/open/jixin/directRechargePageNotifyUrl.htm?channel=yhcg', 'txCode': 'directRechargePage', 'txDate': '20180228'}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:26:35  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:{.*'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功'.*}
 Fri, 31 Aug 2018 16:26:35  INFO test_api.py test_api [ line:65 ] =====开始比对检验返回结果=======
 Fri, 31 Aug 2018 16:26:35  INFO test_api.py test_api [ line:66 ] 正则表达式匹配模式
 Fri, 31 Aug 2018 16:26:35  INFO test_api.py test_api [ line:69 ] 结果匹配，测试用例通过
 Fri, 31 Aug 2018 16:26:35  INFO test_api.py test_api [ line:81 ] 数据库里存在符合预期条件的数据,测试通过:()
 Fri, 31 Aug 2018 16:26:35  INFO test_api.py test_api [ line:84 ] ================结束一次接口请求===========
 Fri, 31 Aug 2018 16:26:35  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:26:35  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【充值后续】105建行充值成功
 Fri, 31 Aug 2018 16:26:35  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.ProductCoreTradeService
 Fri, 31 Aug 2018 16:26:35  INFO test_api.py test_api [ line:39 ] 接口请求method:tradeContinue
 Fri, 31 Aug 2018 16:26:35  INFO test_api.py test_api [ line:40 ] 接口请求data:{"serialno":"201808311540580955Hy","isSend":"1",'extFields':{"errCode":"0000", "errMsg":"交易成功", "tranSt":"Y"}}
 Fri, 31 Aug 2018 16:26:35  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {}, 'errCode': 'Q015', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '查询交易原单结果为空或失败', 'tradeCode': None, 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:26:35  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功！', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:26:35  INFO test_api.py test_api [ line:56 ] =====开始比对检验返回结果=======
 Fri, 31 Aug 2018 16:26:35  INFO test_api.py test_api [ line:57 ] 全值匹配模式
 Fri, 31 Aug 2018 16:26:35  ERROR test_api.py test_api [ line:62 ] 全值结果比对失败原因为："{'extFields': {}, 'errCode': 'Q015', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '查询交易原单结果为空或失败', 'tradeCode': None, 'exObjFields': {}, 'key': None}" not found in "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功！', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}"
Traceback (most recent call last):
  File "H:\python3_apiTest\TestCases\test_api.py", line 59, in test_api
    self.assertIn(str(res),case_data["expected_data"])
  File "F:\python36\lib\unittest\case.py", line 1089, in assertIn
    self.fail(self._formatMessage(msg, standardMsg))
  File "F:\python36\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: "{'extFields': {}, 'errCode': 'Q015', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '查询交易原单结果为空或失败', 'tradeCode': None, 'exObjFields': {}, 'key': None}" not found in "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功！', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}"
 Fri, 31 Aug 2018 16:26:35  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:26:35  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【充值】105建行充值
 Fri, 31 Aug 2018 16:26:35  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.VaccoCoreTradeService
 Fri, 31 Aug 2018 16:26:35  INFO test_api.py test_api [ line:39 ] 接口请求method:recharge
 Fri, 31 Aug 2018 16:26:35  INFO test_api.py test_api [ line:40 ] 接口请求data:{
 "subamt":"4000",
 "paymodel":"05",
 "channel":"JX",
 "bankid":"205AE16EA606342921",
 "bankno":"105",
 "bankacco":"6222620110038594231",
 "serialno":"201808311626320766fa",
 "custno":"1538967652",
 "apkind":"922",
 "subapkind":"922001",
 "apdt":"20180228",
 "aptm":"223540",
 "workdate":"20180228",
 "tradeacco":"000621718538967655",
 "taaccountid":"475AE141EE07252223",
 "tano":"47",
 "sharetype":"A",
 "accptmd":"2",
 "branchcode":"247000",
 "distributorcode":"247",
"extFields":{'rechargeFlag':'1'}
}
 Fri, 31 Aug 2018 16:26:35  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {'retUrl': None, 'seqNo': '108198', 'txTime': '223540', 'channel': '000001', 'sign': 'V67XtOgzPKf00ecWe58pv3Kh+D3XK1clFs77MREI+nFOAF2WK7iE3AvQVIcG1QIA6cLYTuXmy+FOQhIw5HZVJpk0WyT+DYQ0XjwupVi3ZhwhziRs2QGrVtvR0vHyXlwY0Opm5+H5BKLb98Sxnhi0Flx2IMkSrOU0SVFm3f2pK6cXkYBjXC63tVviG7YQL2eGEBkOnget1kP1iE6+2/SZlvDrbl2X+gnyMng84ZeTWX2SHp0VWQF0/q4lxR7Rd6ob7D6c35yDLLvL0dOdKEJ/zEwbBEzA5kLjjym8G6SXl0dFzKD7pME26bmYHaymC6dYSBAlP8zt9rp4OFt6nDoKAQ==', 'cardNo': '6222620110038594231', 'idNo': '310112197701016335', 'forgotPwdUrl': None, 'userIP': None, 'currency': '156', 'instCode': '00920001', 'successfulUrl': None, 'authSeq': None, 'bankCode': '30050000', 'idType': '01', 'mobile': '13588888888', 'JxUrl': 'https://access.credit2go.cn/escrow/p2p/page/directRechargePage', 'authFlag': None, 'version': '10', 'txAmount': '4000', 'accountId': '6212462170000118072', 'name': '测试账户凌浩', 'notifyUrl': 'http://www5.91wutong.com/open/jixin/directRechargePageNotifyUrl.htm?channel=yhcg', 'txCode': 'directRechargePage', 'txDate': '20180228'}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:26:35  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:{.*'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功'.*}
 Fri, 31 Aug 2018 16:26:35  INFO test_api.py test_api [ line:65 ] =====开始比对检验返回结果=======
 Fri, 31 Aug 2018 16:26:35  INFO test_api.py test_api [ line:66 ] 正则表达式匹配模式
 Fri, 31 Aug 2018 16:26:35  INFO test_api.py test_api [ line:69 ] 结果匹配，测试用例通过
 Fri, 31 Aug 2018 16:26:35  INFO test_api.py test_api [ line:81 ] 数据库里存在符合预期条件的数据,测试通过:()
 Fri, 31 Aug 2018 16:26:35  INFO test_api.py test_api [ line:84 ] ================结束一次接口请求===========
 Fri, 31 Aug 2018 16:26:35  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:26:35  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【充值后续】105建行充值失败
 Fri, 31 Aug 2018 16:26:35  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.ProductCoreTradeService
 Fri, 31 Aug 2018 16:26:35  INFO test_api.py test_api [ line:39 ] 接口请求method:tradeContinue
 Fri, 31 Aug 2018 16:26:35  INFO test_api.py test_api [ line:40 ] 接口请求data:{"serialno":"201808311540580934WS",'extFields':{"errCode":"0001", "errMsg":"交易失败", "tranSt":"F"}}
 Fri, 31 Aug 2018 16:26:35  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {}, 'errCode': 'Q015', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '查询交易原单结果为空或失败', 'tradeCode': None, 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:26:35  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:{'extFields': {}, 'errCode': '0001', 'tradeStatus': 'F', 'tradeMsg': '交易失败', 'errMsg': '交易失败', 'tradeCode': '0001', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:26:35  INFO test_api.py test_api [ line:56 ] =====开始比对检验返回结果=======
 Fri, 31 Aug 2018 16:26:35  INFO test_api.py test_api [ line:57 ] 全值匹配模式
 Fri, 31 Aug 2018 16:26:35  ERROR test_api.py test_api [ line:62 ] 全值结果比对失败原因为："{'extFields': {}, 'errCode': 'Q015', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '查询交易原单结果为空或失败', 'tradeCode': None, 'exObjFields': {}, 'key': None}" not found in "{'extFields': {}, 'errCode': '0001', 'tradeStatus': 'F', 'tradeMsg': '交易失败', 'errMsg': '交易失败', 'tradeCode': '0001', 'exObjFields': {}, 'key': None}"
Traceback (most recent call last):
  File "H:\python3_apiTest\TestCases\test_api.py", line 59, in test_api
    self.assertIn(str(res),case_data["expected_data"])
  File "F:\python36\lib\unittest\case.py", line 1089, in assertIn
    self.fail(self._formatMessage(msg, standardMsg))
  File "F:\python36\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: "{'extFields': {}, 'errCode': 'Q015', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '查询交易原单结果为空或失败', 'tradeCode': None, 'exObjFields': {}, 'key': None}" not found in "{'extFields': {}, 'errCode': '0001', 'tradeStatus': 'F', 'tradeMsg': '交易失败', 'errMsg': '交易失败', 'tradeCode': '0001', 'exObjFields': {}, 'key': None}"
 Fri, 31 Aug 2018 16:26:35  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:26:35  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【充值】301交通充值
 Fri, 31 Aug 2018 16:26:35  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.VaccoCoreTradeService
 Fri, 31 Aug 2018 16:26:35  INFO test_api.py test_api [ line:39 ] 接口请求method:recharge
 Fri, 31 Aug 2018 16:26:35  INFO test_api.py test_api [ line:40 ] 接口请求data:{
 "subamt":"8999.12",
 "paymodel":"05",
 "channel":"JX",
 "bankid":"205AE16EA606342921",
 "bankno":"301",
 "bankacco":"6222620110038594231",
 "serialno":"201808311626320227qo",
 "custno":"1538967652",
 "apkind":"922",
 "subapkind":"922001",
 "apdt":"20180302",
 "aptm":"233540",
 "workdate":"20180302",
 "tradeacco":"000621718538967655",
 "taaccountid":"475AE141EE07252223",
 "tano":"47",
 "sharetype":"A",
 "accptmd":"1",
 "branchcode":"247000",
 "distributorcode":"247","extFields":{'rechargeFlag':'1'}
}
 Fri, 31 Aug 2018 16:26:35  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {'retUrl': None, 'seqNo': '120936', 'txTime': '233540', 'channel': '000002', 'sign': 'HXobzxapRV6zBdiMKijdNJFUMbriCt3UQNBQvdDpVderbfhPAr/C9T3ByIQeTvDMXsZlLVS414tpOnHXNtczc0F1hOmtBFbhSemA08G8NnyMvmSm/UxxfbDSt9o099KLhPiDClP27clhy5CGlRvXoXbKT3/FQ68hH2v5HN9kl+zFFmo1SIo0K6uz8szHC3yAYIsuYeFWFLdYvNyKjkCtK5OxeORmEUFhvqa1TPB8W6fYaZM5kPBDV5JzByRF4es8CbReL6fV+bftYTTt0GT9c1zR/mPAHdcs0WmkDUgDOfkGV1g6zVDnlUuqW1ZyLw9POSvQpsrJB2D1pgtRI/yOZQ==', 'cardNo': '6222620110038594231', 'idNo': '310112197701016335', 'forgotPwdUrl': None, 'userIP': None, 'currency': '156', 'instCode': '00920001', 'successfulUrl': None, 'authSeq': None, 'bankCode': '30050000', 'idType': '01', 'mobile': '13588888888', 'JxUrl': 'https://access.credit2go.cn/escrow/p2p/page/directRechargePage', 'authFlag': None, 'version': '10', 'txAmount': '8999.12', 'accountId': '6212462170000118072', 'name': '测试账户凌浩', 'notifyUrl': 'http://www5.91wutong.com/open/jixin/directRechargePageNotifyUrl.htm?channel=yhcg', 'txCode': 'directRechargePage', 'txDate': '20180302'}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:26:35  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:{.*'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功'.*}
 Fri, 31 Aug 2018 16:26:35  INFO test_api.py test_api [ line:65 ] =====开始比对检验返回结果=======
 Fri, 31 Aug 2018 16:26:35  INFO test_api.py test_api [ line:66 ] 正则表达式匹配模式
 Fri, 31 Aug 2018 16:26:35  INFO test_api.py test_api [ line:69 ] 结果匹配，测试用例通过
 Fri, 31 Aug 2018 16:26:35  INFO test_api.py test_api [ line:81 ] 数据库里存在符合预期条件的数据,测试通过:()
 Fri, 31 Aug 2018 16:26:35  INFO test_api.py test_api [ line:84 ] ================结束一次接口请求===========
 Fri, 31 Aug 2018 16:26:35  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:26:35  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【充值后续】301交通充值成功
 Fri, 31 Aug 2018 16:26:35  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.ProductCoreTradeService
 Fri, 31 Aug 2018 16:26:35  INFO test_api.py test_api [ line:39 ] 接口请求method:tradeContinue
 Fri, 31 Aug 2018 16:26:35  INFO test_api.py test_api [ line:40 ] 接口请求data:{"serialno":"201808311540580728aC","isSend":"1",'extFields':{"errCode":"0000", "errMsg":"交易成功", "tranSt":"Y"}}
 Fri, 31 Aug 2018 16:26:35  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {}, 'errCode': 'Q015', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '查询交易原单结果为空或失败', 'tradeCode': None, 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:26:35  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功！', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:26:35  INFO test_api.py test_api [ line:56 ] =====开始比对检验返回结果=======
 Fri, 31 Aug 2018 16:26:35  INFO test_api.py test_api [ line:57 ] 全值匹配模式
 Fri, 31 Aug 2018 16:26:35  ERROR test_api.py test_api [ line:62 ] 全值结果比对失败原因为："{'extFields': {}, 'errCode': 'Q015', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '查询交易原单结果为空或失败', 'tradeCode': None, 'exObjFields': {}, 'key': None}" not found in "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功！', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}"
Traceback (most recent call last):
  File "H:\python3_apiTest\TestCases\test_api.py", line 59, in test_api
    self.assertIn(str(res),case_data["expected_data"])
  File "F:\python36\lib\unittest\case.py", line 1089, in assertIn
    self.fail(self._formatMessage(msg, standardMsg))
  File "F:\python36\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: "{'extFields': {}, 'errCode': 'Q015', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '查询交易原单结果为空或失败', 'tradeCode': None, 'exObjFields': {}, 'key': None}" not found in "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功！', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}"
 Fri, 31 Aug 2018 16:26:35  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:26:35  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【充值】301交通充值
 Fri, 31 Aug 2018 16:26:35  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.VaccoCoreTradeService
 Fri, 31 Aug 2018 16:26:35  INFO test_api.py test_api [ line:39 ] 接口请求method:recharge
 Fri, 31 Aug 2018 16:26:35  INFO test_api.py test_api [ line:40 ] 接口请求data:{
 "subamt":"8999.12",
 "paymodel":"05",
 "channel":"JX",
 "bankid":"205AE16EA606342921",
 "bankno":"301",
 "bankacco":"6222620110038594231",
 "serialno":"20180831162632041OT",
 "custno":"1538967652",
 "apkind":"922",
 "subapkind":"922001",
 "apdt":"20180302",
 "aptm":"233540",
 "workdate":"20180302",
 "tradeacco":"000621718538967655",
 "taaccountid":"475AE141EE07252223",
 "tano":"47",
 "sharetype":"A",
 "accptmd":"1",
 "branchcode":"247000",
 "distributorcode":"247","extFields":{'rechargeFlag':'1'}
}
 Fri, 31 Aug 2018 16:26:35  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {'retUrl': None, 'seqNo': '116645', 'txTime': '233540', 'channel': '000002', 'sign': 'ohOjnQzu7SWjgWmmZbOkIt5k3piDVRgiZcqZfhoklRNJanR0q1LhWmKVOkGlOlSfMB08VN5SoQSlXQs7H8bwFVPXxYYh8VrGom7VPImLX68ZZTvMYQhs4tdvaafu7mfqO61np5Hf2OPaOfrtbocfI4JlAmBdr01vpmQDT41ejnWQknT6oK4BuyZE9c4JXxrfz1oS56Pnjt77BQxhMn1L3XrU5R/ImNZFBR5okjiwwyRcl2hzLlb0tWCj8KadBifva+Bm3+VVzbNMdAu3DcnhLHkc8K1nYYoCc9JyveJ/LCvf1Nd9rTgDrIa3VWIwxy4QjeCSpQucUt5Gb9q5ETusLg==', 'cardNo': '6222620110038594231', 'idNo': '310112197701016335', 'forgotPwdUrl': None, 'userIP': None, 'currency': '156', 'instCode': '00920001', 'successfulUrl': None, 'authSeq': None, 'bankCode': '30050000', 'idType': '01', 'mobile': '13588888888', 'JxUrl': 'https://access.credit2go.cn/escrow/p2p/page/directRechargePage', 'authFlag': None, 'version': '10', 'txAmount': '8999.12', 'accountId': '6212462170000118072', 'name': '测试账户凌浩', 'notifyUrl': 'http://www5.91wutong.com/open/jixin/directRechargePageNotifyUrl.htm?channel=yhcg', 'txCode': 'directRechargePage', 'txDate': '20180302'}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:26:35  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:{.*'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功'.*}
 Fri, 31 Aug 2018 16:26:35  INFO test_api.py test_api [ line:65 ] =====开始比对检验返回结果=======
 Fri, 31 Aug 2018 16:26:35  INFO test_api.py test_api [ line:66 ] 正则表达式匹配模式
 Fri, 31 Aug 2018 16:26:35  INFO test_api.py test_api [ line:69 ] 结果匹配，测试用例通过
 Fri, 31 Aug 2018 16:26:35  INFO test_api.py test_api [ line:81 ] 数据库里存在符合预期条件的数据,测试通过:()
 Fri, 31 Aug 2018 16:26:35  INFO test_api.py test_api [ line:84 ] ================结束一次接口请求===========
 Fri, 31 Aug 2018 16:26:35  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:26:35  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【充值后续】301交通充值失败
 Fri, 31 Aug 2018 16:26:35  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.ProductCoreTradeService
 Fri, 31 Aug 2018 16:26:35  INFO test_api.py test_api [ line:39 ] 接口请求method:tradeContinue
 Fri, 31 Aug 2018 16:26:35  INFO test_api.py test_api [ line:40 ] 接口请求data:{"serialno":"201808311540580660UP",'extFields':{"errCode":"0001", "errMsg":"交易失败", "tranSt":"F"}}
 Fri, 31 Aug 2018 16:26:35  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {}, 'errCode': 'Q015', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '查询交易原单结果为空或失败', 'tradeCode': None, 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:26:35  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:{'extFields': {}, 'errCode': '0001', 'tradeStatus': 'F', 'tradeMsg': '交易失败', 'errMsg': '交易失败', 'tradeCode': '0001', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:26:35  INFO test_api.py test_api [ line:56 ] =====开始比对检验返回结果=======
 Fri, 31 Aug 2018 16:26:35  INFO test_api.py test_api [ line:57 ] 全值匹配模式
 Fri, 31 Aug 2018 16:26:35  ERROR test_api.py test_api [ line:62 ] 全值结果比对失败原因为："{'extFields': {}, 'errCode': 'Q015', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '查询交易原单结果为空或失败', 'tradeCode': None, 'exObjFields': {}, 'key': None}" not found in "{'extFields': {}, 'errCode': '0001', 'tradeStatus': 'F', 'tradeMsg': '交易失败', 'errMsg': '交易失败', 'tradeCode': '0001', 'exObjFields': {}, 'key': None}"
Traceback (most recent call last):
  File "H:\python3_apiTest\TestCases\test_api.py", line 59, in test_api
    self.assertIn(str(res),case_data["expected_data"])
  File "F:\python36\lib\unittest\case.py", line 1089, in assertIn
    self.fail(self._formatMessage(msg, standardMsg))
  File "F:\python36\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: "{'extFields': {}, 'errCode': 'Q015', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '查询交易原单结果为空或失败', 'tradeCode': None, 'exObjFields': {}, 'key': None}" not found in "{'extFields': {}, 'errCode': '0001', 'tradeStatus': 'F', 'tradeMsg': '交易失败', 'errMsg': '交易失败', 'tradeCode': '0001', 'exObjFields': {}, 'key': None}"
 Fri, 31 Aug 2018 16:26:35  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:26:35  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【充值】302中信充值
 Fri, 31 Aug 2018 16:26:35  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.VaccoCoreTradeService
 Fri, 31 Aug 2018 16:26:35  INFO test_api.py test_api [ line:39 ] 接口请求method:recharge
 Fri, 31 Aug 2018 16:26:35  INFO test_api.py test_api [ line:40 ] 接口请求data:{
 "subamt":"200.12",
 "paymodel":"05",
 "channel":"JX",
 "bankid":"205AE16EA606342921",
 "bankno":"302",
 "bankacco":"6222620110038594231",
 "serialno":"201808311626320146yK",
 "custno":"1538967652",
 "apkind":"922",
 "subapkind":"922001",
 "apdt":"20180501",
 "aptm":"093540",
 "workdate":"20180516",
 "tradeacco":"000621718538967655",
 "taaccountid":"475AE141EE07252223",
 "tano":"47",
 "sharetype":"A",
 "accptmd":"2",
 "branchcode":"247000",
 "distributorcode":"247","extFields":{'rechargeFlag':'1'}
}
 Fri, 31 Aug 2018 16:26:35  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {'retUrl': None, 'seqNo': '115538', 'txTime': '093540', 'channel': '000001', 'sign': 'NXR+lYZHUjvoETFIcJiTLoN6kxPM/T+3imeM38Ahp4otEafxXTIoBfYm0fixbwFNz71B+KsCiTH+FG8BMHR0W9uuYki+D1FvwEP8TfYW8NTqiEanVDvU0YjLu8cklCYKkCETxhpnhIRMFqp0RE3+XYtVZ9iNu5+WyvnXF9eGYyHNUBRTd5WqE6pbiCjKiqLGHBuuWO0/xdxJOVgzIMadl7iqDjVEvUCsxO+WZ2+ksuOH/jlWlOUOviWGfeHnG3kjju8zmNaIhSXWHif+1Y3kLRIwVZ5OCegzB3PyJ0IPTexdghyZjexblU5Vd6OGOFig3EXXo/+u26KEehrm8FYReg==', 'cardNo': '6222620110038594231', 'idNo': '310112197701016335', 'forgotPwdUrl': None, 'userIP': None, 'currency': '156', 'instCode': '00920001', 'successfulUrl': None, 'authSeq': None, 'bankCode': '30050000', 'idType': '01', 'mobile': '13588888888', 'JxUrl': 'https://access.credit2go.cn/escrow/p2p/page/directRechargePage', 'authFlag': None, 'version': '10', 'txAmount': '200.12', 'accountId': '6212462170000118072', 'name': '测试账户凌浩', 'notifyUrl': 'http://www5.91wutong.com/open/jixin/directRechargePageNotifyUrl.htm?channel=yhcg', 'txCode': 'directRechargePage', 'txDate': '20180501'}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:26:35  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:{.*'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功'.*}
 Fri, 31 Aug 2018 16:26:35  INFO test_api.py test_api [ line:65 ] =====开始比对检验返回结果=======
 Fri, 31 Aug 2018 16:26:35  INFO test_api.py test_api [ line:66 ] 正则表达式匹配模式
 Fri, 31 Aug 2018 16:26:35  INFO test_api.py test_api [ line:69 ] 结果匹配，测试用例通过
 Fri, 31 Aug 2018 16:26:35  INFO test_api.py test_api [ line:81 ] 数据库里存在符合预期条件的数据,测试通过:()
 Fri, 31 Aug 2018 16:26:35  INFO test_api.py test_api [ line:84 ] ================结束一次接口请求===========
 Fri, 31 Aug 2018 16:26:35  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:26:35  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【充值后续】302中信充值成功
 Fri, 31 Aug 2018 16:26:35  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.ProductCoreTradeService
 Fri, 31 Aug 2018 16:26:35  INFO test_api.py test_api [ line:39 ] 接口请求method:tradeContinue
 Fri, 31 Aug 2018 16:26:35  INFO test_api.py test_api [ line:40 ] 接口请求data:{"serialno":"201808311540580137mX","isSend":"1",'extFields':{"errCode":"0000", "errMsg":"交易成功", "tranSt":"Y"}}
 Fri, 31 Aug 2018 16:26:35  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {}, 'errCode': 'Q015', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '查询交易原单结果为空或失败', 'tradeCode': None, 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:26:35  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功！', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:26:35  INFO test_api.py test_api [ line:56 ] =====开始比对检验返回结果=======
 Fri, 31 Aug 2018 16:26:35  INFO test_api.py test_api [ line:57 ] 全值匹配模式
 Fri, 31 Aug 2018 16:26:35  ERROR test_api.py test_api [ line:62 ] 全值结果比对失败原因为："{'extFields': {}, 'errCode': 'Q015', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '查询交易原单结果为空或失败', 'tradeCode': None, 'exObjFields': {}, 'key': None}" not found in "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功！', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}"
Traceback (most recent call last):
  File "H:\python3_apiTest\TestCases\test_api.py", line 59, in test_api
    self.assertIn(str(res),case_data["expected_data"])
  File "F:\python36\lib\unittest\case.py", line 1089, in assertIn
    self.fail(self._formatMessage(msg, standardMsg))
  File "F:\python36\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: "{'extFields': {}, 'errCode': 'Q015', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '查询交易原单结果为空或失败', 'tradeCode': None, 'exObjFields': {}, 'key': None}" not found in "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功！', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}"
 Fri, 31 Aug 2018 16:26:35  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:26:35  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【充值】302中信充值
 Fri, 31 Aug 2018 16:26:35  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.VaccoCoreTradeService
 Fri, 31 Aug 2018 16:26:35  INFO test_api.py test_api [ line:39 ] 接口请求method:recharge
 Fri, 31 Aug 2018 16:26:35  INFO test_api.py test_api [ line:40 ] 接口请求data:{
 "subamt":"200.12",
 "paymodel":"05",
 "channel":"JX",
 "bankid":"205AE16EA606342921",
 "bankno":"302",
 "bankacco":"6222620110038594231",
 "serialno":"201808311626320349Rn",
 "custno":"1538967652",
 "apkind":"922",
 "subapkind":"922001",
 "apdt":"20180501",
 "aptm":"093540",
 "workdate":"20180516",
 "tradeacco":"000621718538967655",
 "taaccountid":"475AE141EE07252223",
 "tano":"47",
 "sharetype":"A",
 "accptmd":"2",
 "branchcode":"247000",
 "distributorcode":"247","extFields":{'rechargeFlag':'1'}
}
 Fri, 31 Aug 2018 16:26:36  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {'retUrl': None, 'seqNo': '140099', 'txTime': '093540', 'channel': '000001', 'sign': 'nGIWFiOhRhPAwSebagFNmOyvkpycUJw125QmPUiU+sgjzDzUeHCskfeqjpprO9SO2WkU6iAKixMpbbO30Fp/PO72vjEqnqxCNKPk6w6VZ+8rkxwcEZrxOc724MFOVnaHxcOVVHsPUCMfTchqLsOXmb+OsyeY/zmfGMwom/qTK+68j/ax7XiM9bXeNXAuOBc5evpwt7+1e5kDcuxe6zgZdRd/YIojyWMpnBgepaTnfbTVcHUWOun6iUgNAdOhAuWWGNx7nHBY/qbtJAYHGnovs+Cq8dFdOlLgz3McPoa38CjPJmDNrO+EZVvJWvWvCkbLB2OSrXvFjDo7OCIBF87Fhg==', 'cardNo': '6222620110038594231', 'idNo': '310112197701016335', 'forgotPwdUrl': None, 'userIP': None, 'currency': '156', 'instCode': '00920001', 'successfulUrl': None, 'authSeq': None, 'bankCode': '30050000', 'idType': '01', 'mobile': '13588888888', 'JxUrl': 'https://access.credit2go.cn/escrow/p2p/page/directRechargePage', 'authFlag': None, 'version': '10', 'txAmount': '200.12', 'accountId': '6212462170000118072', 'name': '测试账户凌浩', 'notifyUrl': 'http://www5.91wutong.com/open/jixin/directRechargePageNotifyUrl.htm?channel=yhcg', 'txCode': 'directRechargePage', 'txDate': '20180501'}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:26:36  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:{.*'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功'.*}
 Fri, 31 Aug 2018 16:26:36  INFO test_api.py test_api [ line:65 ] =====开始比对检验返回结果=======
 Fri, 31 Aug 2018 16:26:36  INFO test_api.py test_api [ line:66 ] 正则表达式匹配模式
 Fri, 31 Aug 2018 16:26:36  INFO test_api.py test_api [ line:69 ] 结果匹配，测试用例通过
 Fri, 31 Aug 2018 16:26:36  INFO test_api.py test_api [ line:81 ] 数据库里存在符合预期条件的数据,测试通过:()
 Fri, 31 Aug 2018 16:26:36  INFO test_api.py test_api [ line:84 ] ================结束一次接口请求===========
 Fri, 31 Aug 2018 16:26:36  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:26:36  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【充值后续】302中信充值失败
 Fri, 31 Aug 2018 16:26:36  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.ProductCoreTradeService
 Fri, 31 Aug 2018 16:26:36  INFO test_api.py test_api [ line:39 ] 接口请求method:tradeContinue
 Fri, 31 Aug 2018 16:26:36  INFO test_api.py test_api [ line:40 ] 接口请求data:{"serialno":"201808311540580101iS",'extFields':{"errCode":"0001", "errMsg":"交易失败", "tranSt":"F"}}
 Fri, 31 Aug 2018 16:26:36  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {}, 'errCode': 'Q015', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '查询交易原单结果为空或失败', 'tradeCode': None, 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:26:36  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:{'extFields': {}, 'errCode': '0001', 'tradeStatus': 'F', 'tradeMsg': '交易失败', 'errMsg': '交易失败', 'tradeCode': '0001', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:26:36  INFO test_api.py test_api [ line:56 ] =====开始比对检验返回结果=======
 Fri, 31 Aug 2018 16:26:36  INFO test_api.py test_api [ line:57 ] 全值匹配模式
 Fri, 31 Aug 2018 16:26:36  ERROR test_api.py test_api [ line:62 ] 全值结果比对失败原因为："{'extFields': {}, 'errCode': 'Q015', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '查询交易原单结果为空或失败', 'tradeCode': None, 'exObjFields': {}, 'key': None}" not found in "{'extFields': {}, 'errCode': '0001', 'tradeStatus': 'F', 'tradeMsg': '交易失败', 'errMsg': '交易失败', 'tradeCode': '0001', 'exObjFields': {}, 'key': None}"
Traceback (most recent call last):
  File "H:\python3_apiTest\TestCases\test_api.py", line 59, in test_api
    self.assertIn(str(res),case_data["expected_data"])
  File "F:\python36\lib\unittest\case.py", line 1089, in assertIn
    self.fail(self._formatMessage(msg, standardMsg))
  File "F:\python36\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: "{'extFields': {}, 'errCode': 'Q015', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '查询交易原单结果为空或失败', 'tradeCode': None, 'exObjFields': {}, 'key': None}" not found in "{'extFields': {}, 'errCode': '0001', 'tradeStatus': 'F', 'tradeMsg': '交易失败', 'errMsg': '交易失败', 'tradeCode': '0001', 'exObjFields': {}, 'key': None}"
 Fri, 31 Aug 2018 16:26:36  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:26:36  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【充值】303光大充值
 Fri, 31 Aug 2018 16:26:36  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.VaccoCoreTradeService
 Fri, 31 Aug 2018 16:26:36  INFO test_api.py test_api [ line:39 ] 接口请求method:recharge
 Fri, 31 Aug 2018 16:26:36  INFO test_api.py test_api [ line:40 ] 接口请求data:{
 "subamt":"5000",
 "paymodel":"05",
 "channel":"JX",
 "bankid":"205AE16EA606342921",
 "bankno":"303",
 "bankacco":"6222620110038594231",
 "serialno":"201808311626320246tN",
 "custno":"1538967652",
 "apkind":"922",
 "subapkind":"922001",
 "apdt":"20180201",
 "aptm":"093540",
 "workdate":"20180201",
 "tradeacco":"000621718538967655",
 "taaccountid":"475AE141EE07252223",
 "tano":"47",
 "sharetype":"A",
 "accptmd":"3",
 "branchcode":"247000",
 "distributorcode":"247","extFields":{'rechargeFlag':'1'}
}
 Fri, 31 Aug 2018 16:26:36  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {'retUrl': None, 'seqNo': '118600', 'txTime': '093540', 'channel': '000004', 'sign': 'WxWPM0Q3qku4ds4+nm8viEWlM2mUFiwYrO8YCgGr/4Hr7pVTf0AjF/oo+0QgXijSPe6lBfPXzJet2Y9Gj5MDqjrDJ6CLjoSpyo19y5y/bGAKgcsPVpy9KZRQuCKX9GcimISoXxHqzvp1ri2UpHUll/BZkGVtchmeyxZ4ua/DVuTSpHqae6B4/lG45YrDuZV64nbSRLgAu4BTCRqcZN+BhpvUzooWLaoOH0KhsAsT9Hcq2NsvutZ7LUJwLvauxyLechQz/APInrPXCvW7OYdSrfXPSJDw57c8GlvmSdFgKefw7ntyQBwhDIjY+OmfxgR7AMmyn88c69oDr6yKqompYw==', 'cardNo': '6222620110038594231', 'idNo': '310112197701016335', 'forgotPwdUrl': None, 'userIP': None, 'currency': '156', 'instCode': '00920001', 'successfulUrl': None, 'authSeq': None, 'bankCode': '30050000', 'idType': '01', 'mobile': '13588888888', 'JxUrl': 'https://access.credit2go.cn/escrow/p2p/page/directRechargePage', 'authFlag': None, 'version': '10', 'txAmount': '5000', 'accountId': '6212462170000118072', 'name': '测试账户凌浩', 'notifyUrl': 'http://www5.91wutong.com/open/jixin/directRechargePageNotifyUrl.htm?channel=yhcg', 'txCode': 'directRechargePage', 'txDate': '20180201'}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:26:36  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:{.*'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功'.*}
 Fri, 31 Aug 2018 16:26:36  INFO test_api.py test_api [ line:65 ] =====开始比对检验返回结果=======
 Fri, 31 Aug 2018 16:26:36  INFO test_api.py test_api [ line:66 ] 正则表达式匹配模式
 Fri, 31 Aug 2018 16:26:36  INFO test_api.py test_api [ line:69 ] 结果匹配，测试用例通过
 Fri, 31 Aug 2018 16:26:36  INFO test_api.py test_api [ line:81 ] 数据库里存在符合预期条件的数据,测试通过:()
 Fri, 31 Aug 2018 16:26:36  INFO test_api.py test_api [ line:84 ] ================结束一次接口请求===========
 Fri, 31 Aug 2018 16:26:36  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:26:36  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【充值后续】303光大充值成功
 Fri, 31 Aug 2018 16:26:36  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.ProductCoreTradeService
 Fri, 31 Aug 2018 16:26:36  INFO test_api.py test_api [ line:39 ] 接口请求method:tradeContinue
 Fri, 31 Aug 2018 16:26:36  INFO test_api.py test_api [ line:40 ] 接口请求data:{"serialno":"201808311540580787ei","isSend":"1",'extFields':{"errCode":"0000", "errMsg":"交易成功", "tranSt":"Y"}}
 Fri, 31 Aug 2018 16:26:36  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {}, 'errCode': 'Q015', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '查询交易原单结果为空或失败', 'tradeCode': None, 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:26:36  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功！', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:26:36  INFO test_api.py test_api [ line:56 ] =====开始比对检验返回结果=======
 Fri, 31 Aug 2018 16:26:36  INFO test_api.py test_api [ line:57 ] 全值匹配模式
 Fri, 31 Aug 2018 16:26:36  ERROR test_api.py test_api [ line:62 ] 全值结果比对失败原因为："{'extFields': {}, 'errCode': 'Q015', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '查询交易原单结果为空或失败', 'tradeCode': None, 'exObjFields': {}, 'key': None}" not found in "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功！', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}"
Traceback (most recent call last):
  File "H:\python3_apiTest\TestCases\test_api.py", line 59, in test_api
    self.assertIn(str(res),case_data["expected_data"])
  File "F:\python36\lib\unittest\case.py", line 1089, in assertIn
    self.fail(self._formatMessage(msg, standardMsg))
  File "F:\python36\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: "{'extFields': {}, 'errCode': 'Q015', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '查询交易原单结果为空或失败', 'tradeCode': None, 'exObjFields': {}, 'key': None}" not found in "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功！', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}"
 Fri, 31 Aug 2018 16:26:36  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:26:36  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【充值】303光大充值
 Fri, 31 Aug 2018 16:26:36  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.VaccoCoreTradeService
 Fri, 31 Aug 2018 16:26:36  INFO test_api.py test_api [ line:39 ] 接口请求method:recharge
 Fri, 31 Aug 2018 16:26:36  INFO test_api.py test_api [ line:40 ] 接口请求data:{
 "subamt":"5000",
 "paymodel":"05",
 "channel":"JX",
 "bankid":"205AE16EA606342921",
 "bankno":"303",
 "bankacco":"6222620110038594231",
 "serialno":"201808311626320603Az",
 "custno":"1538967652",
 "apkind":"922",
 "subapkind":"922001",
 "apdt":"20180201",
 "aptm":"093540",
 "workdate":"20180201",
 "tradeacco":"000621718538967655",
 "taaccountid":"475AE141EE07252223",
 "tano":"47",
 "sharetype":"A",
 "accptmd":"3",
 "branchcode":"247000",
 "distributorcode":"247","extFields":{'rechargeFlag':'1'}
}
 Fri, 31 Aug 2018 16:26:36  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {'retUrl': None, 'seqNo': '134689', 'txTime': '093540', 'channel': '000004', 'sign': 'Nqws+dU/sTOOYHSrddPphDLNY3pdA4UzJr0B2YaCkJlxP/eLcZqXrZReiLWb0cC0CxbbwkURKGbAi69EKwVXdBU58MMgz3EQvTAEPLzdN3+DfjZE10cFayOXu9NyNvplGMitFvuNlqoBhjfKpsz4MJl+zJYJtIJQnOVeMRamCdXdTf5KSe6b95h+Mq+qlizTZdGHin/k7na5dby6KS7RunksuGHzqMa/y7t5F1A7MhXGfh1rxZB2BLp8kFSEbZCetA9Z/yYjWyJIg0KXemc+dEgvSQRHzHYBX0mlSNYb+cjSs25PlOw8bDqDv7Bx0QqhxwEBqJxzhAJzSRBxShYEfg==', 'cardNo': '6222620110038594231', 'idNo': '310112197701016335', 'forgotPwdUrl': None, 'userIP': None, 'currency': '156', 'instCode': '00920001', 'successfulUrl': None, 'authSeq': None, 'bankCode': '30050000', 'idType': '01', 'mobile': '13588888888', 'JxUrl': 'https://access.credit2go.cn/escrow/p2p/page/directRechargePage', 'authFlag': None, 'version': '10', 'txAmount': '5000', 'accountId': '6212462170000118072', 'name': '测试账户凌浩', 'notifyUrl': 'http://www5.91wutong.com/open/jixin/directRechargePageNotifyUrl.htm?channel=yhcg', 'txCode': 'directRechargePage', 'txDate': '20180201'}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:26:36  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:{.*'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功'.*}
 Fri, 31 Aug 2018 16:26:36  INFO test_api.py test_api [ line:65 ] =====开始比对检验返回结果=======
 Fri, 31 Aug 2018 16:26:36  INFO test_api.py test_api [ line:66 ] 正则表达式匹配模式
 Fri, 31 Aug 2018 16:26:36  INFO test_api.py test_api [ line:69 ] 结果匹配，测试用例通过
 Fri, 31 Aug 2018 16:26:36  INFO test_api.py test_api [ line:81 ] 数据库里存在符合预期条件的数据,测试通过:()
 Fri, 31 Aug 2018 16:26:36  INFO test_api.py test_api [ line:84 ] ================结束一次接口请求===========
 Fri, 31 Aug 2018 16:26:36  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:26:36  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【充值后续】303光大充值失败
 Fri, 31 Aug 2018 16:26:36  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.ProductCoreTradeService
 Fri, 31 Aug 2018 16:26:36  INFO test_api.py test_api [ line:39 ] 接口请求method:tradeContinue
 Fri, 31 Aug 2018 16:26:36  INFO test_api.py test_api [ line:40 ] 接口请求data:{"serialno":"201808311540580912Xk",'extFields':{"errCode":"0001", "errMsg":"交易失败", "tranSt":"F"}}
 Fri, 31 Aug 2018 16:26:36  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {}, 'errCode': 'Q015', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '查询交易原单结果为空或失败', 'tradeCode': None, 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:26:36  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:{'extFields': {}, 'errCode': '0001', 'tradeStatus': 'F', 'tradeMsg': '交易失败', 'errMsg': '交易失败', 'tradeCode': '0001', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:26:36  INFO test_api.py test_api [ line:56 ] =====开始比对检验返回结果=======
 Fri, 31 Aug 2018 16:26:36  INFO test_api.py test_api [ line:57 ] 全值匹配模式
 Fri, 31 Aug 2018 16:26:36  ERROR test_api.py test_api [ line:62 ] 全值结果比对失败原因为："{'extFields': {}, 'errCode': 'Q015', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '查询交易原单结果为空或失败', 'tradeCode': None, 'exObjFields': {}, 'key': None}" not found in "{'extFields': {}, 'errCode': '0001', 'tradeStatus': 'F', 'tradeMsg': '交易失败', 'errMsg': '交易失败', 'tradeCode': '0001', 'exObjFields': {}, 'key': None}"
Traceback (most recent call last):
  File "H:\python3_apiTest\TestCases\test_api.py", line 59, in test_api
    self.assertIn(str(res),case_data["expected_data"])
  File "F:\python36\lib\unittest\case.py", line 1089, in assertIn
    self.fail(self._formatMessage(msg, standardMsg))
  File "F:\python36\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: "{'extFields': {}, 'errCode': 'Q015', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '查询交易原单结果为空或失败', 'tradeCode': None, 'exObjFields': {}, 'key': None}" not found in "{'extFields': {}, 'errCode': '0001', 'tradeStatus': 'F', 'tradeMsg': '交易失败', 'errMsg': '交易失败', 'tradeCode': '0001', 'exObjFields': {}, 'key': None}"
 Fri, 31 Aug 2018 16:26:36  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:26:36  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【充值】304华夏充值
 Fri, 31 Aug 2018 16:26:36  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.VaccoCoreTradeService
 Fri, 31 Aug 2018 16:26:36  INFO test_api.py test_api [ line:39 ] 接口请求method:recharge
 Fri, 31 Aug 2018 16:26:36  INFO test_api.py test_api [ line:40 ] 接口请求data:{
 "subamt":"500.8",
 "paymodel":"05",
 "channel":"JX",
 "bankid":"205AE16EA606342921",
 "bankno":"304",
 "bankacco":"6222620110038594231",
 "serialno":"201808311626320397vy",
 "custno":"1538967652",
 "apkind":"922",
 "subapkind":"922001",
 "apdt":"20180501",
 "aptm":"093540",
 "workdate":"20180516",
 "tradeacco":"000621718538967655",
 "taaccountid":"475AE141EE07252223",
 "tano":"47",
 "sharetype":"A",
 "accptmd":"1",
 "branchcode":"247000",
 "distributorcode":"247","extFields":{'rechargeFlag':'1'}
}
 Fri, 31 Aug 2018 16:26:36  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {'retUrl': None, 'seqNo': '131317', 'txTime': '093540', 'channel': '000002', 'sign': 'em/DEsbOmrcbxum080Cqg1XnKdKpOoysHU3iYCK0LLPYJ5ApMEDGLQ1LTzZ+HpvzVK+VFFj9ijeo7zOI/JLLw1ZS4odZ2LtqN5aJwmgbc2ZS/ROC/IcWXTrTaVJ8PzDW+4Dbi7wh7WeMo2DDDXpsqHDel4pir3W6EfcgC7L13BZ5OooiCMvCCr8ot5no/EbU4o8uDfQiQjhIHNKPV669Uf8Z2UWrzRneJynVVFsutf3L2+mQqDmUpho9jIWpC2gHldWymUYnVnX2h3eb1XaR8Z62SE4jcDj55wn/BGPNCLKjHgcuV9mtdQmax5xasG6EvLMNMDlPfEfgywl0q3zFXg==', 'cardNo': '6222620110038594231', 'idNo': '310112197701016335', 'forgotPwdUrl': None, 'userIP': None, 'currency': '156', 'instCode': '00920001', 'successfulUrl': None, 'authSeq': None, 'bankCode': '30050000', 'idType': '01', 'mobile': '13588888888', 'JxUrl': 'https://access.credit2go.cn/escrow/p2p/page/directRechargePage', 'authFlag': None, 'version': '10', 'txAmount': '500.8', 'accountId': '6212462170000118072', 'name': '测试账户凌浩', 'notifyUrl': 'http://www5.91wutong.com/open/jixin/directRechargePageNotifyUrl.htm?channel=yhcg', 'txCode': 'directRechargePage', 'txDate': '20180501'}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:26:36  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:{.*'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功'.*}
 Fri, 31 Aug 2018 16:26:36  INFO test_api.py test_api [ line:65 ] =====开始比对检验返回结果=======
 Fri, 31 Aug 2018 16:26:36  INFO test_api.py test_api [ line:66 ] 正则表达式匹配模式
 Fri, 31 Aug 2018 16:26:36  INFO test_api.py test_api [ line:69 ] 结果匹配，测试用例通过
 Fri, 31 Aug 2018 16:26:36  INFO test_api.py test_api [ line:81 ] 数据库里存在符合预期条件的数据,测试通过:()
 Fri, 31 Aug 2018 16:26:36  INFO test_api.py test_api [ line:84 ] ================结束一次接口请求===========
 Fri, 31 Aug 2018 16:26:36  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:26:36  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【充值后续】304华夏充值成功
 Fri, 31 Aug 2018 16:26:36  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.ProductCoreTradeService
 Fri, 31 Aug 2018 16:26:36  INFO test_api.py test_api [ line:39 ] 接口请求method:tradeContinue
 Fri, 31 Aug 2018 16:26:36  INFO test_api.py test_api [ line:40 ] 接口请求data:{"serialno":"201808311540580301mo","isSend":"1",'extFields':{"errCode":"0000", "errMsg":"交易成功", "tranSt":"Y"}}
 Fri, 31 Aug 2018 16:26:36  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {}, 'errCode': 'Q015', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '查询交易原单结果为空或失败', 'tradeCode': None, 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:26:36  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功！', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:26:36  INFO test_api.py test_api [ line:56 ] =====开始比对检验返回结果=======
 Fri, 31 Aug 2018 16:26:36  INFO test_api.py test_api [ line:57 ] 全值匹配模式
 Fri, 31 Aug 2018 16:26:36  ERROR test_api.py test_api [ line:62 ] 全值结果比对失败原因为："{'extFields': {}, 'errCode': 'Q015', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '查询交易原单结果为空或失败', 'tradeCode': None, 'exObjFields': {}, 'key': None}" not found in "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功！', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}"
Traceback (most recent call last):
  File "H:\python3_apiTest\TestCases\test_api.py", line 59, in test_api
    self.assertIn(str(res),case_data["expected_data"])
  File "F:\python36\lib\unittest\case.py", line 1089, in assertIn
    self.fail(self._formatMessage(msg, standardMsg))
  File "F:\python36\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: "{'extFields': {}, 'errCode': 'Q015', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '查询交易原单结果为空或失败', 'tradeCode': None, 'exObjFields': {}, 'key': None}" not found in "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功！', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}"
 Fri, 31 Aug 2018 16:26:36  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:26:36  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【充值】304华夏充值
 Fri, 31 Aug 2018 16:26:36  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.VaccoCoreTradeService
 Fri, 31 Aug 2018 16:26:36  INFO test_api.py test_api [ line:39 ] 接口请求method:recharge
 Fri, 31 Aug 2018 16:26:36  INFO test_api.py test_api [ line:40 ] 接口请求data:{
 "subamt":"500.8",
 "paymodel":"05",
 "channel":"JX",
 "bankid":"205AE16EA606342921",
 "bankno":"304",
 "bankacco":"6222620110038594231",
 "serialno":"201808311626320201BX",
 "custno":"1538967652",
 "apkind":"922",
 "subapkind":"922001",
 "apdt":"20180501",
 "aptm":"093540",
 "workdate":"20180516",
  "tradeacco":"000621718538967655",
 "taaccountid":"475AE141EE07252223",
 "tano":"47",
 "sharetype":"A",
 "accptmd":"1",
 "branchcode":"247000",
 "distributorcode":"247","extFields":{'rechargeFlag':'1'}
}
 Fri, 31 Aug 2018 16:26:36  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {'retUrl': None, 'seqNo': '146116', 'txTime': '093540', 'channel': '000002', 'sign': 'S6Ys3XAb60FXj0Js32RUVkKWVKJ2w7r1MhoSbCN99Zo1hkStIDAzUSPzX0LH56JWBtTV/lH4k+GOmXfDXCx9WLXTM9hGABh2Kc+wWY6hjVZ8H4On12lRGdI6vWJQVCYIq/4lXWEAi3l/hFxF5Xfhg+rk4htebSj1VKUWyhSfIQxXiJ8f+1KhcXL02+sZFf1U2OBcAhQnAmzx15a1V5/1+P7hIM3ET75EFVvQWEdTXCyfkhAM0v0G/5eCGejM9Von9FGkyXdtKg+3zwv+qegjN4H1Uk9ybwJV0Lb3/XURzv5kdD+OCFpCLjhE5vSpAjTQSB0OE0Wty8BqHphinH41kA==', 'cardNo': '6222620110038594231', 'idNo': '310112197701016335', 'forgotPwdUrl': None, 'userIP': None, 'currency': '156', 'instCode': '00920001', 'successfulUrl': None, 'authSeq': None, 'bankCode': '30050000', 'idType': '01', 'mobile': '13588888888', 'JxUrl': 'https://access.credit2go.cn/escrow/p2p/page/directRechargePage', 'authFlag': None, 'version': '10', 'txAmount': '500.8', 'accountId': '6212462170000118072', 'name': '测试账户凌浩', 'notifyUrl': 'http://www5.91wutong.com/open/jixin/directRechargePageNotifyUrl.htm?channel=yhcg', 'txCode': 'directRechargePage', 'txDate': '20180501'}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:26:36  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:{.*'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功'.*}
 Fri, 31 Aug 2018 16:26:36  INFO test_api.py test_api [ line:65 ] =====开始比对检验返回结果=======
 Fri, 31 Aug 2018 16:26:36  INFO test_api.py test_api [ line:66 ] 正则表达式匹配模式
 Fri, 31 Aug 2018 16:26:36  INFO test_api.py test_api [ line:69 ] 结果匹配，测试用例通过
 Fri, 31 Aug 2018 16:26:36  INFO test_api.py test_api [ line:81 ] 数据库里存在符合预期条件的数据,测试通过:()
 Fri, 31 Aug 2018 16:26:36  INFO test_api.py test_api [ line:84 ] ================结束一次接口请求===========
 Fri, 31 Aug 2018 16:26:36  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:26:36  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【充值后续】304华夏充值失败
 Fri, 31 Aug 2018 16:26:36  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.ProductCoreTradeService
 Fri, 31 Aug 2018 16:26:36  INFO test_api.py test_api [ line:39 ] 接口请求method:tradeContinue
 Fri, 31 Aug 2018 16:26:36  INFO test_api.py test_api [ line:40 ] 接口请求data:{"serialno":"201808311540580222qV",'extFields':{"errCode":"0001", "errMsg":"交易失败", "tranSt":"F"}}
 Fri, 31 Aug 2018 16:26:36  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {}, 'errCode': 'Q015', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '查询交易原单结果为空或失败', 'tradeCode': None, 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:26:36  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:{'extFields': {}, 'errCode': '0001', 'tradeStatus': 'F', 'tradeMsg': '交易失败', 'errMsg': '交易失败', 'tradeCode': '0001', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:26:36  INFO test_api.py test_api [ line:56 ] =====开始比对检验返回结果=======
 Fri, 31 Aug 2018 16:26:36  INFO test_api.py test_api [ line:57 ] 全值匹配模式
 Fri, 31 Aug 2018 16:26:36  ERROR test_api.py test_api [ line:62 ] 全值结果比对失败原因为："{'extFields': {}, 'errCode': 'Q015', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '查询交易原单结果为空或失败', 'tradeCode': None, 'exObjFields': {}, 'key': None}" not found in "{'extFields': {}, 'errCode': '0001', 'tradeStatus': 'F', 'tradeMsg': '交易失败', 'errMsg': '交易失败', 'tradeCode': '0001', 'exObjFields': {}, 'key': None}"
Traceback (most recent call last):
  File "H:\python3_apiTest\TestCases\test_api.py", line 59, in test_api
    self.assertIn(str(res),case_data["expected_data"])
  File "F:\python36\lib\unittest\case.py", line 1089, in assertIn
    self.fail(self._formatMessage(msg, standardMsg))
  File "F:\python36\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: "{'extFields': {}, 'errCode': 'Q015', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '查询交易原单结果为空或失败', 'tradeCode': None, 'exObjFields': {}, 'key': None}" not found in "{'extFields': {}, 'errCode': '0001', 'tradeStatus': 'F', 'tradeMsg': '交易失败', 'errMsg': '交易失败', 'tradeCode': '0001', 'exObjFields': {}, 'key': None}"
 Fri, 31 Aug 2018 16:26:36  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:26:36  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【充值】305民生充值
 Fri, 31 Aug 2018 16:26:36  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.VaccoCoreTradeService
 Fri, 31 Aug 2018 16:26:36  INFO test_api.py test_api [ line:39 ] 接口请求method:recharge
 Fri, 31 Aug 2018 16:26:36  INFO test_api.py test_api [ line:40 ] 接口请求data:{
 "subamt":"1001",
 "paymodel":"05",
 "channel":"JX",
 "bankid":"205AE16EA606342921",
 "bankno":"305",
 "bankacco":"6222620110038594231",
 "serialno":"201808311626320318yQ",
 "custno":"1538967652",
 "apkind":"922",
 "subapkind":"922001",
 "apdt":"20181201",
 "aptm":"093540",
 "workdate":"20181201",
 "tradeacco":"000621718538967655",
 "taaccountid":"475AE141EE07252223",
 "tano":"47",
 "sharetype":"A",
 "accptmd":"1",
 "branchcode":"247000",
 "distributorcode":"247","extFields":{'rechargeFlag':'1'}
}
 Fri, 31 Aug 2018 16:26:37  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {'retUrl': None, 'seqNo': '146263', 'txTime': '093540', 'channel': '000002', 'sign': 'YPYP/mq7ohGvucqfDSRfmH6PWKzCelijjuH3AuLaHc+B0AD/cP1ddTm2mirxd6nV5IK49sJIR/0IOAjDkyQCJ/j2ynFRguXaVyAoApPznFWolc+5AMEEATHzXgI3ghUCWIDuG071P3tPRDMvjGFu/KXCa7KxHKOYfTXnuNGjk/+IH7QrHuf75an8I3xyraGNjiR/LGG9sYEGERKH0ePtEW6xVxUt4v8BM6qzI0UG6EUHYic5EzhKt/IHKhhYRLJY5tSUhFyczjgvSMyGRaDolcfY7GDmRX2yvbUfffukaUGkU2IaDV/LnwhfwxZNyNJFEVSl1HWNuwqeE7ua3a7JLQ==', 'cardNo': '6222620110038594231', 'idNo': '310112197701016335', 'forgotPwdUrl': None, 'userIP': None, 'currency': '156', 'instCode': '00920001', 'successfulUrl': None, 'authSeq': None, 'bankCode': '30050000', 'idType': '01', 'mobile': '13588888888', 'JxUrl': 'https://access.credit2go.cn/escrow/p2p/page/directRechargePage', 'authFlag': None, 'version': '10', 'txAmount': '1001', 'accountId': '6212462170000118072', 'name': '测试账户凌浩', 'notifyUrl': 'http://www5.91wutong.com/open/jixin/directRechargePageNotifyUrl.htm?channel=yhcg', 'txCode': 'directRechargePage', 'txDate': '20181201'}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:26:37  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:{.*'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功'.*}
 Fri, 31 Aug 2018 16:26:37  INFO test_api.py test_api [ line:65 ] =====开始比对检验返回结果=======
 Fri, 31 Aug 2018 16:26:37  INFO test_api.py test_api [ line:66 ] 正则表达式匹配模式
 Fri, 31 Aug 2018 16:26:37  INFO test_api.py test_api [ line:69 ] 结果匹配，测试用例通过
 Fri, 31 Aug 2018 16:26:37  INFO test_api.py test_api [ line:81 ] 数据库里存在符合预期条件的数据,测试通过:()
 Fri, 31 Aug 2018 16:26:37  INFO test_api.py test_api [ line:84 ] ================结束一次接口请求===========
 Fri, 31 Aug 2018 16:26:37  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:26:37  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【充值后续】305民生充值成功
 Fri, 31 Aug 2018 16:26:37  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.ProductCoreTradeService
 Fri, 31 Aug 2018 16:26:37  INFO test_api.py test_api [ line:39 ] 接口请求method:tradeContinue
 Fri, 31 Aug 2018 16:26:37  INFO test_api.py test_api [ line:40 ] 接口请求data:{"serialno":"20180831154058083We","isSend":"1",'extFields':{"errCode":"0000", "errMsg":"交易成功", "tranSt":"Y"}}
 Fri, 31 Aug 2018 16:26:37  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {}, 'errCode': 'Q015', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '查询交易原单结果为空或失败', 'tradeCode': None, 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:26:37  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功！', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:26:37  INFO test_api.py test_api [ line:56 ] =====开始比对检验返回结果=======
 Fri, 31 Aug 2018 16:26:37  INFO test_api.py test_api [ line:57 ] 全值匹配模式
 Fri, 31 Aug 2018 16:26:37  ERROR test_api.py test_api [ line:62 ] 全值结果比对失败原因为："{'extFields': {}, 'errCode': 'Q015', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '查询交易原单结果为空或失败', 'tradeCode': None, 'exObjFields': {}, 'key': None}" not found in "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功！', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}"
Traceback (most recent call last):
  File "H:\python3_apiTest\TestCases\test_api.py", line 59, in test_api
    self.assertIn(str(res),case_data["expected_data"])
  File "F:\python36\lib\unittest\case.py", line 1089, in assertIn
    self.fail(self._formatMessage(msg, standardMsg))
  File "F:\python36\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: "{'extFields': {}, 'errCode': 'Q015', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '查询交易原单结果为空或失败', 'tradeCode': None, 'exObjFields': {}, 'key': None}" not found in "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功！', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}"
 Fri, 31 Aug 2018 16:26:37  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:26:37  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【充值】305民生充值
 Fri, 31 Aug 2018 16:26:37  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.VaccoCoreTradeService
 Fri, 31 Aug 2018 16:26:37  INFO test_api.py test_api [ line:39 ] 接口请求method:recharge
 Fri, 31 Aug 2018 16:26:37  INFO test_api.py test_api [ line:40 ] 接口请求data:{
 "subamt":"1001",
 "paymodel":"05",
 "channel":"JX",
 "bankid":"205AE16EA606342921",
 "bankno":"305",
 "bankacco":"6222620110038594231",
 "serialno":"201808311626320367YN",
 "custno":"1538967652",
 "apkind":"922",
 "subapkind":"922001",
 "apdt":"20181201",
 "aptm":"093540",
 "workdate":"20181201",
 "tradeacco":"000621718538967655",
 "taaccountid":"475AE141EE07252223",
 "tano":"47",
 "sharetype":"A",
 "accptmd":"1",
 "branchcode":"247000",
 "distributorcode":"247","extFields":{'rechargeFlag':'1'}
}
 Fri, 31 Aug 2018 16:26:37  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {'retUrl': None, 'seqNo': '144026', 'txTime': '093540', 'channel': '000002', 'sign': 'O8RAdiwORFfgZBlUUrH5m/Yr+U4fnKZc67LTQ5Ww/zC7QayV+J32tCDmfS3tZNQG9B2UK0JBmyAOueXjWrV4WcdADJ04bKtOVsXA7xHfWwGXsebNY//ipjU4c13RcLhuSvTtr95MamhLktJe5LGv2bv0dAq+4xGn5P1VZRdstoHB1zA8psI9KfuQp9WlKjQUnmIFHtnevUifcb4ENjVsD2U9XAglKdHhhn0bPFI75axdQl0nUXs8cqLBrtBUE4ysVz1wNuSPHpu6MAEvm0PnTwhi5J/vczxZ6zLfZFoM4oQleEhDsBeV6qe/oLj23VaZevtpMwM6TV18NZs1A1kpmg==', 'cardNo': '6222620110038594231', 'idNo': '310112197701016335', 'forgotPwdUrl': None, 'userIP': None, 'currency': '156', 'instCode': '00920001', 'successfulUrl': None, 'authSeq': None, 'bankCode': '30050000', 'idType': '01', 'mobile': '13588888888', 'JxUrl': 'https://access.credit2go.cn/escrow/p2p/page/directRechargePage', 'authFlag': None, 'version': '10', 'txAmount': '1001', 'accountId': '6212462170000118072', 'name': '测试账户凌浩', 'notifyUrl': 'http://www5.91wutong.com/open/jixin/directRechargePageNotifyUrl.htm?channel=yhcg', 'txCode': 'directRechargePage', 'txDate': '20181201'}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:26:37  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:{.*'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功'.*}
 Fri, 31 Aug 2018 16:26:37  INFO test_api.py test_api [ line:65 ] =====开始比对检验返回结果=======
 Fri, 31 Aug 2018 16:26:37  INFO test_api.py test_api [ line:66 ] 正则表达式匹配模式
 Fri, 31 Aug 2018 16:26:37  INFO test_api.py test_api [ line:69 ] 结果匹配，测试用例通过
 Fri, 31 Aug 2018 16:26:37  INFO test_api.py test_api [ line:81 ] 数据库里存在符合预期条件的数据,测试通过:()
 Fri, 31 Aug 2018 16:26:37  INFO test_api.py test_api [ line:84 ] ================结束一次接口请求===========
 Fri, 31 Aug 2018 16:26:37  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:26:37  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【充值后续】305民生充值失败
 Fri, 31 Aug 2018 16:26:37  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.ProductCoreTradeService
 Fri, 31 Aug 2018 16:26:37  INFO test_api.py test_api [ line:39 ] 接口请求method:tradeContinue
 Fri, 31 Aug 2018 16:26:37  INFO test_api.py test_api [ line:40 ] 接口请求data:{"serialno":"201808311540580588hR",'extFields':{"errCode":"0001", "errMsg":"交易失败", "tranSt":"F"}}
 Fri, 31 Aug 2018 16:26:37  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {}, 'errCode': 'Q015', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '查询交易原单结果为空或失败', 'tradeCode': None, 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:26:37  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:{'extFields': {}, 'errCode': '0001', 'tradeStatus': 'F', 'tradeMsg': '交易失败', 'errMsg': '交易失败', 'tradeCode': '0001', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:26:37  INFO test_api.py test_api [ line:56 ] =====开始比对检验返回结果=======
 Fri, 31 Aug 2018 16:26:37  INFO test_api.py test_api [ line:57 ] 全值匹配模式
 Fri, 31 Aug 2018 16:26:37  ERROR test_api.py test_api [ line:62 ] 全值结果比对失败原因为："{'extFields': {}, 'errCode': 'Q015', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '查询交易原单结果为空或失败', 'tradeCode': None, 'exObjFields': {}, 'key': None}" not found in "{'extFields': {}, 'errCode': '0001', 'tradeStatus': 'F', 'tradeMsg': '交易失败', 'errMsg': '交易失败', 'tradeCode': '0001', 'exObjFields': {}, 'key': None}"
Traceback (most recent call last):
  File "H:\python3_apiTest\TestCases\test_api.py", line 59, in test_api
    self.assertIn(str(res),case_data["expected_data"])
  File "F:\python36\lib\unittest\case.py", line 1089, in assertIn
    self.fail(self._formatMessage(msg, standardMsg))
  File "F:\python36\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: "{'extFields': {}, 'errCode': 'Q015', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '查询交易原单结果为空或失败', 'tradeCode': None, 'exObjFields': {}, 'key': None}" not found in "{'extFields': {}, 'errCode': '0001', 'tradeStatus': 'F', 'tradeMsg': '交易失败', 'errMsg': '交易失败', 'tradeCode': '0001', 'exObjFields': {}, 'key': None}"
 Fri, 31 Aug 2018 16:26:37  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:26:37  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【充值】306广发充值
 Fri, 31 Aug 2018 16:26:37  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.VaccoCoreTradeService
 Fri, 31 Aug 2018 16:26:37  INFO test_api.py test_api [ line:39 ] 接口请求method:recharge
 Fri, 31 Aug 2018 16:26:37  INFO test_api.py test_api [ line:40 ] 接口请求data:{
 "subamt":"5000",
 "paymodel":"05",
 "channel":"JX",
 "bankid":"205B0CF78550959969",
 "bankno":"306",
 "bankacco":"6222620110038594231",
 "serialno":"201808311626320953hZ",
 "custno":"1604578759",
 "apkind":"922",
 "subapkind":"922001",
 "apdt":"20180516",
 "aptm":"093540",
 "workdate":"20180516",
 "tradeacco":"001035098604578762",
 "taaccountid":"475B0CB66D40432285",
 "tano":"47",
 "sharetype":"A",
 "accptmd":"1",
 "branchcode":"247000",
 "distributorcode":"247",
"extFields":{'rechargeFlag':'1'}
}
 Fri, 31 Aug 2018 16:26:37  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {'retUrl': None, 'seqNo': '132783', 'txTime': '093540', 'channel': '000002', 'sign': 'FLp7HJOwtKlD7eKFF8gXbxl8OUk+m+nUwio0iMrqhdSSH93t4TKE7BOLcbGPr3dUp6ETWvb9Tzw4fZlczjBhfHWH8NuHf4/MhUTR1M417rcbOB/bY4Mf0eKingq7qYDbVIG7wr5097qcNmxVA+5fwlgZLpdfyAwGKiwehahu89H0D9Px6odtBYMLmS4YFgj6R3oXSXlM/dzb/dy4k9b+yGesTwsimPJAv8oCZUIMBRN4RodXsvcqAnptTiO80eTy260ictGNyTzv1hLgh6KuO+6588yxIOipafy6YhGdiJCVgf9p5kK7ms+wK3oOacgGaHTTY34R/qPFmweyMdJTAA==', 'cardNo': '6228484555533333333', 'idNo': '421023198705019116', 'forgotPwdUrl': None, 'userIP': None, 'currency': '156', 'instCode': '00920001', 'successfulUrl': None, 'authSeq': None, 'bankCode': '30050000', 'idType': '01', 'mobile': '13759947589', 'JxUrl': 'https://access.credit2go.cn/escrow/p2p/page/directRechargePage', 'authFlag': None, 'version': '10', 'txAmount': '5000', 'accountId': '6212462170000078011', 'name': '对对对', 'notifyUrl': 'http://www5.91wutong.com/open/jixin/directRechargePageNotifyUrl.htm?channel=yhcg', 'txCode': 'directRechargePage', 'txDate': '20180516'}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:26:37  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:{.*'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功'.*}
 Fri, 31 Aug 2018 16:26:37  INFO test_api.py test_api [ line:65 ] =====开始比对检验返回结果=======
 Fri, 31 Aug 2018 16:26:37  INFO test_api.py test_api [ line:66 ] 正则表达式匹配模式
 Fri, 31 Aug 2018 16:26:37  INFO test_api.py test_api [ line:69 ] 结果匹配，测试用例通过
 Fri, 31 Aug 2018 16:26:37  INFO test_api.py test_api [ line:81 ] 数据库里存在符合预期条件的数据,测试通过:()
 Fri, 31 Aug 2018 16:26:37  INFO test_api.py test_api [ line:84 ] ================结束一次接口请求===========
 Fri, 31 Aug 2018 16:26:37  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:26:37  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【充值后续】306工行充值成功
 Fri, 31 Aug 2018 16:26:37  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.ProductCoreTradeService
 Fri, 31 Aug 2018 16:26:37  INFO test_api.py test_api [ line:39 ] 接口请求method:tradeContinue
 Fri, 31 Aug 2018 16:26:37  INFO test_api.py test_api [ line:40 ] 接口请求data:{"serialno":"201808311540580980zj","isSend":"1",'extFields':{"errCode":"0000", "errMsg":"交易成功", "tranSt":"Y"}}
 Fri, 31 Aug 2018 16:26:37  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {}, 'errCode': 'Q015', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '查询交易原单结果为空或失败', 'tradeCode': None, 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:26:37  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功！', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:26:37  INFO test_api.py test_api [ line:56 ] =====开始比对检验返回结果=======
 Fri, 31 Aug 2018 16:26:37  INFO test_api.py test_api [ line:57 ] 全值匹配模式
 Fri, 31 Aug 2018 16:26:37  ERROR test_api.py test_api [ line:62 ] 全值结果比对失败原因为："{'extFields': {}, 'errCode': 'Q015', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '查询交易原单结果为空或失败', 'tradeCode': None, 'exObjFields': {}, 'key': None}" not found in "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功！', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}"
Traceback (most recent call last):
  File "H:\python3_apiTest\TestCases\test_api.py", line 59, in test_api
    self.assertIn(str(res),case_data["expected_data"])
  File "F:\python36\lib\unittest\case.py", line 1089, in assertIn
    self.fail(self._formatMessage(msg, standardMsg))
  File "F:\python36\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: "{'extFields': {}, 'errCode': 'Q015', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '查询交易原单结果为空或失败', 'tradeCode': None, 'exObjFields': {}, 'key': None}" not found in "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功！', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}"
 Fri, 31 Aug 2018 16:26:37  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:26:37  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【充值】306广发充值
 Fri, 31 Aug 2018 16:26:37  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.VaccoCoreTradeService
 Fri, 31 Aug 2018 16:26:37  INFO test_api.py test_api [ line:39 ] 接口请求method:recharge
 Fri, 31 Aug 2018 16:26:37  INFO test_api.py test_api [ line:40 ] 接口请求data:{
 "subamt":"5000",
 "paymodel":"05",
 "channel":"JX",
 "bankid":"205B0CF78550959969",
 "bankno":"306",
 "bankacco":"6222620110038594231",
 "serialno":"201808311626320472Yr",
 "custno":"1604578759",
 "apkind":"922",
 "subapkind":"922001",
 "apdt":"20180516",
 "aptm":"093540",
 "workdate":"20180516",
 "tradeacco":"001035098604578762",
 "taaccountid":"475B0CB66D40432285",
 "tano":"47",
 "sharetype":"A",
 "accptmd":"1",
 "branchcode":"247000",
 "distributorcode":"247",
"extFields":{'rechargeFlag':'1'}
}
 Fri, 31 Aug 2018 16:26:37  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {'retUrl': None, 'seqNo': '125181', 'txTime': '093540', 'channel': '000002', 'sign': 'NN4wSrmLfRLEu8UUrweI4uBdjgxwkHJfQNtCxT2T/0ogWRKqvrOcDYFYX34DunNEKg1JkXdpokM157cy0B3i1iVhuQ2McGXOc8KJHnuw6X4dLYk5kFp+c9tEos75esrj3Wxdwiv13MEJ3naReuFSC6bhn4i6Sg2fV6oa3ZVg15Xqabi5iA3exk8NUInfR+O1/LtPLCA0Z3hYUoERuKVl3z1oL8CY0Dkmc6ZCRwmtXBKsSawIedMpA4FYAkAU4ut3vnDG+PELukixMsMa+JUKfIU8DCxn6pTnrMy9vHMpSiQbP0FpP+5xJOGAgjfomkw32DQARP4SvH+xRL+BPsvSCA==', 'cardNo': '6228484555533333333', 'idNo': '421023198705019116', 'forgotPwdUrl': None, 'userIP': None, 'currency': '156', 'instCode': '00920001', 'successfulUrl': None, 'authSeq': None, 'bankCode': '30050000', 'idType': '01', 'mobile': '13759947589', 'JxUrl': 'https://access.credit2go.cn/escrow/p2p/page/directRechargePage', 'authFlag': None, 'version': '10', 'txAmount': '5000', 'accountId': '6212462170000078011', 'name': '对对对', 'notifyUrl': 'http://www5.91wutong.com/open/jixin/directRechargePageNotifyUrl.htm?channel=yhcg', 'txCode': 'directRechargePage', 'txDate': '20180516'}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:26:37  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:{.*'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功'.*}
 Fri, 31 Aug 2018 16:26:37  INFO test_api.py test_api [ line:65 ] =====开始比对检验返回结果=======
 Fri, 31 Aug 2018 16:26:37  INFO test_api.py test_api [ line:66 ] 正则表达式匹配模式
 Fri, 31 Aug 2018 16:26:37  INFO test_api.py test_api [ line:69 ] 结果匹配，测试用例通过
 Fri, 31 Aug 2018 16:26:37  INFO test_api.py test_api [ line:81 ] 数据库里存在符合预期条件的数据,测试通过:()
 Fri, 31 Aug 2018 16:26:37  INFO test_api.py test_api [ line:84 ] ================结束一次接口请求===========
 Fri, 31 Aug 2018 16:26:37  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:26:37  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【充值后续】306工行充值失败
 Fri, 31 Aug 2018 16:26:37  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.ProductCoreTradeService
 Fri, 31 Aug 2018 16:26:37  INFO test_api.py test_api [ line:39 ] 接口请求method:tradeContinue
 Fri, 31 Aug 2018 16:26:37  INFO test_api.py test_api [ line:40 ] 接口请求data:{"serialno":"201808311540580931RS",'extFields':{"errCode":"0001", "errMsg":"交易失败", "tranSt":"F"}}
 Fri, 31 Aug 2018 16:26:37  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {}, 'errCode': 'Q015', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '查询交易原单结果为空或失败', 'tradeCode': None, 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:26:37  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:{'extFields': {}, 'errCode': '0001', 'tradeStatus': 'F', 'tradeMsg': '交易失败', 'errMsg': '交易失败', 'tradeCode': '0001', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:26:37  INFO test_api.py test_api [ line:56 ] =====开始比对检验返回结果=======
 Fri, 31 Aug 2018 16:26:37  INFO test_api.py test_api [ line:57 ] 全值匹配模式
 Fri, 31 Aug 2018 16:26:37  ERROR test_api.py test_api [ line:62 ] 全值结果比对失败原因为："{'extFields': {}, 'errCode': 'Q015', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '查询交易原单结果为空或失败', 'tradeCode': None, 'exObjFields': {}, 'key': None}" not found in "{'extFields': {}, 'errCode': '0001', 'tradeStatus': 'F', 'tradeMsg': '交易失败', 'errMsg': '交易失败', 'tradeCode': '0001', 'exObjFields': {}, 'key': None}"
Traceback (most recent call last):
  File "H:\python3_apiTest\TestCases\test_api.py", line 59, in test_api
    self.assertIn(str(res),case_data["expected_data"])
  File "F:\python36\lib\unittest\case.py", line 1089, in assertIn
    self.fail(self._formatMessage(msg, standardMsg))
  File "F:\python36\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: "{'extFields': {}, 'errCode': 'Q015', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '查询交易原单结果为空或失败', 'tradeCode': None, 'exObjFields': {}, 'key': None}" not found in "{'extFields': {}, 'errCode': '0001', 'tradeStatus': 'F', 'tradeMsg': '交易失败', 'errMsg': '交易失败', 'tradeCode': '0001', 'exObjFields': {}, 'key': None}"
 Fri, 31 Aug 2018 16:26:37  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:26:37  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【充值】307平安充值
 Fri, 31 Aug 2018 16:26:37  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.VaccoCoreTradeService
 Fri, 31 Aug 2018 16:26:37  INFO test_api.py test_api [ line:39 ] 接口请求method:recharge
 Fri, 31 Aug 2018 16:26:37  INFO test_api.py test_api [ line:40 ] 接口请求data:{
 "subamt":"400",
 "paymodel":"05",
 "channel":"JX",
 "bankid":"205B0CF78550959969",
 "bankno":"307",
 "bankacco":"6222620110038594231",
 "serialno":"201808311626320305cA",
 "custno":"1604578759",
 "apkind":"922",
 "subapkind":"922001",
 "apdt":"20180516",
 "aptm":"093540",
 "workdate":"20180516",
 "tradeacco":"001035098604578762",
 "taaccountid":"475B0CB66D40432285",
 "tano":"47",
 "sharetype":"A",
 "accptmd":"1",
 "branchcode":"247000",
 "distributorcode":"247",
"extFields":{'rechargeFlag':'1'}
}
 Fri, 31 Aug 2018 16:26:37  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {'retUrl': None, 'seqNo': '104462', 'txTime': '093540', 'channel': '000002', 'sign': 'IYzpev9jOAJiPmoz2Rl+6NeB97wAQ0sSLGdsHtq4iahe7dvi1N92SIUlQv/H5rByCb4TvaLwVujo43zw7iXDttA/wYtlDe8kjmTKAZwZ9QyJhdGPULiOQvgFva9LJl9g88OqNSQuPcbFhEt1COrd6/NMJkLvhJwYVfIuBzp3+M7lH95uTKiHs3TQElTQlZDWfKlrT2bAQTFJZA1vClM23fslIS1nlMOtREgkAI08xOy9q2h7nQs8roRkmScgh6Sse2UswKVMZAa7AeTLKd0B4aOEniVQNqcmxo8y01g3WwIW7p6k3Wgt6xXZh3MlirJvySXFomWYSbV0JiQRej/zLA==', 'cardNo': '6228484555533333333', 'idNo': '421023198705019116', 'forgotPwdUrl': None, 'userIP': None, 'currency': '156', 'instCode': '00920001', 'successfulUrl': None, 'authSeq': None, 'bankCode': '30050000', 'idType': '01', 'mobile': '13759947589', 'JxUrl': 'https://access.credit2go.cn/escrow/p2p/page/directRechargePage', 'authFlag': None, 'version': '10', 'txAmount': '400', 'accountId': '6212462170000078011', 'name': '对对对', 'notifyUrl': 'http://www5.91wutong.com/open/jixin/directRechargePageNotifyUrl.htm?channel=yhcg', 'txCode': 'directRechargePage', 'txDate': '20180516'}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:26:37  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:{.*'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功'.*}
 Fri, 31 Aug 2018 16:26:37  INFO test_api.py test_api [ line:65 ] =====开始比对检验返回结果=======
 Fri, 31 Aug 2018 16:26:37  INFO test_api.py test_api [ line:66 ] 正则表达式匹配模式
 Fri, 31 Aug 2018 16:26:37  INFO test_api.py test_api [ line:69 ] 结果匹配，测试用例通过
 Fri, 31 Aug 2018 16:26:37  INFO test_api.py test_api [ line:81 ] 数据库里存在符合预期条件的数据,测试通过:()
 Fri, 31 Aug 2018 16:26:37  INFO test_api.py test_api [ line:84 ] ================结束一次接口请求===========
 Fri, 31 Aug 2018 16:26:37  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:26:37  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【充值后续】307平安充值成功
 Fri, 31 Aug 2018 16:26:37  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.ProductCoreTradeService
 Fri, 31 Aug 2018 16:26:37  INFO test_api.py test_api [ line:39 ] 接口请求method:tradeContinue
 Fri, 31 Aug 2018 16:26:37  INFO test_api.py test_api [ line:40 ] 接口请求data:{"serialno":"201808311540580832TP","isSend":"1",'extFields':{"errCode":"0000", "errMsg":"交易成功", "tranSt":"Y"}}
 Fri, 31 Aug 2018 16:26:37  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {}, 'errCode': 'Q015', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '查询交易原单结果为空或失败', 'tradeCode': None, 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:26:37  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功！', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:26:37  INFO test_api.py test_api [ line:56 ] =====开始比对检验返回结果=======
 Fri, 31 Aug 2018 16:26:37  INFO test_api.py test_api [ line:57 ] 全值匹配模式
 Fri, 31 Aug 2018 16:26:37  ERROR test_api.py test_api [ line:62 ] 全值结果比对失败原因为："{'extFields': {}, 'errCode': 'Q015', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '查询交易原单结果为空或失败', 'tradeCode': None, 'exObjFields': {}, 'key': None}" not found in "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功！', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}"
Traceback (most recent call last):
  File "H:\python3_apiTest\TestCases\test_api.py", line 59, in test_api
    self.assertIn(str(res),case_data["expected_data"])
  File "F:\python36\lib\unittest\case.py", line 1089, in assertIn
    self.fail(self._formatMessage(msg, standardMsg))
  File "F:\python36\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: "{'extFields': {}, 'errCode': 'Q015', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '查询交易原单结果为空或失败', 'tradeCode': None, 'exObjFields': {}, 'key': None}" not found in "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功！', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}"
 Fri, 31 Aug 2018 16:26:37  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:26:37  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【充值】307平安充值
 Fri, 31 Aug 2018 16:26:37  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.VaccoCoreTradeService
 Fri, 31 Aug 2018 16:26:37  INFO test_api.py test_api [ line:39 ] 接口请求method:recharge
 Fri, 31 Aug 2018 16:26:37  INFO test_api.py test_api [ line:40 ] 接口请求data:{
 "subamt":"400",
 "paymodel":"05",
 "channel":"JX",
 "bankid":"205B0CF78550959969",
 "bankno":"307",
 "bankacco":"6222620110038594231",
 "serialno":"201808311626320831cS",
 "custno":"1604578759",
 "apkind":"922",
 "subapkind":"922001",
 "apdt":"20180516",
 "aptm":"093540",
 "workdate":"20180516",
 "tradeacco":"001035098604578762",
 "taaccountid":"475B0CB66D40432285",
 "tano":"47",
 "sharetype":"A",
 "accptmd":"1",
 "branchcode":"247000",
 "distributorcode":"247",
"extFields":{'rechargeFlag':'1'}
}
 Fri, 31 Aug 2018 16:26:38  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {'retUrl': None, 'seqNo': '123502', 'txTime': '093540', 'channel': '000002', 'sign': 'TTeSPceMwwIRDcFXiU7+4s0++6veTlEWMCkl+k7mnRYn08kJfGuREzbe40vp1Sh49wO4d6pKTEAfQobjlaQk0fD/V1WBGgBSRESPbgWWvm9rHDqwtqy1tQL+P7cquTur0JCC3doCXLYa842On+tH+sXLZfozvzpauit6KeUvrejzI2iD/PAW7J/+FthSNFLHb6jVIg0XB/c0dgJ61oX/ji/cZM2Ovu6Wcy56pWJRocUQ02OnPgyo67tM2BNxIvHRdVryI19BwYaup5tUA0ilmWiEUAr6ivF3H3T6OV1+sI7T25kc7FsRZWFDpzpiStnmhZF/j7YYtG7Dl25mesJ8xQ==', 'cardNo': '6228484555533333333', 'idNo': '421023198705019116', 'forgotPwdUrl': None, 'userIP': None, 'currency': '156', 'instCode': '00920001', 'successfulUrl': None, 'authSeq': None, 'bankCode': '30050000', 'idType': '01', 'mobile': '13759947589', 'JxUrl': 'https://access.credit2go.cn/escrow/p2p/page/directRechargePage', 'authFlag': None, 'version': '10', 'txAmount': '400', 'accountId': '6212462170000078011', 'name': '对对对', 'notifyUrl': 'http://www5.91wutong.com/open/jixin/directRechargePageNotifyUrl.htm?channel=yhcg', 'txCode': 'directRechargePage', 'txDate': '20180516'}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:26:38  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:{.*'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功'.*}
 Fri, 31 Aug 2018 16:26:38  INFO test_api.py test_api [ line:65 ] =====开始比对检验返回结果=======
 Fri, 31 Aug 2018 16:26:38  INFO test_api.py test_api [ line:66 ] 正则表达式匹配模式
 Fri, 31 Aug 2018 16:26:38  INFO test_api.py test_api [ line:69 ] 结果匹配，测试用例通过
 Fri, 31 Aug 2018 16:26:38  INFO test_api.py test_api [ line:81 ] 数据库里存在符合预期条件的数据,测试通过:()
 Fri, 31 Aug 2018 16:26:38  INFO test_api.py test_api [ line:84 ] ================结束一次接口请求===========
 Fri, 31 Aug 2018 16:26:38  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:26:38  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【充值后续】307平安充值失败
 Fri, 31 Aug 2018 16:26:38  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.ProductCoreTradeService
 Fri, 31 Aug 2018 16:26:38  INFO test_api.py test_api [ line:39 ] 接口请求method:tradeContinue
 Fri, 31 Aug 2018 16:26:38  INFO test_api.py test_api [ line:40 ] 接口请求data:{"serialno":"201808311540580934VM",'extFields':{"errCode":"0001", "errMsg":"交易失败", "tranSt":"F"}}
 Fri, 31 Aug 2018 16:26:38  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {}, 'errCode': 'Q015', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '查询交易原单结果为空或失败', 'tradeCode': None, 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:26:38  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:{'extFields': {}, 'errCode': '0001', 'tradeStatus': 'F', 'tradeMsg': '交易失败', 'errMsg': '交易失败', 'tradeCode': '0001', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:26:38  INFO test_api.py test_api [ line:56 ] =====开始比对检验返回结果=======
 Fri, 31 Aug 2018 16:26:38  INFO test_api.py test_api [ line:57 ] 全值匹配模式
 Fri, 31 Aug 2018 16:26:38  ERROR test_api.py test_api [ line:62 ] 全值结果比对失败原因为："{'extFields': {}, 'errCode': 'Q015', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '查询交易原单结果为空或失败', 'tradeCode': None, 'exObjFields': {}, 'key': None}" not found in "{'extFields': {}, 'errCode': '0001', 'tradeStatus': 'F', 'tradeMsg': '交易失败', 'errMsg': '交易失败', 'tradeCode': '0001', 'exObjFields': {}, 'key': None}"
Traceback (most recent call last):
  File "H:\python3_apiTest\TestCases\test_api.py", line 59, in test_api
    self.assertIn(str(res),case_data["expected_data"])
  File "F:\python36\lib\unittest\case.py", line 1089, in assertIn
    self.fail(self._formatMessage(msg, standardMsg))
  File "F:\python36\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: "{'extFields': {}, 'errCode': 'Q015', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '查询交易原单结果为空或失败', 'tradeCode': None, 'exObjFields': {}, 'key': None}" not found in "{'extFields': {}, 'errCode': '0001', 'tradeStatus': 'F', 'tradeMsg': '交易失败', 'errMsg': '交易失败', 'tradeCode': '0001', 'exObjFields': {}, 'key': None}"
 Fri, 31 Aug 2018 16:26:38  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:26:38  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【充值】308招商充值
 Fri, 31 Aug 2018 16:26:38  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.VaccoCoreTradeService
 Fri, 31 Aug 2018 16:26:38  INFO test_api.py test_api [ line:39 ] 接口请求method:recharge
 Fri, 31 Aug 2018 16:26:38  INFO test_api.py test_api [ line:40 ] 接口请求data:{
 "subamt":"50000.9",
 "paymodel":"05",
 "channel":"JX",
 "bankid":"205B0CF78550959969",
 "bankno":"308",
 "bankacco":"6222620110038594231",
 "serialno":"201808311626320366ki",
 "custno":"1604578759",
 "apkind":"922",
 "subapkind":"922001",
 "apdt":"20180516",
 "aptm":"093540",
 "workdate":"20180516",
 "tradeacco":"001035098604578762",
 "taaccountid":"475B0CB66D40432285",
 "tano":"47",
 "sharetype":"A",
 "accptmd":"1",
 "branchcode":"247000",
 "distributorcode":"247",
"extFields":{'rechargeFlag':'1'}
}
 Fri, 31 Aug 2018 16:26:38  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {'retUrl': None, 'seqNo': '132943', 'txTime': '093540', 'channel': '000002', 'sign': 'UCsZEsxoOqGaT4oCjHxkiAZmTocrTOCGJ1WAv/Vnio0owaPxPhhXAVQqF6njgyY7eSdDdRWU6aR/y/i8F1rZZpiclzqOFnyCjiDBPd4VgbNiZgMdQT/w0KZAB8wi8ipSLAhM0FRqoBrUvFa65QInEQoSgzHv3To4zO75J91/6ljE7J4ObY3N8bwntHcwrweAYYULoXBZTUatR54I4/bvRjH+ZKVdeLO9/UTfNb+XmL4KNESyYvqSCTH6sbMZCNEA9vDlvAYSaP7PiUuczIhgmnsPF7PFyilFRrU2sxHCZAApg0W9ZNZcURmC1X7oBCw7vmIaRhSu4qWHkaAP4Fos0Q==', 'cardNo': '6228484555533333333', 'idNo': '421023198705019116', 'forgotPwdUrl': None, 'userIP': None, 'currency': '156', 'instCode': '00920001', 'successfulUrl': None, 'authSeq': None, 'bankCode': '30050000', 'idType': '01', 'mobile': '13759947589', 'JxUrl': 'https://access.credit2go.cn/escrow/p2p/page/directRechargePage', 'authFlag': None, 'version': '10', 'txAmount': '50000.9', 'accountId': '6212462170000078011', 'name': '对对对', 'notifyUrl': 'http://www5.91wutong.com/open/jixin/directRechargePageNotifyUrl.htm?channel=yhcg', 'txCode': 'directRechargePage', 'txDate': '20180516'}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:26:38  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:{.*'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功'.*}
 Fri, 31 Aug 2018 16:26:38  INFO test_api.py test_api [ line:65 ] =====开始比对检验返回结果=======
 Fri, 31 Aug 2018 16:26:38  INFO test_api.py test_api [ line:66 ] 正则表达式匹配模式
 Fri, 31 Aug 2018 16:26:38  INFO test_api.py test_api [ line:69 ] 结果匹配，测试用例通过
 Fri, 31 Aug 2018 16:26:38  INFO test_api.py test_api [ line:81 ] 数据库里存在符合预期条件的数据,测试通过:()
 Fri, 31 Aug 2018 16:26:38  INFO test_api.py test_api [ line:84 ] ================结束一次接口请求===========
 Fri, 31 Aug 2018 16:26:38  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:26:38  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【充值后续】308招商充值成功
 Fri, 31 Aug 2018 16:26:38  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.ProductCoreTradeService
 Fri, 31 Aug 2018 16:26:38  INFO test_api.py test_api [ line:39 ] 接口请求method:tradeContinue
 Fri, 31 Aug 2018 16:26:38  INFO test_api.py test_api [ line:40 ] 接口请求data:{"serialno":"201808311540580678vI","isSend":"1",'extFields':{"errCode":"0000", "errMsg":"交易成功", "tranSt":"Y"}}
 Fri, 31 Aug 2018 16:26:38  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {}, 'errCode': 'Q015', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '查询交易原单结果为空或失败', 'tradeCode': None, 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:26:38  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功！', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:26:38  INFO test_api.py test_api [ line:56 ] =====开始比对检验返回结果=======
 Fri, 31 Aug 2018 16:26:38  INFO test_api.py test_api [ line:57 ] 全值匹配模式
 Fri, 31 Aug 2018 16:26:38  ERROR test_api.py test_api [ line:62 ] 全值结果比对失败原因为："{'extFields': {}, 'errCode': 'Q015', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '查询交易原单结果为空或失败', 'tradeCode': None, 'exObjFields': {}, 'key': None}" not found in "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功！', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}"
Traceback (most recent call last):
  File "H:\python3_apiTest\TestCases\test_api.py", line 59, in test_api
    self.assertIn(str(res),case_data["expected_data"])
  File "F:\python36\lib\unittest\case.py", line 1089, in assertIn
    self.fail(self._formatMessage(msg, standardMsg))
  File "F:\python36\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: "{'extFields': {}, 'errCode': 'Q015', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '查询交易原单结果为空或失败', 'tradeCode': None, 'exObjFields': {}, 'key': None}" not found in "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功！', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}"
 Fri, 31 Aug 2018 16:26:38  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:26:38  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【充值】308招商充值
 Fri, 31 Aug 2018 16:26:38  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.VaccoCoreTradeService
 Fri, 31 Aug 2018 16:26:38  INFO test_api.py test_api [ line:39 ] 接口请求method:recharge
 Fri, 31 Aug 2018 16:26:38  INFO test_api.py test_api [ line:40 ] 接口请求data:{
 "subamt":"5000",
 "paymodel":"05",
 "channel":"JX",
 "bankid":"205B0CF78550959969",
 "bankno":"308",
 "bankacco":"6222620110038594231",
 "serialno":"201808311626320134bL",
 "custno":"1604578759",
 "apkind":"922",
 "subapkind":"922001",
 "apdt":"20180516",
 "aptm":"093540",
 "workdate":"20180516",
 "tradeacco":"001035098604578762",
 "taaccountid":"475B0CB66D40432285",
 "tano":"47",
 "sharetype":"A",
 "accptmd":"1",
 "branchcode":"247000",
 "distributorcode":"247",
"extFields":{'rechargeFlag':'1'}
}
 Fri, 31 Aug 2018 16:26:38  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {'retUrl': None, 'seqNo': '132277', 'txTime': '093540', 'channel': '000002', 'sign': 'ONOE0cjNiXEM1hl6dNiRcMMywjMCK8BLwG+iYOph1ZDyH76DGRUXhPatefFYYSjjsw/nn7TAKEebI/qiY6HxmeDPKBtp4S59TU6fcflrA0GipFAPvuT0rQ2LlUjfasXK5/9tb/pyUsQRwFPrcMVdAZnji7+SWmpJalKpAoPlTqEVyxAttq4KzFbZFwxNQ7tm5ABlwJFmMuANLVJXlx+FXVt67kZwtXNQ9WNdKQovFJ1BvJblQkT/aQgM7hJZr8dfKzZ5JerECg3MDWgimZqJ3Xx3F1T4wZXnNNFMwCuHD3GmRODHLggmFD1qxqhSqhYtpjpUg/Ck81g2RoKLF449Kw==', 'cardNo': '6228484555533333333', 'idNo': '421023198705019116', 'forgotPwdUrl': None, 'userIP': None, 'currency': '156', 'instCode': '00920001', 'successfulUrl': None, 'authSeq': None, 'bankCode': '30050000', 'idType': '01', 'mobile': '13759947589', 'JxUrl': 'https://access.credit2go.cn/escrow/p2p/page/directRechargePage', 'authFlag': None, 'version': '10', 'txAmount': '5000', 'accountId': '6212462170000078011', 'name': '对对对', 'notifyUrl': 'http://www5.91wutong.com/open/jixin/directRechargePageNotifyUrl.htm?channel=yhcg', 'txCode': 'directRechargePage', 'txDate': '20180516'}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:26:38  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:{.*'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功'.*}
 Fri, 31 Aug 2018 16:26:38  INFO test_api.py test_api [ line:65 ] =====开始比对检验返回结果=======
 Fri, 31 Aug 2018 16:26:38  INFO test_api.py test_api [ line:66 ] 正则表达式匹配模式
 Fri, 31 Aug 2018 16:26:38  INFO test_api.py test_api [ line:69 ] 结果匹配，测试用例通过
 Fri, 31 Aug 2018 16:26:38  INFO test_api.py test_api [ line:81 ] 数据库里存在符合预期条件的数据,测试通过:()
 Fri, 31 Aug 2018 16:26:38  INFO test_api.py test_api [ line:84 ] ================结束一次接口请求===========
 Fri, 31 Aug 2018 16:26:38  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:26:38  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【充值后续】308招商充值失败
 Fri, 31 Aug 2018 16:26:38  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.ProductCoreTradeService
 Fri, 31 Aug 2018 16:26:38  INFO test_api.py test_api [ line:39 ] 接口请求method:tradeContinue
 Fri, 31 Aug 2018 16:26:38  INFO test_api.py test_api [ line:40 ] 接口请求data:{"serialno":"201808311540580734Bs",'extFields':{"errCode":"0001", "errMsg":"交易失败", "tranSt":"F"}}
 Fri, 31 Aug 2018 16:26:38  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {}, 'errCode': 'Q015', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '查询交易原单结果为空或失败', 'tradeCode': None, 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:26:38  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:{'extFields': {}, 'errCode': '0001', 'tradeStatus': 'F', 'tradeMsg': '交易失败', 'errMsg': '交易失败', 'tradeCode': '0001', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:26:38  INFO test_api.py test_api [ line:56 ] =====开始比对检验返回结果=======
 Fri, 31 Aug 2018 16:26:38  INFO test_api.py test_api [ line:57 ] 全值匹配模式
 Fri, 31 Aug 2018 16:26:38  ERROR test_api.py test_api [ line:62 ] 全值结果比对失败原因为："{'extFields': {}, 'errCode': 'Q015', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '查询交易原单结果为空或失败', 'tradeCode': None, 'exObjFields': {}, 'key': None}" not found in "{'extFields': {}, 'errCode': '0001', 'tradeStatus': 'F', 'tradeMsg': '交易失败', 'errMsg': '交易失败', 'tradeCode': '0001', 'exObjFields': {}, 'key': None}"
Traceback (most recent call last):
  File "H:\python3_apiTest\TestCases\test_api.py", line 59, in test_api
    self.assertIn(str(res),case_data["expected_data"])
  File "F:\python36\lib\unittest\case.py", line 1089, in assertIn
    self.fail(self._formatMessage(msg, standardMsg))
  File "F:\python36\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: "{'extFields': {}, 'errCode': 'Q015', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '查询交易原单结果为空或失败', 'tradeCode': None, 'exObjFields': {}, 'key': None}" not found in "{'extFields': {}, 'errCode': '0001', 'tradeStatus': 'F', 'tradeMsg': '交易失败', 'errMsg': '交易失败', 'tradeCode': '0001', 'exObjFields': {}, 'key': None}"
 Fri, 31 Aug 2018 16:26:38  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:26:38  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【充值】309兴业充值
 Fri, 31 Aug 2018 16:26:38  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.VaccoCoreTradeService
 Fri, 31 Aug 2018 16:26:38  INFO test_api.py test_api [ line:39 ] 接口请求method:recharge
 Fri, 31 Aug 2018 16:26:38  INFO test_api.py test_api [ line:40 ] 接口请求data:{
 "subamt":"1000.00",
 "paymodel":"05",
 "channel":"JX",
 "bankid":"205B0CF78550959969",
 "bankno":"309",
 "bankacco":"6222620110038594231",
 "serialno":"201808311626320908rf",
 "custno":"1604578759",
 "apkind":"922",
 "subapkind":"922001",
 "apdt":"20180516",
 "aptm":"093540",
 "workdate":"20180516",
 "tradeacco":"001035098604578762",
 "taaccountid":"475B0CB66D40432285",
 "tano":"47",
 "sharetype":"A",
 "accptmd":"1",
 "branchcode":"247000",
 "distributorcode":"247",
"extFields":{'rechargeFlag':'1'}
}
 Fri, 31 Aug 2018 16:26:38  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {'retUrl': None, 'seqNo': '125520', 'txTime': '093540', 'channel': '000002', 'sign': 'YDLnxARq6NDcjLVJLTAzlKJWCHsMJgWnnmEFTwe/00pDIC6Oh0w69aIM1vZIjK+Dq0eIJYnFG3ydYgXAyuzf6iDoA4aHa/Mjp6UFgoujJIH4PJiXjDDTp69TttKQdUBGcLQw09fa0XzRC/tm6+s6smwjIKwABQd7OEzSWCbOM9B0WEu9Dukd3Zjq/3pYTSy++g0akyW/mfKeisIzwdN2KKEfQ2lTAoDeyyOW2qVr9hMfU1WAzohIGDqwjLfZ1G+9tMwSTRpEsA97WzxdfmuBqZki/Mw6FqtZoARuJcpP93xjGKJLONvjPlRVdPCaU5r1XwNbqoE5rbasM0UHjuJH8A==', 'cardNo': '6228484555533333333', 'idNo': '421023198705019116', 'forgotPwdUrl': None, 'userIP': None, 'currency': '156', 'instCode': '00920001', 'successfulUrl': None, 'authSeq': None, 'bankCode': '30050000', 'idType': '01', 'mobile': '13759947589', 'JxUrl': 'https://access.credit2go.cn/escrow/p2p/page/directRechargePage', 'authFlag': None, 'version': '10', 'txAmount': '1000.00', 'accountId': '6212462170000078011', 'name': '对对对', 'notifyUrl': 'http://www5.91wutong.com/open/jixin/directRechargePageNotifyUrl.htm?channel=yhcg', 'txCode': 'directRechargePage', 'txDate': '20180516'}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:26:38  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:{.*'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功'.*}
 Fri, 31 Aug 2018 16:26:38  INFO test_api.py test_api [ line:65 ] =====开始比对检验返回结果=======
 Fri, 31 Aug 2018 16:26:38  INFO test_api.py test_api [ line:66 ] 正则表达式匹配模式
 Fri, 31 Aug 2018 16:26:38  INFO test_api.py test_api [ line:69 ] 结果匹配，测试用例通过
 Fri, 31 Aug 2018 16:26:38  INFO test_api.py test_api [ line:81 ] 数据库里存在符合预期条件的数据,测试通过:()
 Fri, 31 Aug 2018 16:26:38  INFO test_api.py test_api [ line:84 ] ================结束一次接口请求===========
 Fri, 31 Aug 2018 16:26:38  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:26:38  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【充值后续】309工行充值成功
 Fri, 31 Aug 2018 16:26:38  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.ProductCoreTradeService
 Fri, 31 Aug 2018 16:26:38  INFO test_api.py test_api [ line:39 ] 接口请求method:tradeContinue
 Fri, 31 Aug 2018 16:26:38  INFO test_api.py test_api [ line:40 ] 接口请求data:{"serialno":"201808311540580425Gp","isSend":"1",'extFields':{"errCode":"0000", "errMsg":"交易成功", "tranSt":"Y"}}
 Fri, 31 Aug 2018 16:26:38  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {}, 'errCode': 'Q015', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '查询交易原单结果为空或失败', 'tradeCode': None, 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:26:38  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功！', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:26:38  INFO test_api.py test_api [ line:56 ] =====开始比对检验返回结果=======
 Fri, 31 Aug 2018 16:26:38  INFO test_api.py test_api [ line:57 ] 全值匹配模式
 Fri, 31 Aug 2018 16:26:38  ERROR test_api.py test_api [ line:62 ] 全值结果比对失败原因为："{'extFields': {}, 'errCode': 'Q015', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '查询交易原单结果为空或失败', 'tradeCode': None, 'exObjFields': {}, 'key': None}" not found in "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功！', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}"
Traceback (most recent call last):
  File "H:\python3_apiTest\TestCases\test_api.py", line 59, in test_api
    self.assertIn(str(res),case_data["expected_data"])
  File "F:\python36\lib\unittest\case.py", line 1089, in assertIn
    self.fail(self._formatMessage(msg, standardMsg))
  File "F:\python36\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: "{'extFields': {}, 'errCode': 'Q015', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '查询交易原单结果为空或失败', 'tradeCode': None, 'exObjFields': {}, 'key': None}" not found in "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功！', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}"
 Fri, 31 Aug 2018 16:26:38  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:26:38  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【充值】309兴业充值
 Fri, 31 Aug 2018 16:26:38  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.VaccoCoreTradeService
 Fri, 31 Aug 2018 16:26:38  INFO test_api.py test_api [ line:39 ] 接口请求method:recharge
 Fri, 31 Aug 2018 16:26:38  INFO test_api.py test_api [ line:40 ] 接口请求data:{
 "subamt":"5000",
 "paymodel":"05",
 "channel":"JX",
 "bankid":"205B0CF78550959969",
 "bankno":"309",
 "bankacco":"6222620110038594231",
 "serialno":"201808311626320754dJ",
 "custno":"1604578759",
 "apkind":"922",
 "subapkind":"922001",
 "apdt":"20180516",
 "aptm":"093540",
 "workdate":"20180516",
 "tradeacco":"001035098604578762",
 "taaccountid":"475B0CB66D40432285",
 "tano":"47",
 "sharetype":"A",
 "accptmd":"1",
 "branchcode":"247000",
 "distributorcode":"247",
"extFields":{'rechargeFlag':'1'}
}
 Fri, 31 Aug 2018 16:26:38  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {'retUrl': None, 'seqNo': '122031', 'txTime': '093540', 'channel': '000002', 'sign': 'OvZBNpu1EWq2cPdtHliouvgZdsMw6KXpyR+hc2+ArJ95M5/b7sPCXhkYibiaAIfuQi5iA6CT4+hPTHR4iON+3ig0inn8GLrpFuuc6kRT764t5XImTroyWdcEOR0l8IbDWDORwq/U24urFeaeyNj/PUSLyi1mt8FHrRKtjDFgmQCG8bqupYSVm+Yk2GAx3xdnJ3WXfVazWAmfiAwjAlDqXDKy47UESyQeOC8aPdeai9hfN8EwJuE2sA681psRzdwyAA1GpJI/0zeV8TnqfkhW9MlGoLFeQnvyZpwDeEtTxJjuErGCbnZysu1WcZ5PjHsImrtqPt3pyqyQmF6ct+eW7g==', 'cardNo': '6228484555533333333', 'idNo': '421023198705019116', 'forgotPwdUrl': None, 'userIP': None, 'currency': '156', 'instCode': '00920001', 'successfulUrl': None, 'authSeq': None, 'bankCode': '30050000', 'idType': '01', 'mobile': '13759947589', 'JxUrl': 'https://access.credit2go.cn/escrow/p2p/page/directRechargePage', 'authFlag': None, 'version': '10', 'txAmount': '5000', 'accountId': '6212462170000078011', 'name': '对对对', 'notifyUrl': 'http://www5.91wutong.com/open/jixin/directRechargePageNotifyUrl.htm?channel=yhcg', 'txCode': 'directRechargePage', 'txDate': '20180516'}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:26:38  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:{.*'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功'.*}
 Fri, 31 Aug 2018 16:26:38  INFO test_api.py test_api [ line:65 ] =====开始比对检验返回结果=======
 Fri, 31 Aug 2018 16:26:38  INFO test_api.py test_api [ line:66 ] 正则表达式匹配模式
 Fri, 31 Aug 2018 16:26:38  INFO test_api.py test_api [ line:69 ] 结果匹配，测试用例通过
 Fri, 31 Aug 2018 16:26:38  INFO test_api.py test_api [ line:81 ] 数据库里存在符合预期条件的数据,测试通过:()
 Fri, 31 Aug 2018 16:26:38  INFO test_api.py test_api [ line:84 ] ================结束一次接口请求===========
 Fri, 31 Aug 2018 16:26:38  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:26:38  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【充值后续】309工行充值失败
 Fri, 31 Aug 2018 16:26:38  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.ProductCoreTradeService
 Fri, 31 Aug 2018 16:26:38  INFO test_api.py test_api [ line:39 ] 接口请求method:tradeContinue
 Fri, 31 Aug 2018 16:26:38  INFO test_api.py test_api [ line:40 ] 接口请求data:{"serialno":"201808311540580669Eu",'extFields':{"errCode":"0001", "errMsg":"交易失败", "tranSt":"F"}}
 Fri, 31 Aug 2018 16:26:38  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {}, 'errCode': 'Q015', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '查询交易原单结果为空或失败', 'tradeCode': None, 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:26:38  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:{'extFields': {}, 'errCode': '0001', 'tradeStatus': 'F', 'tradeMsg': '交易失败', 'errMsg': '交易失败', 'tradeCode': '0001', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:26:38  INFO test_api.py test_api [ line:56 ] =====开始比对检验返回结果=======
 Fri, 31 Aug 2018 16:26:38  INFO test_api.py test_api [ line:57 ] 全值匹配模式
 Fri, 31 Aug 2018 16:26:38  ERROR test_api.py test_api [ line:62 ] 全值结果比对失败原因为："{'extFields': {}, 'errCode': 'Q015', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '查询交易原单结果为空或失败', 'tradeCode': None, 'exObjFields': {}, 'key': None}" not found in "{'extFields': {}, 'errCode': '0001', 'tradeStatus': 'F', 'tradeMsg': '交易失败', 'errMsg': '交易失败', 'tradeCode': '0001', 'exObjFields': {}, 'key': None}"
Traceback (most recent call last):
  File "H:\python3_apiTest\TestCases\test_api.py", line 59, in test_api
    self.assertIn(str(res),case_data["expected_data"])
  File "F:\python36\lib\unittest\case.py", line 1089, in assertIn
    self.fail(self._formatMessage(msg, standardMsg))
  File "F:\python36\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: "{'extFields': {}, 'errCode': 'Q015', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '查询交易原单结果为空或失败', 'tradeCode': None, 'exObjFields': {}, 'key': None}" not found in "{'extFields': {}, 'errCode': '0001', 'tradeStatus': 'F', 'tradeMsg': '交易失败', 'errMsg': '交易失败', 'tradeCode': '0001', 'exObjFields': {}, 'key': None}"
 Fri, 31 Aug 2018 16:26:38  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:26:38  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【充值】310浦发充值成功
 Fri, 31 Aug 2018 16:26:38  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.VaccoCoreTradeService
 Fri, 31 Aug 2018 16:26:38  INFO test_api.py test_api [ line:39 ] 接口请求method:recharge
 Fri, 31 Aug 2018 16:26:38  INFO test_api.py test_api [ line:40 ] 接口请求data:{
 "subamt":"222",
 "paymodel":"05",
 "channel":"JX",
 "bankid":"205B0CF78550959969",
 "bankno":"310",
 "bankacco":"6222620110038594231",
 "serialno":"201808311626320827SU",
 "custno":"1604578759",
 "apkind":"922",
 "subapkind":"922001",
 "apdt":"20180516",
 "aptm":"093540",
 "workdate":"20180516",
 "tradeacco":"001035098604578762",
 "taaccountid":"475B0CB66D40432285",
 "tano":"47",
 "sharetype":"A",
 "accptmd":"1",
 "branchcode":"247000",
 "distributorcode":"247",
"extFields":{'rechargeFlag':'1'}
}
 Fri, 31 Aug 2018 16:26:39  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {'retUrl': None, 'seqNo': '101528', 'txTime': '093540', 'channel': '000002', 'sign': 'KC8frgSpoHFB5/KjRoF/fqG+LcXv3WUEbX9xT5fjdYoqns3m/TSDh38mhn+hC35MBEzUJIGGtJNWxC07PVBJz4aqpHCwk4lV7RCnUPDgVAuomYk8H7eZTs5EoLG1vBeFJfogggZuffpBmNhgetKLqw4wV29SpKV1vALU2pf3TJNLflSrCgTXS+cbjYgToQpli546R1uAbtjkhf52J/1IagfU1ihN4VVUwHCHzAY6dAD+1+MY9+HDBxbe/QIaTLysxnLR7vs0uLoxms/8wVVf8cmZQtCCpRpwBDEpFb1IY7RqRR9hrdbkqV4tWM4LJi9tO7r47TV1FoGb7ubSYg7bnw==', 'cardNo': '6228484555533333333', 'idNo': '421023198705019116', 'forgotPwdUrl': None, 'userIP': None, 'currency': '156', 'instCode': '00920001', 'successfulUrl': None, 'authSeq': None, 'bankCode': '30050000', 'idType': '01', 'mobile': '13759947589', 'JxUrl': 'https://access.credit2go.cn/escrow/p2p/page/directRechargePage', 'authFlag': None, 'version': '10', 'txAmount': '222', 'accountId': '6212462170000078011', 'name': '对对对', 'notifyUrl': 'http://www5.91wutong.com/open/jixin/directRechargePageNotifyUrl.htm?channel=yhcg', 'txCode': 'directRechargePage', 'txDate': '20180516'}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:26:39  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:{.*'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功'.*}
 Fri, 31 Aug 2018 16:26:39  INFO test_api.py test_api [ line:65 ] =====开始比对检验返回结果=======
 Fri, 31 Aug 2018 16:26:39  INFO test_api.py test_api [ line:66 ] 正则表达式匹配模式
 Fri, 31 Aug 2018 16:26:39  INFO test_api.py test_api [ line:69 ] 结果匹配，测试用例通过
 Fri, 31 Aug 2018 16:26:39  INFO test_api.py test_api [ line:81 ] 数据库里存在符合预期条件的数据,测试通过:()
 Fri, 31 Aug 2018 16:26:39  INFO test_api.py test_api [ line:84 ] ================结束一次接口请求===========
 Fri, 31 Aug 2018 16:26:39  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:26:39  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【充值后续】310浦发充值成功
 Fri, 31 Aug 2018 16:26:39  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.ProductCoreTradeService
 Fri, 31 Aug 2018 16:26:39  INFO test_api.py test_api [ line:39 ] 接口请求method:tradeContinue
 Fri, 31 Aug 2018 16:26:39  INFO test_api.py test_api [ line:40 ] 接口请求data:{"serialno":"201808311540580841Qy","isSend":"1",'extFields':{"errCode":"0000", "errMsg":"交易成功", "tranSt":"Y"}}
 Fri, 31 Aug 2018 16:26:39  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {}, 'errCode': 'Q015', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '查询交易原单结果为空或失败', 'tradeCode': None, 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:26:39  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功！', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:26:39  INFO test_api.py test_api [ line:56 ] =====开始比对检验返回结果=======
 Fri, 31 Aug 2018 16:26:39  INFO test_api.py test_api [ line:57 ] 全值匹配模式
 Fri, 31 Aug 2018 16:26:39  ERROR test_api.py test_api [ line:62 ] 全值结果比对失败原因为："{'extFields': {}, 'errCode': 'Q015', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '查询交易原单结果为空或失败', 'tradeCode': None, 'exObjFields': {}, 'key': None}" not found in "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功！', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}"
Traceback (most recent call last):
  File "H:\python3_apiTest\TestCases\test_api.py", line 59, in test_api
    self.assertIn(str(res),case_data["expected_data"])
  File "F:\python36\lib\unittest\case.py", line 1089, in assertIn
    self.fail(self._formatMessage(msg, standardMsg))
  File "F:\python36\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: "{'extFields': {}, 'errCode': 'Q015', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '查询交易原单结果为空或失败', 'tradeCode': None, 'exObjFields': {}, 'key': None}" not found in "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功！', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}"
 Fri, 31 Aug 2018 16:26:39  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:26:39  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【充值】310浦发充值成功
 Fri, 31 Aug 2018 16:26:39  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.VaccoCoreTradeService
 Fri, 31 Aug 2018 16:26:39  INFO test_api.py test_api [ line:39 ] 接口请求method:recharge
 Fri, 31 Aug 2018 16:26:39  INFO test_api.py test_api [ line:40 ] 接口请求data:{
 "subamt":"5000",
 "paymodel":"05",
 "channel":"JX",
 "bankid":"205B0CF78550959969",
 "bankno":"310",
 "bankacco":"6222620110038594231",
 "serialno":"20180831162632048MY",
 "custno":"1604578759",
 "apkind":"922",
 "subapkind":"922001",
 "apdt":"20180516",
 "aptm":"093540",
 "workdate":"20180516",
 "tradeacco":"001035098604578762",
 "taaccountid":"475B0CB66D40432285",
 "tano":"47",
 "sharetype":"A",
 "accptmd":"1",
 "branchcode":"247000",
 "distributorcode":"247",
"extFields":{'rechargeFlag':'1'}
}
 Fri, 31 Aug 2018 16:26:39  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {'retUrl': None, 'seqNo': '144002', 'txTime': '093540', 'channel': '000002', 'sign': 'LCtxBjhMaOWtSTvAMM2TiZlxMwWS9jVowi3xqcNd+18DE7NOoDOqmmpFeCxdGmLdKh6r+tCyO6EauVi1Qzqh9CpUdxaOQu7n1k+zA+tkPQo3fIOX/t1wf1h3WHU+xvF0i0+dzTOwN6knhNd9vt1DO8zDstuEvq/dx0wFnFPuDACs0ga6P19v8gBBHACqGSw+2qXnE5VRF34sT5Xq5se683vic7vPvg/OgM9J9Kza+qz5L/maKHXj4iLMHkVysl6wX3bKuGp3Ddz9CjtxMW9ad9wLadXqZ1fz0QVV35f2PP6DsOYxlRaEIfG98UP5HXO3Yox/jaFRa59JfCJR+sTKIA==', 'cardNo': '6228484555533333333', 'idNo': '421023198705019116', 'forgotPwdUrl': None, 'userIP': None, 'currency': '156', 'instCode': '00920001', 'successfulUrl': None, 'authSeq': None, 'bankCode': '30050000', 'idType': '01', 'mobile': '13759947589', 'JxUrl': 'https://access.credit2go.cn/escrow/p2p/page/directRechargePage', 'authFlag': None, 'version': '10', 'txAmount': '5000', 'accountId': '6212462170000078011', 'name': '对对对', 'notifyUrl': 'http://www5.91wutong.com/open/jixin/directRechargePageNotifyUrl.htm?channel=yhcg', 'txCode': 'directRechargePage', 'txDate': '20180516'}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:26:39  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:{.*'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功'.*}
 Fri, 31 Aug 2018 16:26:39  INFO test_api.py test_api [ line:65 ] =====开始比对检验返回结果=======
 Fri, 31 Aug 2018 16:26:39  INFO test_api.py test_api [ line:66 ] 正则表达式匹配模式
 Fri, 31 Aug 2018 16:26:39  INFO test_api.py test_api [ line:69 ] 结果匹配，测试用例通过
 Fri, 31 Aug 2018 16:26:39  INFO test_api.py test_api [ line:81 ] 数据库里存在符合预期条件的数据,测试通过:()
 Fri, 31 Aug 2018 16:26:39  INFO test_api.py test_api [ line:84 ] ================结束一次接口请求===========
 Fri, 31 Aug 2018 16:26:39  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:26:39  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【充值后续】310浦发充值失败
 Fri, 31 Aug 2018 16:26:39  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.ProductCoreTradeService
 Fri, 31 Aug 2018 16:26:39  INFO test_api.py test_api [ line:39 ] 接口请求method:tradeContinue
 Fri, 31 Aug 2018 16:26:39  INFO test_api.py test_api [ line:40 ] 接口请求data:{"serialno":"201808311540580377JD",'extFields':{"errCode":"0001", "errMsg":"交易失败", "tranSt":"F"}}
 Fri, 31 Aug 2018 16:26:39  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {}, 'errCode': 'Q015', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '查询交易原单结果为空或失败', 'tradeCode': None, 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:26:39  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:{'extFields': {}, 'errCode': '0001', 'tradeStatus': 'F', 'tradeMsg': '交易失败', 'errMsg': '交易失败', 'tradeCode': '0001', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:26:39  INFO test_api.py test_api [ line:56 ] =====开始比对检验返回结果=======
 Fri, 31 Aug 2018 16:26:39  INFO test_api.py test_api [ line:57 ] 全值匹配模式
 Fri, 31 Aug 2018 16:26:39  ERROR test_api.py test_api [ line:62 ] 全值结果比对失败原因为："{'extFields': {}, 'errCode': 'Q015', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '查询交易原单结果为空或失败', 'tradeCode': None, 'exObjFields': {}, 'key': None}" not found in "{'extFields': {}, 'errCode': '0001', 'tradeStatus': 'F', 'tradeMsg': '交易失败', 'errMsg': '交易失败', 'tradeCode': '0001', 'exObjFields': {}, 'key': None}"
Traceback (most recent call last):
  File "H:\python3_apiTest\TestCases\test_api.py", line 59, in test_api
    self.assertIn(str(res),case_data["expected_data"])
  File "F:\python36\lib\unittest\case.py", line 1089, in assertIn
    self.fail(self._formatMessage(msg, standardMsg))
  File "F:\python36\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: "{'extFields': {}, 'errCode': 'Q015', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '查询交易原单结果为空或失败', 'tradeCode': None, 'exObjFields': {}, 'key': None}" not found in "{'extFields': {}, 'errCode': '0001', 'tradeStatus': 'F', 'tradeMsg': '交易失败', 'errMsg': '交易失败', 'tradeCode': '0001', 'exObjFields': {}, 'key': None}"
 Fri, 31 Aug 2018 16:26:39  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:26:39  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【充值】403邮政充值
 Fri, 31 Aug 2018 16:26:39  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.VaccoCoreTradeService
 Fri, 31 Aug 2018 16:26:39  INFO test_api.py test_api [ line:39 ] 接口请求method:recharge
 Fri, 31 Aug 2018 16:26:39  INFO test_api.py test_api [ line:40 ] 接口请求data:{
 "subamt":"555",
 "paymodel":"05",
 "channel":"JX",
 "bankid":"205B0CF78550959969",
 "bankno":"403",
 "bankacco":"6222620110038594231",
 "serialno":"201808311626320866lF",
 "custno":"1604578759",
 "apkind":"922",
 "subapkind":"922001",
 "apdt":"20180516",
 "aptm":"093540",
 "workdate":"20180516",
 "tradeacco":"001035098604578762",
 "taaccountid":"475B0CB66D40432285",
 "tano":"47",
 "sharetype":"A",
 "accptmd":"1",
 "branchcode":"247000",
 "distributorcode":"247",
"extFields":{'rechargeFlag':'1'}
}
 Fri, 31 Aug 2018 16:26:39  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {'retUrl': None, 'seqNo': '148850', 'txTime': '093540', 'channel': '000002', 'sign': 'TgCpkch2zFfnQa8711M45baC4C1PwZ19X+UFcwdupqPmdwLIYuXX0uqmvmkI24GnLDXXQzpePw7MMhMA7rNIJ9zbPT2lFLHWgtEKypN1e61iQ8tBLy4xvB0hPRq+Mqlw0PQ2Pg69fA1Pci4HkkHr3bjBixDXJ4bS1Mla7X/P5oWtxLkhgR3YthICjy/VIazQtvUjoph+5Ion90sFa8G596biha8HA0SJWmiKzJfUpTLUeHqLK1ELQ5FCgHu6vfj8TwuqVEubEEiMns4aT2cp4TJQ12ZK5/se97qpXvaPo+XLBxX9McHurDBwnw3F9qB+dBdPogvgnW1VxsJsLdy09A==', 'cardNo': '6228484555533333333', 'idNo': '421023198705019116', 'forgotPwdUrl': None, 'userIP': None, 'currency': '156', 'instCode': '00920001', 'successfulUrl': None, 'authSeq': None, 'bankCode': '30050000', 'idType': '01', 'mobile': '13759947589', 'JxUrl': 'https://access.credit2go.cn/escrow/p2p/page/directRechargePage', 'authFlag': None, 'version': '10', 'txAmount': '555', 'accountId': '6212462170000078011', 'name': '对对对', 'notifyUrl': 'http://www5.91wutong.com/open/jixin/directRechargePageNotifyUrl.htm?channel=yhcg', 'txCode': 'directRechargePage', 'txDate': '20180516'}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:26:39  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:{.*'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功'.*}
 Fri, 31 Aug 2018 16:26:39  INFO test_api.py test_api [ line:65 ] =====开始比对检验返回结果=======
 Fri, 31 Aug 2018 16:26:39  INFO test_api.py test_api [ line:66 ] 正则表达式匹配模式
 Fri, 31 Aug 2018 16:26:39  INFO test_api.py test_api [ line:69 ] 结果匹配，测试用例通过
 Fri, 31 Aug 2018 16:26:39  INFO test_api.py test_api [ line:81 ] 数据库里存在符合预期条件的数据,测试通过:()
 Fri, 31 Aug 2018 16:26:39  INFO test_api.py test_api [ line:84 ] ================结束一次接口请求===========
 Fri, 31 Aug 2018 16:26:39  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:26:39  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【充值后续】403邮政充值成功
 Fri, 31 Aug 2018 16:26:39  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.ProductCoreTradeService
 Fri, 31 Aug 2018 16:26:39  INFO test_api.py test_api [ line:39 ] 接口请求method:tradeContinue
 Fri, 31 Aug 2018 16:26:39  INFO test_api.py test_api [ line:40 ] 接口请求data:{"serialno":"201808311540580161Mo","isSend":"1",'extFields':{"errCode":"0000", "errMsg":"交易成功", "tranSt":"Y"}}
 Fri, 31 Aug 2018 16:26:39  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {}, 'errCode': 'Q015', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '查询交易原单结果为空或失败', 'tradeCode': None, 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:26:39  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功！', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:26:39  INFO test_api.py test_api [ line:56 ] =====开始比对检验返回结果=======
 Fri, 31 Aug 2018 16:26:39  INFO test_api.py test_api [ line:57 ] 全值匹配模式
 Fri, 31 Aug 2018 16:26:39  ERROR test_api.py test_api [ line:62 ] 全值结果比对失败原因为："{'extFields': {}, 'errCode': 'Q015', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '查询交易原单结果为空或失败', 'tradeCode': None, 'exObjFields': {}, 'key': None}" not found in "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功！', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}"
Traceback (most recent call last):
  File "H:\python3_apiTest\TestCases\test_api.py", line 59, in test_api
    self.assertIn(str(res),case_data["expected_data"])
  File "F:\python36\lib\unittest\case.py", line 1089, in assertIn
    self.fail(self._formatMessage(msg, standardMsg))
  File "F:\python36\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: "{'extFields': {}, 'errCode': 'Q015', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '查询交易原单结果为空或失败', 'tradeCode': None, 'exObjFields': {}, 'key': None}" not found in "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功！', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}"
 Fri, 31 Aug 2018 16:26:39  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:26:39  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【充值】403邮政充值
 Fri, 31 Aug 2018 16:26:39  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.VaccoCoreTradeService
 Fri, 31 Aug 2018 16:26:39  INFO test_api.py test_api [ line:39 ] 接口请求method:recharge
 Fri, 31 Aug 2018 16:26:39  INFO test_api.py test_api [ line:40 ] 接口请求data:{
 "subamt":"5000",
 "paymodel":"05",
 "channel":"JX",
 "bankid":"205B0CF78550959969",
 "bankno":"403",
 "bankacco":"6222620110038594231",
 "serialno":"201808311626320485CD",
 "custno":"1604578759",
 "apkind":"922",
 "subapkind":"922001",
 "apdt":"20180516",
 "aptm":"093540",
 "workdate":"20180516",
 "tradeacco":"001035098604578762",
 "taaccountid":"475B0CB66D40432285",
 "tano":"47",
 "sharetype":"A",
 "accptmd":"1",
 "branchcode":"247000",
 "distributorcode":"247",
"extFields":{'rechargeFlag':'1'}
}
 Fri, 31 Aug 2018 16:26:39  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {'retUrl': None, 'seqNo': '120790', 'txTime': '093540', 'channel': '000002', 'sign': 'FIOj3qv4PQApAKmumH0Rde5sj8K/aQQluKeOCJeBYJo9WqOhBzC+cHkRTUagitJMjG6L6jcAVbaLSoTYFB4uGDD3dnxbkgvA8fRCxTEb5/21oqyNjjteoGEVfucEb/CjBNFRBTcZKF2dYXwZAxd8aZSJzT8ieeh+74m9t0opS7F5QhwZlg82fPBKkaUUJUdcCTB9AAHxp5BfpEh81fshwGn1n+Ci1R4/ITw6hQ4vN8tHPfSt9PwT9a5FyHWgdy+efcpVBn8h3LJrpbz0Z7yHGYuS9lEL18GuGqOrxrPkqyltGSnGy+u6vKOiG+1eTU/rhkkXs2vs39QtUxchg3cfCg==', 'cardNo': '6228484555533333333', 'idNo': '421023198705019116', 'forgotPwdUrl': None, 'userIP': None, 'currency': '156', 'instCode': '00920001', 'successfulUrl': None, 'authSeq': None, 'bankCode': '30050000', 'idType': '01', 'mobile': '13759947589', 'JxUrl': 'https://access.credit2go.cn/escrow/p2p/page/directRechargePage', 'authFlag': None, 'version': '10', 'txAmount': '5000', 'accountId': '6212462170000078011', 'name': '对对对', 'notifyUrl': 'http://www5.91wutong.com/open/jixin/directRechargePageNotifyUrl.htm?channel=yhcg', 'txCode': 'directRechargePage', 'txDate': '20180516'}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:26:39  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:{.*'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功'.*}
 Fri, 31 Aug 2018 16:26:39  INFO test_api.py test_api [ line:65 ] =====开始比对检验返回结果=======
 Fri, 31 Aug 2018 16:26:39  INFO test_api.py test_api [ line:66 ] 正则表达式匹配模式
 Fri, 31 Aug 2018 16:26:39  INFO test_api.py test_api [ line:69 ] 结果匹配，测试用例通过
 Fri, 31 Aug 2018 16:26:39  INFO test_api.py test_api [ line:81 ] 数据库里存在符合预期条件的数据,测试通过:()
 Fri, 31 Aug 2018 16:26:39  INFO test_api.py test_api [ line:84 ] ================结束一次接口请求===========
 Fri, 31 Aug 2018 16:26:39  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:26:39  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【充值后续】403邮政充值失败
 Fri, 31 Aug 2018 16:26:39  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.ProductCoreTradeService
 Fri, 31 Aug 2018 16:26:39  INFO test_api.py test_api [ line:39 ] 接口请求method:tradeContinue
 Fri, 31 Aug 2018 16:26:39  INFO test_api.py test_api [ line:40 ] 接口请求data:{"serialno":"201808311540580361ff",'extFields':{"errCode":"0001", "errMsg":"交易失败", "tranSt":"F"}}
 Fri, 31 Aug 2018 16:26:39  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {}, 'errCode': 'Q015', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '查询交易原单结果为空或失败', 'tradeCode': None, 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:26:39  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:{'extFields': {}, 'errCode': '0001', 'tradeStatus': 'F', 'tradeMsg': '交易失败', 'errMsg': '交易失败', 'tradeCode': '0001', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:26:39  INFO test_api.py test_api [ line:56 ] =====开始比对检验返回结果=======
 Fri, 31 Aug 2018 16:26:39  INFO test_api.py test_api [ line:57 ] 全值匹配模式
 Fri, 31 Aug 2018 16:26:39  ERROR test_api.py test_api [ line:62 ] 全值结果比对失败原因为："{'extFields': {}, 'errCode': 'Q015', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '查询交易原单结果为空或失败', 'tradeCode': None, 'exObjFields': {}, 'key': None}" not found in "{'extFields': {}, 'errCode': '0001', 'tradeStatus': 'F', 'tradeMsg': '交易失败', 'errMsg': '交易失败', 'tradeCode': '0001', 'exObjFields': {}, 'key': None}"
Traceback (most recent call last):
  File "H:\python3_apiTest\TestCases\test_api.py", line 59, in test_api
    self.assertIn(str(res),case_data["expected_data"])
  File "F:\python36\lib\unittest\case.py", line 1089, in assertIn
    self.fail(self._formatMessage(msg, standardMsg))
  File "F:\python36\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: "{'extFields': {}, 'errCode': 'Q015', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '查询交易原单结果为空或失败', 'tradeCode': None, 'exObjFields': {}, 'key': None}" not found in "{'extFields': {}, 'errCode': '0001', 'tradeStatus': 'F', 'tradeMsg': '交易失败', 'errMsg': '交易失败', 'tradeCode': '0001', 'exObjFields': {}, 'key': None}"
 Fri, 31 Aug 2018 16:26:39  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:26:39  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【充值】810北京银行充值
 Fri, 31 Aug 2018 16:26:39  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.VaccoCoreTradeService
 Fri, 31 Aug 2018 16:26:39  INFO test_api.py test_api [ line:39 ] 接口请求method:recharge
 Fri, 31 Aug 2018 16:26:39  INFO test_api.py test_api [ line:40 ] 接口请求data:{
 "subamt":"5005.1",
 "paymodel":"05",
 "channel":"JX",
 "bankid":"205B0CF78550959969",
 "bankno":"810",
 "bankacco":"6222620110038594231",
 "serialno":"201808311626320924ia",
 "custno":"1604578759",
 "apkind":"922",
 "subapkind":"922001",
 "apdt":"20180516",
 "aptm":"093540",
 "workdate":"20180516",
 "tradeacco":"001035098604578762",
 "taaccountid":"475B0CB66D40432285",
 "tano":"47",
 "sharetype":"A",
 "accptmd":"1",
 "branchcode":"247000",
 "distributorcode":"247",
"extFields":{'rechargeFlag':'1'}
}
 Fri, 31 Aug 2018 16:26:39  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {'retUrl': None, 'seqNo': '147617', 'txTime': '093540', 'channel': '000002', 'sign': 'dFuMVyXIILVxySmc6P4HKWtQoS8ILOS0mT00UUbAZ10H7UiBLFaaqErwDmpZR0RUP3BQtIdgqZRy62e8XjR6nlRfzKbSLB0r1oeM9k/7f48/jooR5ySWm3epynBziruSksNAiZ39/68PFUuP9/2h+AAygg9Cb7hayVAztdksG1CcUS3G9jo6yo61pTfXAWePqfuWPcY1V09n5zDLJ43HuxgjyW/eNxb2WTl+epuVSV98yh1NiwRP7Jpth0Y1hz10jIKyUbtcyQbzeMzUIXeXwKMMsJdohPGBAFUtDD1rYSm22ZepFvkDibgL0Qw0EjQ44DodIIlzmNOGQxVEnxPwNQ==', 'cardNo': '6228484555533333333', 'idNo': '421023198705019116', 'forgotPwdUrl': None, 'userIP': None, 'currency': '156', 'instCode': '00920001', 'successfulUrl': None, 'authSeq': None, 'bankCode': '30050000', 'idType': '01', 'mobile': '13759947589', 'JxUrl': 'https://access.credit2go.cn/escrow/p2p/page/directRechargePage', 'authFlag': None, 'version': '10', 'txAmount': '5005.1', 'accountId': '6212462170000078011', 'name': '对对对', 'notifyUrl': 'http://www5.91wutong.com/open/jixin/directRechargePageNotifyUrl.htm?channel=yhcg', 'txCode': 'directRechargePage', 'txDate': '20180516'}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:26:39  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:{.*'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功'.*}
 Fri, 31 Aug 2018 16:26:39  INFO test_api.py test_api [ line:65 ] =====开始比对检验返回结果=======
 Fri, 31 Aug 2018 16:26:39  INFO test_api.py test_api [ line:66 ] 正则表达式匹配模式
 Fri, 31 Aug 2018 16:26:39  INFO test_api.py test_api [ line:69 ] 结果匹配，测试用例通过
 Fri, 31 Aug 2018 16:26:39  INFO test_api.py test_api [ line:81 ] 数据库里存在符合预期条件的数据,测试通过:()
 Fri, 31 Aug 2018 16:26:39  INFO test_api.py test_api [ line:84 ] ================结束一次接口请求===========
 Fri, 31 Aug 2018 16:26:39  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:26:39  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【充值后续】810北京银行充值成功
 Fri, 31 Aug 2018 16:26:39  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.ProductCoreTradeService
 Fri, 31 Aug 2018 16:26:39  INFO test_api.py test_api [ line:39 ] 接口请求method:tradeContinue
 Fri, 31 Aug 2018 16:26:39  INFO test_api.py test_api [ line:40 ] 接口请求data:{"serialno":"201808311540580835sh","isSend":"1",'extFields':{"errCode":"0000", "errMsg":"交易成功", "tranSt":"Y"}}
 Fri, 31 Aug 2018 16:26:39  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {}, 'errCode': 'Q015', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '查询交易原单结果为空或失败', 'tradeCode': None, 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:26:39  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功！', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:26:39  INFO test_api.py test_api [ line:56 ] =====开始比对检验返回结果=======
 Fri, 31 Aug 2018 16:26:39  INFO test_api.py test_api [ line:57 ] 全值匹配模式
 Fri, 31 Aug 2018 16:26:39  ERROR test_api.py test_api [ line:62 ] 全值结果比对失败原因为："{'extFields': {}, 'errCode': 'Q015', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '查询交易原单结果为空或失败', 'tradeCode': None, 'exObjFields': {}, 'key': None}" not found in "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功！', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}"
Traceback (most recent call last):
  File "H:\python3_apiTest\TestCases\test_api.py", line 59, in test_api
    self.assertIn(str(res),case_data["expected_data"])
  File "F:\python36\lib\unittest\case.py", line 1089, in assertIn
    self.fail(self._formatMessage(msg, standardMsg))
  File "F:\python36\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: "{'extFields': {}, 'errCode': 'Q015', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '查询交易原单结果为空或失败', 'tradeCode': None, 'exObjFields': {}, 'key': None}" not found in "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功！', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}"
 Fri, 31 Aug 2018 16:26:39  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:26:39  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【充值】810北京银行充值
 Fri, 31 Aug 2018 16:26:39  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.VaccoCoreTradeService
 Fri, 31 Aug 2018 16:26:39  INFO test_api.py test_api [ line:39 ] 接口请求method:recharge
 Fri, 31 Aug 2018 16:26:39  INFO test_api.py test_api [ line:40 ] 接口请求data:{
 "subamt":"5000",
 "paymodel":"05",
 "channel":"JX",
 "bankid":"205B0CF78550959969",
 "bankno":"810",
 "bankacco":"6222620110038594231",
 "serialno":"201808311626320838sr",
 "custno":"1604578759",
 "apkind":"922",
 "subapkind":"922001",
 "apdt":"20180516",
 "aptm":"093540",
 "workdate":"20180516",
 "tradeacco":"001035098604578762",
 "taaccountid":"475B0CB66D40432285",
 "tano":"47",
 "sharetype":"A",
 "accptmd":"1",
 "branchcode":"247000",
 "distributorcode":"247",
"extFields":{'rechargeFlag':'1'}
}
 Fri, 31 Aug 2018 16:26:40  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {'retUrl': None, 'seqNo': '142662', 'txTime': '093540', 'channel': '000002', 'sign': 'VsGUE3QZi4IprH3QvBSBfRqvCUuN6MvVTjPYs426SzGAP229eHp/DyypGCWDIL5LFv0CHGsFpuxo1qjiM6pULLIW0l/iP8eOYV1H8i6LIbQnI+eb6BXg4654WFiu/gtygI0cAu38VvV7b9PqB5z3N8xov9XGeuGaCPxW85mamIN0D0qO4841/u0NnFeC0n37W7BFn3AAJO17KW5B83C0b3VKrPhsaqE9QomavsWeiiww90qMdOZHSNzTbLosuL5F71H1n8HfNG4LWdh6iLKkU458RX0ZWS8AbBrNg7XNSJ3tQOYQoI7Ows6nc4mOsOHBeBjeY4b9tWA/n/A9PHDkHQ==', 'cardNo': '6228484555533333333', 'idNo': '421023198705019116', 'forgotPwdUrl': None, 'userIP': None, 'currency': '156', 'instCode': '00920001', 'successfulUrl': None, 'authSeq': None, 'bankCode': '30050000', 'idType': '01', 'mobile': '13759947589', 'JxUrl': 'https://access.credit2go.cn/escrow/p2p/page/directRechargePage', 'authFlag': None, 'version': '10', 'txAmount': '5000', 'accountId': '6212462170000078011', 'name': '对对对', 'notifyUrl': 'http://www5.91wutong.com/open/jixin/directRechargePageNotifyUrl.htm?channel=yhcg', 'txCode': 'directRechargePage', 'txDate': '20180516'}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:26:40  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:{.*'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功'.*}
 Fri, 31 Aug 2018 16:26:40  INFO test_api.py test_api [ line:65 ] =====开始比对检验返回结果=======
 Fri, 31 Aug 2018 16:26:40  INFO test_api.py test_api [ line:66 ] 正则表达式匹配模式
 Fri, 31 Aug 2018 16:26:40  INFO test_api.py test_api [ line:69 ] 结果匹配，测试用例通过
 Fri, 31 Aug 2018 16:26:40  INFO test_api.py test_api [ line:81 ] 数据库里存在符合预期条件的数据,测试通过:()
 Fri, 31 Aug 2018 16:26:40  INFO test_api.py test_api [ line:84 ] ================结束一次接口请求===========
 Fri, 31 Aug 2018 16:26:40  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:26:40  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【充值后续】810北京银行充值失败
 Fri, 31 Aug 2018 16:26:40  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.ProductCoreTradeService
 Fri, 31 Aug 2018 16:26:40  INFO test_api.py test_api [ line:39 ] 接口请求method:tradeContinue
 Fri, 31 Aug 2018 16:26:40  INFO test_api.py test_api [ line:40 ] 接口请求data:{"serialno":"201808311540580873ER",'extFields':{"errCode":"0001", "errMsg":"交易失败", "tranSt":"F"}}
 Fri, 31 Aug 2018 16:26:40  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {}, 'errCode': 'Q015', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '查询交易原单结果为空或失败', 'tradeCode': None, 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:26:40  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:{'extFields': {}, 'errCode': '0001', 'tradeStatus': 'F', 'tradeMsg': '交易失败', 'errMsg': '交易失败', 'tradeCode': '0001', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:26:40  INFO test_api.py test_api [ line:56 ] =====开始比对检验返回结果=======
 Fri, 31 Aug 2018 16:26:40  INFO test_api.py test_api [ line:57 ] 全值匹配模式
 Fri, 31 Aug 2018 16:26:40  ERROR test_api.py test_api [ line:62 ] 全值结果比对失败原因为："{'extFields': {}, 'errCode': 'Q015', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '查询交易原单结果为空或失败', 'tradeCode': None, 'exObjFields': {}, 'key': None}" not found in "{'extFields': {}, 'errCode': '0001', 'tradeStatus': 'F', 'tradeMsg': '交易失败', 'errMsg': '交易失败', 'tradeCode': '0001', 'exObjFields': {}, 'key': None}"
Traceback (most recent call last):
  File "H:\python3_apiTest\TestCases\test_api.py", line 59, in test_api
    self.assertIn(str(res),case_data["expected_data"])
  File "F:\python36\lib\unittest\case.py", line 1089, in assertIn
    self.fail(self._formatMessage(msg, standardMsg))
  File "F:\python36\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: "{'extFields': {}, 'errCode': 'Q015', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '查询交易原单结果为空或失败', 'tradeCode': None, 'exObjFields': {}, 'key': None}" not found in "{'extFields': {}, 'errCode': '0001', 'tradeStatus': 'F', 'tradeMsg': '交易失败', 'errMsg': '交易失败', 'tradeCode': '0001', 'exObjFields': {}, 'key': None}"
 Fri, 31 Aug 2018 16:26:40  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:26:40  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【充值】811上海银行充值
 Fri, 31 Aug 2018 16:26:40  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.VaccoCoreTradeService
 Fri, 31 Aug 2018 16:26:40  INFO test_api.py test_api [ line:39 ] 接口请求method:recharge
 Fri, 31 Aug 2018 16:26:40  INFO test_api.py test_api [ line:40 ] 接口请求data:{
 "subamt":"65555",
 "paymodel":"05",
 "channel":"JX",
 "bankid":"205B0CF78550959969",
 "bankno":"811",
 "bankacco":"6222620110038594231",
 "serialno":"201808311626320334Ea",
 "custno":"1604578759",
 "apkind":"922",
 "subapkind":"922001",
 "apdt":"20180516",
 "aptm":"093540",
 "workdate":"20180516",
 "tradeacco":"001035098604578762",
 "taaccountid":"475B0CB66D40432285",
 "tano":"47",
 "sharetype":"A",
 "accptmd":"1",
 "branchcode":"247000",
 "distributorcode":"247",
"extFields":{'rechargeFlag':'1'}
}
 Fri, 31 Aug 2018 16:26:40  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {'retUrl': None, 'seqNo': '122961', 'txTime': '093540', 'channel': '000002', 'sign': 'EgFAU8I523F35b+UhbNzkoUumGrjHm4w84vWD9MpcjFUnYimgNpeicymUQ4MeYo8fvzpbYhEz5G/1IDRPkl7Qv6mz8HtNetx0Xp2iAZLVedPVlcn7Em2UjeCMtC0LIeHnz9x0H3VN9WSeHpnq6TLEOmx/OppJmz0RaDvNCvati7MlIvdx5otudtBKJ1oYtPN1B+Ara4ETlg9z9D89iV51BFukCou3Qf5R7MYoJrWGGUzV5NURnnNhi9CUNr1eWfSK7JiuaDzzmpoH0k4euIOUAUCHrqBr3rPV+/ZJUy5NNAJJZoSgCvCaN8GrWEASwNNjA2gc5ztDZNkfYLRkYcBGw==', 'cardNo': '6228484555533333333', 'idNo': '421023198705019116', 'forgotPwdUrl': None, 'userIP': None, 'currency': '156', 'instCode': '00920001', 'successfulUrl': None, 'authSeq': None, 'bankCode': '30050000', 'idType': '01', 'mobile': '13759947589', 'JxUrl': 'https://access.credit2go.cn/escrow/p2p/page/directRechargePage', 'authFlag': None, 'version': '10', 'txAmount': '65555', 'accountId': '6212462170000078011', 'name': '对对对', 'notifyUrl': 'http://www5.91wutong.com/open/jixin/directRechargePageNotifyUrl.htm?channel=yhcg', 'txCode': 'directRechargePage', 'txDate': '20180516'}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:26:40  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:{.*'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功'.*}
 Fri, 31 Aug 2018 16:26:40  INFO test_api.py test_api [ line:65 ] =====开始比对检验返回结果=======
 Fri, 31 Aug 2018 16:26:40  INFO test_api.py test_api [ line:66 ] 正则表达式匹配模式
 Fri, 31 Aug 2018 16:26:40  INFO test_api.py test_api [ line:69 ] 结果匹配，测试用例通过
 Fri, 31 Aug 2018 16:26:40  INFO test_api.py test_api [ line:81 ] 数据库里存在符合预期条件的数据,测试通过:()
 Fri, 31 Aug 2018 16:26:40  INFO test_api.py test_api [ line:84 ] ================结束一次接口请求===========
 Fri, 31 Aug 2018 16:26:40  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:26:40  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【充值后续】811上海银行充值成功
 Fri, 31 Aug 2018 16:26:40  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.ProductCoreTradeService
 Fri, 31 Aug 2018 16:26:40  INFO test_api.py test_api [ line:39 ] 接口请求method:tradeContinue
 Fri, 31 Aug 2018 16:26:40  INFO test_api.py test_api [ line:40 ] 接口请求data:{"serialno":"201808311540580999Ux","isSend":"1",'extFields':{"errCode":"0000", "errMsg":"交易成功", "tranSt":"Y"}}
 Fri, 31 Aug 2018 16:26:40  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {}, 'errCode': 'Q015', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '查询交易原单结果为空或失败', 'tradeCode': None, 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:26:40  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功！', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:26:40  INFO test_api.py test_api [ line:56 ] =====开始比对检验返回结果=======
 Fri, 31 Aug 2018 16:26:40  INFO test_api.py test_api [ line:57 ] 全值匹配模式
 Fri, 31 Aug 2018 16:26:40  ERROR test_api.py test_api [ line:62 ] 全值结果比对失败原因为："{'extFields': {}, 'errCode': 'Q015', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '查询交易原单结果为空或失败', 'tradeCode': None, 'exObjFields': {}, 'key': None}" not found in "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功！', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}"
Traceback (most recent call last):
  File "H:\python3_apiTest\TestCases\test_api.py", line 59, in test_api
    self.assertIn(str(res),case_data["expected_data"])
  File "F:\python36\lib\unittest\case.py", line 1089, in assertIn
    self.fail(self._formatMessage(msg, standardMsg))
  File "F:\python36\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: "{'extFields': {}, 'errCode': 'Q015', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '查询交易原单结果为空或失败', 'tradeCode': None, 'exObjFields': {}, 'key': None}" not found in "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功！', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}"
 Fri, 31 Aug 2018 16:26:40  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:26:40  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【充值】811上海银行充值
 Fri, 31 Aug 2018 16:26:40  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.VaccoCoreTradeService
 Fri, 31 Aug 2018 16:26:40  INFO test_api.py test_api [ line:39 ] 接口请求method:recharge
 Fri, 31 Aug 2018 16:26:40  INFO test_api.py test_api [ line:40 ] 接口请求data:{
 "subamt":"5000",
 "paymodel":"05",
 "channel":"JX",
 "bankid":"205B0CF78550959969",
 "bankno":"811",
 "bankacco":"6222620110038594231",
 "serialno":"201808311626320172Ih",
 "custno":"1604578759",
 "apkind":"922",
 "subapkind":"922001",
 "apdt":"20180516",
 "aptm":"093540",
 "workdate":"20180516",
 "tradeacco":"001035098604578762",
 "taaccountid":"475B0CB66D40432285",
 "tano":"47",
 "sharetype":"A",
 "accptmd":"1",
 "branchcode":"247000",
 "distributorcode":"247",
"extFields":{'rechargeFlag':'1'}
}
 Fri, 31 Aug 2018 16:26:40  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {'retUrl': None, 'seqNo': '144986', 'txTime': '093540', 'channel': '000002', 'sign': 'NuOd0Z4++KbQh0jJPzHObNM9DlyUCq8foKqpLpTJZuIWTwPGFUe609MSwRCkFIYttELM6c+HDU6d6dAeDkqFO+psbi70jRID94mV2jn6E1hg6tg5lZRoNoC9Uo9T91jXzPRKn/pcuzSZTI8LuaNBkP4kfFrenvj3/JT/sixceKAtTaCunPZPYfgC3zyyxg1wUq7ohkzte2f8xe+p+zcjscN7flSkBtmVsOYSEfkmwFDiykiwJNrKe6Y4PJgGtipGD43DIabB+aBPTSpEbA/3MreataJBlun6RoOqpln+tmEtKpRukav6EjMYAiCLnJfqJh/QlaOOqlW34Kxq23f3pw==', 'cardNo': '6228484555533333333', 'idNo': '421023198705019116', 'forgotPwdUrl': None, 'userIP': None, 'currency': '156', 'instCode': '00920001', 'successfulUrl': None, 'authSeq': None, 'bankCode': '30050000', 'idType': '01', 'mobile': '13759947589', 'JxUrl': 'https://access.credit2go.cn/escrow/p2p/page/directRechargePage', 'authFlag': None, 'version': '10', 'txAmount': '5000', 'accountId': '6212462170000078011', 'name': '对对对', 'notifyUrl': 'http://www5.91wutong.com/open/jixin/directRechargePageNotifyUrl.htm?channel=yhcg', 'txCode': 'directRechargePage', 'txDate': '20180516'}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:26:40  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:{.*'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功'.*}
 Fri, 31 Aug 2018 16:26:40  INFO test_api.py test_api [ line:65 ] =====开始比对检验返回结果=======
 Fri, 31 Aug 2018 16:26:40  INFO test_api.py test_api [ line:66 ] 正则表达式匹配模式
 Fri, 31 Aug 2018 16:26:40  INFO test_api.py test_api [ line:69 ] 结果匹配，测试用例通过
 Fri, 31 Aug 2018 16:26:40  INFO test_api.py test_api [ line:81 ] 数据库里存在符合预期条件的数据,测试通过:()
 Fri, 31 Aug 2018 16:26:40  INFO test_api.py test_api [ line:84 ] ================结束一次接口请求===========
 Fri, 31 Aug 2018 16:26:40  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:26:40  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【充值后续】811上海银行充值失败
 Fri, 31 Aug 2018 16:26:40  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.ProductCoreTradeService
 Fri, 31 Aug 2018 16:26:40  INFO test_api.py test_api [ line:39 ] 接口请求method:tradeContinue
 Fri, 31 Aug 2018 16:26:40  INFO test_api.py test_api [ line:40 ] 接口请求data:{"serialno":"201808311540580452WV",'extFields':{"errCode":"0001", "errMsg":"交易失败", "tranSt":"F"}}
 Fri, 31 Aug 2018 16:26:40  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {}, 'errCode': 'Q015', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '查询交易原单结果为空或失败', 'tradeCode': None, 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:26:40  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:{'extFields': {}, 'errCode': '0001', 'tradeStatus': 'F', 'tradeMsg': '交易失败', 'errMsg': '交易失败', 'tradeCode': '0001', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:26:40  INFO test_api.py test_api [ line:56 ] =====开始比对检验返回结果=======
 Fri, 31 Aug 2018 16:26:40  INFO test_api.py test_api [ line:57 ] 全值匹配模式
 Fri, 31 Aug 2018 16:26:40  ERROR test_api.py test_api [ line:62 ] 全值结果比对失败原因为："{'extFields': {}, 'errCode': 'Q015', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '查询交易原单结果为空或失败', 'tradeCode': None, 'exObjFields': {}, 'key': None}" not found in "{'extFields': {}, 'errCode': '0001', 'tradeStatus': 'F', 'tradeMsg': '交易失败', 'errMsg': '交易失败', 'tradeCode': '0001', 'exObjFields': {}, 'key': None}"
Traceback (most recent call last):
  File "H:\python3_apiTest\TestCases\test_api.py", line 59, in test_api
    self.assertIn(str(res),case_data["expected_data"])
  File "F:\python36\lib\unittest\case.py", line 1089, in assertIn
    self.fail(self._formatMessage(msg, standardMsg))
  File "F:\python36\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: "{'extFields': {}, 'errCode': 'Q015', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '查询交易原单结果为空或失败', 'tradeCode': None, 'exObjFields': {}, 'key': None}" not found in "{'extFields': {}, 'errCode': '0001', 'tradeStatus': 'F', 'tradeMsg': '交易失败', 'errMsg': '交易失败', 'tradeCode': '0001', 'exObjFields': {}, 'key': None}"
 Fri, 31 Aug 2018 16:26:40  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:26:40  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【充值】813宁波银行充值
 Fri, 31 Aug 2018 16:26:40  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.VaccoCoreTradeService
 Fri, 31 Aug 2018 16:26:40  INFO test_api.py test_api [ line:39 ] 接口请求method:recharge
 Fri, 31 Aug 2018 16:26:40  INFO test_api.py test_api [ line:40 ] 接口请求data:{
 "subamt":"5000",
 "paymodel":"05",
 "channel":"JX",
 "bankid":"205B0CF78550959969",
 "bankno":"813",
 "bankacco":"6222620110038594231",
 "serialno":"201808311626320120hg",
 "custno":"1604578759",
 "apkind":"922",
 "subapkind":"922001",
 "apdt":"20180516",
 "aptm":"093540",
 "workdate":"20180516",
 "tradeacco":"001035098604578762",
 "taaccountid":"475B0CB66D40432285",
 "tano":"47",
 "sharetype":"A",
 "accptmd":"1",
 "branchcode":"247000",
 "distributorcode":"247",
"extFields":{'rechargeFlag':'1'}
}
 Fri, 31 Aug 2018 16:26:40  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {'retUrl': None, 'seqNo': '133613', 'txTime': '093540', 'channel': '000002', 'sign': 'h5qO8RoJNDkBOsaD/eY+vlpd8RTfg5xJMM3VgjeodE+R5XDhcwqy/SIjJY/6Zm0qbTri/3Kaok5tdFwsJQmsALoBRKQdHv2Iilm1+5pG3/xEG341PxyEtF6Mb/oBnG2qO2IW5Mg/WLSjHQvDm19lK6raThTFKdROE5UyKU239wY24yh/q14BIKrdOstaycgNkJZh4OWFRxIuAssbQ0vqCF5KYUS1cIQ1uP1TgOEoKuQUyaCXl/h78yA7zwGJAgIk8Hg4/KtznB6Y7yPg3Z+MsESNiZkK05rixetR3qpXRqpeP6rr7h8QAlDJ55lGQIhpyqymaH05ZihYPT88pCjCKg==', 'cardNo': '6228484555533333333', 'idNo': '421023198705019116', 'forgotPwdUrl': None, 'userIP': None, 'currency': '156', 'instCode': '00920001', 'successfulUrl': None, 'authSeq': None, 'bankCode': '30050000', 'idType': '01', 'mobile': '13759947589', 'JxUrl': 'https://access.credit2go.cn/escrow/p2p/page/directRechargePage', 'authFlag': None, 'version': '10', 'txAmount': '5000', 'accountId': '6212462170000078011', 'name': '对对对', 'notifyUrl': 'http://www5.91wutong.com/open/jixin/directRechargePageNotifyUrl.htm?channel=yhcg', 'txCode': 'directRechargePage', 'txDate': '20180516'}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:26:40  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:{.*'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功'.*}
 Fri, 31 Aug 2018 16:26:40  INFO test_api.py test_api [ line:65 ] =====开始比对检验返回结果=======
 Fri, 31 Aug 2018 16:26:40  INFO test_api.py test_api [ line:66 ] 正则表达式匹配模式
 Fri, 31 Aug 2018 16:26:40  INFO test_api.py test_api [ line:69 ] 结果匹配，测试用例通过
 Fri, 31 Aug 2018 16:26:40  INFO test_api.py test_api [ line:81 ] 数据库里存在符合预期条件的数据,测试通过:()
 Fri, 31 Aug 2018 16:26:40  INFO test_api.py test_api [ line:84 ] ================结束一次接口请求===========
 Fri, 31 Aug 2018 16:26:40  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:26:40  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【充值后续】813宁波银行充值成功
 Fri, 31 Aug 2018 16:26:40  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.ProductCoreTradeService
 Fri, 31 Aug 2018 16:26:40  INFO test_api.py test_api [ line:39 ] 接口请求method:tradeContinue
 Fri, 31 Aug 2018 16:26:40  INFO test_api.py test_api [ line:40 ] 接口请求data:{"serialno":"201808311540580576Rb","isSend":"1",'extFields':{"errCode":"0000", "errMsg":"交易成功", "tranSt":"Y"}}
 Fri, 31 Aug 2018 16:26:40  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {}, 'errCode': 'Q015', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '查询交易原单结果为空或失败', 'tradeCode': None, 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:26:40  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功！', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:26:40  INFO test_api.py test_api [ line:56 ] =====开始比对检验返回结果=======
 Fri, 31 Aug 2018 16:26:40  INFO test_api.py test_api [ line:57 ] 全值匹配模式
 Fri, 31 Aug 2018 16:26:40  ERROR test_api.py test_api [ line:62 ] 全值结果比对失败原因为："{'extFields': {}, 'errCode': 'Q015', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '查询交易原单结果为空或失败', 'tradeCode': None, 'exObjFields': {}, 'key': None}" not found in "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功！', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}"
Traceback (most recent call last):
  File "H:\python3_apiTest\TestCases\test_api.py", line 59, in test_api
    self.assertIn(str(res),case_data["expected_data"])
  File "F:\python36\lib\unittest\case.py", line 1089, in assertIn
    self.fail(self._formatMessage(msg, standardMsg))
  File "F:\python36\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: "{'extFields': {}, 'errCode': 'Q015', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '查询交易原单结果为空或失败', 'tradeCode': None, 'exObjFields': {}, 'key': None}" not found in "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功！', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}"
 Fri, 31 Aug 2018 16:26:40  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:26:40  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【充值】813宁波银行充值
 Fri, 31 Aug 2018 16:26:40  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.VaccoCoreTradeService
 Fri, 31 Aug 2018 16:26:40  INFO test_api.py test_api [ line:39 ] 接口请求method:recharge
 Fri, 31 Aug 2018 16:26:40  INFO test_api.py test_api [ line:40 ] 接口请求data:{
 "subamt":"5000",
 "paymodel":"05",
 "channel":"JX",
 "bankid":"205B0CF78550959969",
 "bankno":"813",
 "bankacco":"6222620110038594231",
 "serialno":"201808311626320547Pr",
 "custno":"1604578759",
 "apkind":"922",
 "subapkind":"922001",
 "apdt":"20180516",
 "aptm":"093540",
 "workdate":"20180516",
 "tradeacco":"001035098604578762",
 "taaccountid":"475B0CB66D40432285",
 "tano":"47",
 "sharetype":"A",
 "accptmd":"1",
 "branchcode":"247000",
 "distributorcode":"247",
"extFields":{'rechargeFlag':'1'}
}
 Fri, 31 Aug 2018 16:26:40  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {'retUrl': None, 'seqNo': '122168', 'txTime': '093540', 'channel': '000002', 'sign': 'eNpKdRE9j7fbw+HHqAns0SPsa1Nm7dlnNzYzF73J1Azgc72yuX2G9xNWnnXclSkhnbaqx0SbSe1yyV1zVqpoy2OJ1yu64AHlS5Xs2oYzPAurzy8eGQGygh8LQyHBn0nECYejwKFdR+qI18MTTDE6aWGtwHnXWpxO9hB7z6YImsPMOsqpUsv1qeG1m0IaoTk8hLAw2Era6UF3VRU0umdK3i8WZPBt5YMoiDtFs1ootSg8vtOdqDpGqEetBpoguC7HN1LqU5v8QgUdiSqOBtFPmZVbR/S1cM2Q23w9mjlXZvlrK6MmTk933e/A0kmybgxTiJFidK2Zdk/6UqQXirfVeA==', 'cardNo': '6228484555533333333', 'idNo': '421023198705019116', 'forgotPwdUrl': None, 'userIP': None, 'currency': '156', 'instCode': '00920001', 'successfulUrl': None, 'authSeq': None, 'bankCode': '30050000', 'idType': '01', 'mobile': '13759947589', 'JxUrl': 'https://access.credit2go.cn/escrow/p2p/page/directRechargePage', 'authFlag': None, 'version': '10', 'txAmount': '5000', 'accountId': '6212462170000078011', 'name': '对对对', 'notifyUrl': 'http://www5.91wutong.com/open/jixin/directRechargePageNotifyUrl.htm?channel=yhcg', 'txCode': 'directRechargePage', 'txDate': '20180516'}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:26:40  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:{.*'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功'.*}
 Fri, 31 Aug 2018 16:26:40  INFO test_api.py test_api [ line:65 ] =====开始比对检验返回结果=======
 Fri, 31 Aug 2018 16:26:40  INFO test_api.py test_api [ line:66 ] 正则表达式匹配模式
 Fri, 31 Aug 2018 16:26:40  INFO test_api.py test_api [ line:69 ] 结果匹配，测试用例通过
 Fri, 31 Aug 2018 16:26:40  INFO test_api.py test_api [ line:81 ] 数据库里存在符合预期条件的数据,测试通过:()
 Fri, 31 Aug 2018 16:26:40  INFO test_api.py test_api [ line:84 ] ================结束一次接口请求===========
 Fri, 31 Aug 2018 16:26:40  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:26:40  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【充值后续】813宁波银行充值失败
 Fri, 31 Aug 2018 16:26:40  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.ProductCoreTradeService
 Fri, 31 Aug 2018 16:26:40  INFO test_api.py test_api [ line:39 ] 接口请求method:tradeContinue
 Fri, 31 Aug 2018 16:26:40  INFO test_api.py test_api [ line:40 ] 接口请求data:{"serialno":"201808311540580364UT",'extFields':{"errCode":"0001", "errMsg":"交易失败", "tranSt":"F"}}
 Fri, 31 Aug 2018 16:26:41  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {}, 'errCode': 'Q015', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '查询交易原单结果为空或失败', 'tradeCode': None, 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:26:41  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:{'extFields': {}, 'errCode': '0001', 'tradeStatus': 'F', 'tradeMsg': '交易失败', 'errMsg': '交易失败', 'tradeCode': '0001', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:26:41  INFO test_api.py test_api [ line:56 ] =====开始比对检验返回结果=======
 Fri, 31 Aug 2018 16:26:41  INFO test_api.py test_api [ line:57 ] 全值匹配模式
 Fri, 31 Aug 2018 16:26:41  ERROR test_api.py test_api [ line:62 ] 全值结果比对失败原因为："{'extFields': {}, 'errCode': 'Q015', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '查询交易原单结果为空或失败', 'tradeCode': None, 'exObjFields': {}, 'key': None}" not found in "{'extFields': {}, 'errCode': '0001', 'tradeStatus': 'F', 'tradeMsg': '交易失败', 'errMsg': '交易失败', 'tradeCode': '0001', 'exObjFields': {}, 'key': None}"
Traceback (most recent call last):
  File "H:\python3_apiTest\TestCases\test_api.py", line 59, in test_api
    self.assertIn(str(res),case_data["expected_data"])
  File "F:\python36\lib\unittest\case.py", line 1089, in assertIn
    self.fail(self._formatMessage(msg, standardMsg))
  File "F:\python36\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: "{'extFields': {}, 'errCode': 'Q015', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '查询交易原单结果为空或失败', 'tradeCode': None, 'exObjFields': {}, 'key': None}" not found in "{'extFields': {}, 'errCode': '0001', 'tradeStatus': 'F', 'tradeMsg': '交易失败', 'errMsg': '交易失败', 'tradeCode': '0001', 'exObjFields': {}, 'key': None}"
 Fri, 31 Aug 2018 16:26:41  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:26:41  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【充值】973江苏银行充值
 Fri, 31 Aug 2018 16:26:41  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.VaccoCoreTradeService
 Fri, 31 Aug 2018 16:26:41  INFO test_api.py test_api [ line:39 ] 接口请求method:recharge
 Fri, 31 Aug 2018 16:26:41  INFO test_api.py test_api [ line:40 ] 接口请求data:{
 "subamt":"3900.67",
 "paymodel":"05",
 "channel":"JX",
 "bankid":"205B0CF78550959969",
 "bankno":"973",
 "bankacco":"6222620110038594231",
 "serialno":"20180831162632061uB",
 "custno":"1604578759",
 "apkind":"922",
 "subapkind":"922001",
 "apdt":"20180516",
 "aptm":"093540",
 "workdate":"20180516",
 "tradeacco":"001035098604578762",
 "taaccountid":"475B0CB66D40432285",
 "tano":"47",
 "sharetype":"A",
 "accptmd":"1",
 "branchcode":"247000",
 "distributorcode":"247",
"extFields":{'rechargeFlag':'1'}
}
 Fri, 31 Aug 2018 16:26:41  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {'retUrl': None, 'seqNo': '122992', 'txTime': '093540', 'channel': '000002', 'sign': 'eGjTeJVYHnwKj+BVmLSGfSbS7N9X5e73QOxeQ65CnDW5KhK96uCEw/BslcHR5xnsyxR/ufowevnX0CeolAXCPUOnKbqPOuOO/QwYGSGYKYImzqvqi3UoHIfbURteGH/a3UWdaj3lHnI9Aq8vLrjF+hzZ18bx/DWF48dvX6tVvOvOyeouFoRtq0J2Nt1bFhMrikfhxGrzGs19fGH9prisAw0Q7RB+RC7K+CCK02gcyFid74OLZMfkO/krrVD44qxMIS00pAP7Gx7Gdh7IhmyhJuSghbybs0xcMP9sh//3mkArJuKAw0q/iMLae2/zZd1lPrKI216HEmN4DiJiQCburQ==', 'cardNo': '6228484555533333333', 'idNo': '421023198705019116', 'forgotPwdUrl': None, 'userIP': None, 'currency': '156', 'instCode': '00920001', 'successfulUrl': None, 'authSeq': None, 'bankCode': '30050000', 'idType': '01', 'mobile': '13759947589', 'JxUrl': 'https://access.credit2go.cn/escrow/p2p/page/directRechargePage', 'authFlag': None, 'version': '10', 'txAmount': '3900.67', 'accountId': '6212462170000078011', 'name': '对对对', 'notifyUrl': 'http://www5.91wutong.com/open/jixin/directRechargePageNotifyUrl.htm?channel=yhcg', 'txCode': 'directRechargePage', 'txDate': '20180516'}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:26:41  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:{.*'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功'.*}
 Fri, 31 Aug 2018 16:26:41  INFO test_api.py test_api [ line:65 ] =====开始比对检验返回结果=======
 Fri, 31 Aug 2018 16:26:41  INFO test_api.py test_api [ line:66 ] 正则表达式匹配模式
 Fri, 31 Aug 2018 16:26:41  INFO test_api.py test_api [ line:69 ] 结果匹配，测试用例通过
 Fri, 31 Aug 2018 16:26:41  INFO test_api.py test_api [ line:81 ] 数据库里存在符合预期条件的数据,测试通过:()
 Fri, 31 Aug 2018 16:26:41  INFO test_api.py test_api [ line:84 ] ================结束一次接口请求===========
 Fri, 31 Aug 2018 16:26:41  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:26:41  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【充值后续】973江苏银行充值成功
 Fri, 31 Aug 2018 16:26:41  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.ProductCoreTradeService
 Fri, 31 Aug 2018 16:26:41  INFO test_api.py test_api [ line:39 ] 接口请求method:tradeContinue
 Fri, 31 Aug 2018 16:26:41  INFO test_api.py test_api [ line:40 ] 接口请求data:{"serialno":"201808311540580518AA","isSend":"1",'extFields':{"errCode":"0000", "errMsg":"交易成功", "tranSt":"Y"}}
 Fri, 31 Aug 2018 16:26:41  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {}, 'errCode': 'Q015', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '查询交易原单结果为空或失败', 'tradeCode': None, 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:26:41  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功！', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:26:41  INFO test_api.py test_api [ line:56 ] =====开始比对检验返回结果=======
 Fri, 31 Aug 2018 16:26:41  INFO test_api.py test_api [ line:57 ] 全值匹配模式
 Fri, 31 Aug 2018 16:26:41  ERROR test_api.py test_api [ line:62 ] 全值结果比对失败原因为："{'extFields': {}, 'errCode': 'Q015', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '查询交易原单结果为空或失败', 'tradeCode': None, 'exObjFields': {}, 'key': None}" not found in "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功！', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}"
Traceback (most recent call last):
  File "H:\python3_apiTest\TestCases\test_api.py", line 59, in test_api
    self.assertIn(str(res),case_data["expected_data"])
  File "F:\python36\lib\unittest\case.py", line 1089, in assertIn
    self.fail(self._formatMessage(msg, standardMsg))
  File "F:\python36\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: "{'extFields': {}, 'errCode': 'Q015', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '查询交易原单结果为空或失败', 'tradeCode': None, 'exObjFields': {}, 'key': None}" not found in "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功！', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}"
 Fri, 31 Aug 2018 16:26:41  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:26:41  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【充值】973江苏银行充值
 Fri, 31 Aug 2018 16:26:41  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.VaccoCoreTradeService
 Fri, 31 Aug 2018 16:26:41  INFO test_api.py test_api [ line:39 ] 接口请求method:recharge
 Fri, 31 Aug 2018 16:26:41  INFO test_api.py test_api [ line:40 ] 接口请求data:{
 "subamt":"5000",
 "paymodel":"05",
 "channel":"JX",
 "bankid":"205B0CF78550959969",
 "bankno":"973",
 "bankacco":"6222620110038594231",
 "serialno":"201808311626320322pE",
 "custno":"1604578759",
 "apkind":"922",
 "subapkind":"922001",
 "apdt":"20180516",
 "aptm":"093540",
 "workdate":"20180516",
 "tradeacco":"001035098604578762",
 "taaccountid":"475B0CB66D40432285",
 "tano":"47",
 "sharetype":"A",
 "accptmd":"1",
 "branchcode":"247000",
 "distributorcode":"247",
"extFields":{'rechargeFlag':'1'}
}
 Fri, 31 Aug 2018 16:26:41  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {'retUrl': None, 'seqNo': '129000', 'txTime': '093540', 'channel': '000002', 'sign': 'mZpLd1L/D3UuI/mzTd5U5fPPNcLAQ9/e56xk8X2xk4uMez8WJQpL7uq4+TMrQ82XCroeqqIOgQe9Kod8g/nJcqDC0FlUUvfIdpa/DjiJG7CnjRuxD5e5X3W2khWek79AGf8a+oAsy9N4FYVbSqoGHZUDXQvuaGVaBRspxn6rrHkmcanQ1f0hpoTNhI6gfhof1Q3ExAnKsM84EyDsX4MIfSlUJgZwZ3o5EqxmoF8TBad7n89i8padAYBOA1MfshETwGOZF6qGO/624HMf2YfzMzjBunTNkElsiGOVnyjHAEKLv141irwgxRyxGk8kkRNSo2ohDm2B3EmOExUpvCdrmw==', 'cardNo': '6228484555533333333', 'idNo': '421023198705019116', 'forgotPwdUrl': None, 'userIP': None, 'currency': '156', 'instCode': '00920001', 'successfulUrl': None, 'authSeq': None, 'bankCode': '30050000', 'idType': '01', 'mobile': '13759947589', 'JxUrl': 'https://access.credit2go.cn/escrow/p2p/page/directRechargePage', 'authFlag': None, 'version': '10', 'txAmount': '5000', 'accountId': '6212462170000078011', 'name': '对对对', 'notifyUrl': 'http://www5.91wutong.com/open/jixin/directRechargePageNotifyUrl.htm?channel=yhcg', 'txCode': 'directRechargePage', 'txDate': '20180516'}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:26:41  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:{.*'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功'.*}
 Fri, 31 Aug 2018 16:26:41  INFO test_api.py test_api [ line:65 ] =====开始比对检验返回结果=======
 Fri, 31 Aug 2018 16:26:41  INFO test_api.py test_api [ line:66 ] 正则表达式匹配模式
 Fri, 31 Aug 2018 16:26:41  INFO test_api.py test_api [ line:69 ] 结果匹配，测试用例通过
 Fri, 31 Aug 2018 16:26:41  INFO test_api.py test_api [ line:81 ] 数据库里存在符合预期条件的数据,测试通过:()
 Fri, 31 Aug 2018 16:26:41  INFO test_api.py test_api [ line:84 ] ================结束一次接口请求===========
 Fri, 31 Aug 2018 16:26:41  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:26:41  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【充值后续】973江苏银行充值失败
 Fri, 31 Aug 2018 16:26:41  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.ProductCoreTradeService
 Fri, 31 Aug 2018 16:26:41  INFO test_api.py test_api [ line:39 ] 接口请求method:tradeContinue
 Fri, 31 Aug 2018 16:26:41  INFO test_api.py test_api [ line:40 ] 接口请求data:{"serialno":"201808311540580571Nt",'extFields':{"errCode":"0001", "errMsg":"交易失败", "tranSt":"F"}}
 Fri, 31 Aug 2018 16:26:41  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {}, 'errCode': 'Q015', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '查询交易原单结果为空或失败', 'tradeCode': None, 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:26:41  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:{'extFields': {}, 'errCode': '0001', 'tradeStatus': 'F', 'tradeMsg': '交易失败', 'errMsg': '交易失败', 'tradeCode': '0001', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:26:41  INFO test_api.py test_api [ line:56 ] =====开始比对检验返回结果=======
 Fri, 31 Aug 2018 16:26:41  INFO test_api.py test_api [ line:57 ] 全值匹配模式
 Fri, 31 Aug 2018 16:26:41  ERROR test_api.py test_api [ line:62 ] 全值结果比对失败原因为："{'extFields': {}, 'errCode': 'Q015', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '查询交易原单结果为空或失败', 'tradeCode': None, 'exObjFields': {}, 'key': None}" not found in "{'extFields': {}, 'errCode': '0001', 'tradeStatus': 'F', 'tradeMsg': '交易失败', 'errMsg': '交易失败', 'tradeCode': '0001', 'exObjFields': {}, 'key': None}"
Traceback (most recent call last):
  File "H:\python3_apiTest\TestCases\test_api.py", line 59, in test_api
    self.assertIn(str(res),case_data["expected_data"])
  File "F:\python36\lib\unittest\case.py", line 1089, in assertIn
    self.fail(self._formatMessage(msg, standardMsg))
  File "F:\python36\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: "{'extFields': {}, 'errCode': 'Q015', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '查询交易原单结果为空或失败', 'tradeCode': None, 'exObjFields': {}, 'key': None}" not found in "{'extFields': {}, 'errCode': '0001', 'tradeStatus': 'F', 'tradeMsg': '交易失败', 'errMsg': '交易失败', 'tradeCode': '0001', 'exObjFields': {}, 'key': None}"
 Fri, 31 Aug 2018 16:26:41  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:26:41  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【充值】970南京银行充值
 Fri, 31 Aug 2018 16:26:41  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.VaccoCoreTradeService
 Fri, 31 Aug 2018 16:26:41  INFO test_api.py test_api [ line:39 ] 接口请求method:recharge
 Fri, 31 Aug 2018 16:26:41  INFO test_api.py test_api [ line:40 ] 接口请求data:{
 "subamt":"3500",
 "paymodel":"05",
 "channel":"JX",
 "bankid":"205B0CF78550959969",
 "bankno":"970",
 "bankacco":"6222620110038594231",
 "serialno":"201808311626320413sw",
 "custno":"1604578759",
 "apkind":"922",
 "subapkind":"922001",
 "apdt":"20180516",
 "aptm":"093540",
 "workdate":"20180516",
 "tradeacco":"001035098604578762",
 "taaccountid":"475B0CB66D40432285",
 "tano":"47",
 "sharetype":"A",
 "accptmd":"1",
 "branchcode":"247000",
 "distributorcode":"247",
"extFields":{'rechargeFlag':'1'}
}
 Fri, 31 Aug 2018 16:26:41  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {'retUrl': None, 'seqNo': '125725', 'txTime': '093540', 'channel': '000002', 'sign': 'U02VJvJ2QSL368FT9RRL4/6sy/R67sjlbbusTlKVk8tutBFnplUF44DzgXpq/UGAza2+8/9Gkm7YsyJraJShmTZUitJPWb5emGVpVvbYJ4n56jSm+MeklvO8CJeABqgXMXYgyVlxFErhkGFXzh3uRL3dA+IZB6Rl03HiG+nEfd0Ti1tYaMYcP4rWsv5dRP5L4Je9c9u9nuFLmLNdU6IkDQpp620+fC2cJHLOfiMC+FYte7npLdjWzaOtf/lG8uMRr8Rsc7HETsU4NK/DIP2Afr+ZN3OqLKc1pcyAW9ntePjO6gKxwjLBkLBhOlwA1iZRKQEWfJLEyndKhLWdAY2Kbg==', 'cardNo': '6228484555533333333', 'idNo': '421023198705019116', 'forgotPwdUrl': None, 'userIP': None, 'currency': '156', 'instCode': '00920001', 'successfulUrl': None, 'authSeq': None, 'bankCode': '30050000', 'idType': '01', 'mobile': '13759947589', 'JxUrl': 'https://access.credit2go.cn/escrow/p2p/page/directRechargePage', 'authFlag': None, 'version': '10', 'txAmount': '3500', 'accountId': '6212462170000078011', 'name': '对对对', 'notifyUrl': 'http://www5.91wutong.com/open/jixin/directRechargePageNotifyUrl.htm?channel=yhcg', 'txCode': 'directRechargePage', 'txDate': '20180516'}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:26:41  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:{.*'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功'.*}
 Fri, 31 Aug 2018 16:26:41  INFO test_api.py test_api [ line:65 ] =====开始比对检验返回结果=======
 Fri, 31 Aug 2018 16:26:41  INFO test_api.py test_api [ line:66 ] 正则表达式匹配模式
 Fri, 31 Aug 2018 16:26:41  INFO test_api.py test_api [ line:69 ] 结果匹配，测试用例通过
 Fri, 31 Aug 2018 16:26:41  INFO test_api.py test_api [ line:81 ] 数据库里存在符合预期条件的数据,测试通过:()
 Fri, 31 Aug 2018 16:26:41  INFO test_api.py test_api [ line:84 ] ================结束一次接口请求===========
 Fri, 31 Aug 2018 16:26:41  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:26:41  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【充值后续】970南京银行充值成功
 Fri, 31 Aug 2018 16:26:41  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.ProductCoreTradeService
 Fri, 31 Aug 2018 16:26:41  INFO test_api.py test_api [ line:39 ] 接口请求method:tradeContinue
 Fri, 31 Aug 2018 16:26:41  INFO test_api.py test_api [ line:40 ] 接口请求data:{"serialno":"201808311540580576Sj","isSend":"1",'extFields':{"errCode":"0000", "errMsg":"交易成功", "tranSt":"Y"}}
 Fri, 31 Aug 2018 16:26:41  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {}, 'errCode': 'Q015', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '查询交易原单结果为空或失败', 'tradeCode': None, 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:26:41  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功！', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:26:41  INFO test_api.py test_api [ line:56 ] =====开始比对检验返回结果=======
 Fri, 31 Aug 2018 16:26:41  INFO test_api.py test_api [ line:57 ] 全值匹配模式
 Fri, 31 Aug 2018 16:26:41  ERROR test_api.py test_api [ line:62 ] 全值结果比对失败原因为："{'extFields': {}, 'errCode': 'Q015', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '查询交易原单结果为空或失败', 'tradeCode': None, 'exObjFields': {}, 'key': None}" not found in "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功！', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}"
Traceback (most recent call last):
  File "H:\python3_apiTest\TestCases\test_api.py", line 59, in test_api
    self.assertIn(str(res),case_data["expected_data"])
  File "F:\python36\lib\unittest\case.py", line 1089, in assertIn
    self.fail(self._formatMessage(msg, standardMsg))
  File "F:\python36\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: "{'extFields': {}, 'errCode': 'Q015', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '查询交易原单结果为空或失败', 'tradeCode': None, 'exObjFields': {}, 'key': None}" not found in "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功！', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}"
 Fri, 31 Aug 2018 16:26:41  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:26:41  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【充值】970南京银行充值
 Fri, 31 Aug 2018 16:26:41  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.VaccoCoreTradeService
 Fri, 31 Aug 2018 16:26:41  INFO test_api.py test_api [ line:39 ] 接口请求method:recharge
 Fri, 31 Aug 2018 16:26:41  INFO test_api.py test_api [ line:40 ] 接口请求data:{
 "subamt":"5000",
 "paymodel":"05",
 "channel":"JX",
 "bankid":"205B0CF78550959969",
 "bankno":"970",
 "bankacco":"6222620110038594231",
 "serialno":"201808311626320409GW",
 "custno":"1604578759",
 "apkind":"922",
 "subapkind":"922001",
 "apdt":"20180516",
 "aptm":"093540",
 "workdate":"20180516",
 "tradeacco":"001035098604578762",
 "taaccountid":"475B0CB66D40432285",
 "tano":"47",
 "sharetype":"A",
 "accptmd":"1",
 "branchcode":"247000",
 "distributorcode":"247",
"extFields":{'rechargeFlag':'1'}
}
 Fri, 31 Aug 2018 16:26:41  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {'retUrl': None, 'seqNo': '147002', 'txTime': '093540', 'channel': '000002', 'sign': 'Xk8YKyEYxg53/qloMUuWNgnt08HhFWQ9aHOu2lHGUxwrjoJrorsKWr/XeBcy9x6fVfY4eZ7rZOJh7T+ZlZkQJ1Z6Qc9VpJ3a5cOi6/k478//Orxsi7Jl0hq548hKwGFXnc5Y1gczSbqyLS6PjmQC9xUDKfprdTjz8/Ff+qVGXvM2/0TxxCWkz33k3l+qfwImgLwUs5sx87ZYp4uA2o7PYF1DJrEjUwUFJQETwzl750ZwRAqckjjPIMjLxQzTUlptUUk4XReMJ2glTWp2xa2ujsxlY4JCQKFlSnsBB/08nJVUR82z4+HHKR06FTdpWim+rAKpN7mk+eN+UWAZ+3OxxQ==', 'cardNo': '6228484555533333333', 'idNo': '421023198705019116', 'forgotPwdUrl': None, 'userIP': None, 'currency': '156', 'instCode': '00920001', 'successfulUrl': None, 'authSeq': None, 'bankCode': '30050000', 'idType': '01', 'mobile': '13759947589', 'JxUrl': 'https://access.credit2go.cn/escrow/p2p/page/directRechargePage', 'authFlag': None, 'version': '10', 'txAmount': '5000', 'accountId': '6212462170000078011', 'name': '对对对', 'notifyUrl': 'http://www5.91wutong.com/open/jixin/directRechargePageNotifyUrl.htm?channel=yhcg', 'txCode': 'directRechargePage', 'txDate': '20180516'}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:26:41  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:{.*'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功'.*}
 Fri, 31 Aug 2018 16:26:41  INFO test_api.py test_api [ line:65 ] =====开始比对检验返回结果=======
 Fri, 31 Aug 2018 16:26:41  INFO test_api.py test_api [ line:66 ] 正则表达式匹配模式
 Fri, 31 Aug 2018 16:26:41  INFO test_api.py test_api [ line:69 ] 结果匹配，测试用例通过
 Fri, 31 Aug 2018 16:26:41  INFO test_api.py test_api [ line:81 ] 数据库里存在符合预期条件的数据,测试通过:()
 Fri, 31 Aug 2018 16:26:41  INFO test_api.py test_api [ line:84 ] ================结束一次接口请求===========
 Fri, 31 Aug 2018 16:26:41  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:26:41  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【充值后续】970南京银行充值失败
 Fri, 31 Aug 2018 16:26:41  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.ProductCoreTradeService
 Fri, 31 Aug 2018 16:26:41  INFO test_api.py test_api [ line:39 ] 接口请求method:tradeContinue
 Fri, 31 Aug 2018 16:26:41  INFO test_api.py test_api [ line:40 ] 接口请求data:{"serialno":"201808311540580106lv",'extFields':{"errCode":"0001", "errMsg":"交易失败", "tranSt":"F"}}
 Fri, 31 Aug 2018 16:26:41  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {}, 'errCode': 'Q015', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '查询交易原单结果为空或失败', 'tradeCode': None, 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:26:41  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:{'extFields': {}, 'errCode': '0001', 'tradeStatus': 'F', 'tradeMsg': '交易失败', 'errMsg': '交易失败', 'tradeCode': '0001', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:26:41  INFO test_api.py test_api [ line:56 ] =====开始比对检验返回结果=======
 Fri, 31 Aug 2018 16:26:41  INFO test_api.py test_api [ line:57 ] 全值匹配模式
 Fri, 31 Aug 2018 16:26:41  ERROR test_api.py test_api [ line:62 ] 全值结果比对失败原因为："{'extFields': {}, 'errCode': 'Q015', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '查询交易原单结果为空或失败', 'tradeCode': None, 'exObjFields': {}, 'key': None}" not found in "{'extFields': {}, 'errCode': '0001', 'tradeStatus': 'F', 'tradeMsg': '交易失败', 'errMsg': '交易失败', 'tradeCode': '0001', 'exObjFields': {}, 'key': None}"
Traceback (most recent call last):
  File "H:\python3_apiTest\TestCases\test_api.py", line 59, in test_api
    self.assertIn(str(res),case_data["expected_data"])
  File "F:\python36\lib\unittest\case.py", line 1089, in assertIn
    self.fail(self._formatMessage(msg, standardMsg))
  File "F:\python36\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: "{'extFields': {}, 'errCode': 'Q015', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '查询交易原单结果为空或失败', 'tradeCode': None, 'exObjFields': {}, 'key': None}" not found in "{'extFields': {}, 'errCode': '0001', 'tradeStatus': 'F', 'tradeMsg': '交易失败', 'errMsg': '交易失败', 'tradeCode': '0001', 'exObjFields': {}, 'key': None}"
 Fri, 31 Aug 2018 16:26:41  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:26:41  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【充值】974江西银行充值
 Fri, 31 Aug 2018 16:26:41  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.VaccoCoreTradeService
 Fri, 31 Aug 2018 16:26:41  INFO test_api.py test_api [ line:39 ] 接口请求method:recharge
 Fri, 31 Aug 2018 16:26:41  INFO test_api.py test_api [ line:40 ] 接口请求data:{
 "subamt":"5000",
 "paymodel":"05",
 "channel":"JX",
 "bankid":"205B0CF78550959969",
 "bankno":"974",
 "bankacco":"6222620110038594231",
 "serialno":"201808311626320645Cz",
 "custno":"1604578759",
 "apkind":"922",
 "subapkind":"922001",
 "apdt":"20180516",
 "aptm":"093540",
 "workdate":"20180516",
 "tradeacco":"001035098604578762",
 "taaccountid":"475B0CB66D40432285",
 "tano":"47",
 "sharetype":"A",
 "accptmd":"1",
 "branchcode":"247000",
 "distributorcode":"247",
"extFields":{'rechargeFlag':'1'}
}
 Fri, 31 Aug 2018 16:26:41  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {'retUrl': None, 'seqNo': '135378', 'txTime': '093540', 'channel': '000002', 'sign': 'aT7y6N3Ps1KoThN1ynRgoe0Kz7n/PmYkT9JdgDNkSAILbFkCdbndeu98onHzEa5WxPpisU1Ur59s6mG5Ec3MlUTlunJILSmJr5hh98NDuhCGWtou3rMzDWCI3KCcvaPk+MHtpIdnasVZyrx78SgTZxRl9S1yrX2Ucc4VKzFn1FA7f6fh65iLe26x+HLfH0/0YCNmfdLOqm6hFkc2vIp2fuq5AiorErvWGlXHpnJzihFRYnnvq/qZRvZlu8rqDcAe4HIIIsvmkZrfPfEAFZ8LawRJg6CeQx4sFjF4nGOGDus/5ukhqEkJxHYv0clQnh8zPQ5G0eTtYZ5y/Z04tcglsQ==', 'cardNo': '6228484555533333333', 'idNo': '421023198705019116', 'forgotPwdUrl': None, 'userIP': None, 'currency': '156', 'instCode': '00920001', 'successfulUrl': None, 'authSeq': None, 'bankCode': '30050000', 'idType': '01', 'mobile': '13759947589', 'JxUrl': 'https://access.credit2go.cn/escrow/p2p/page/directRechargePage', 'authFlag': None, 'version': '10', 'txAmount': '5000', 'accountId': '6212462170000078011', 'name': '对对对', 'notifyUrl': 'http://www5.91wutong.com/open/jixin/directRechargePageNotifyUrl.htm?channel=yhcg', 'txCode': 'directRechargePage', 'txDate': '20180516'}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:26:41  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:{.*'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功'.*}
 Fri, 31 Aug 2018 16:26:41  INFO test_api.py test_api [ line:65 ] =====开始比对检验返回结果=======
 Fri, 31 Aug 2018 16:26:41  INFO test_api.py test_api [ line:66 ] 正则表达式匹配模式
 Fri, 31 Aug 2018 16:26:41  INFO test_api.py test_api [ line:69 ] 结果匹配，测试用例通过
 Fri, 31 Aug 2018 16:26:41  INFO test_api.py test_api [ line:81 ] 数据库里存在符合预期条件的数据,测试通过:()
 Fri, 31 Aug 2018 16:26:41  INFO test_api.py test_api [ line:84 ] ================结束一次接口请求===========
 Fri, 31 Aug 2018 16:26:41  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:26:41  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【充值后续】974江西银行充值成功
 Fri, 31 Aug 2018 16:26:41  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.ProductCoreTradeService
 Fri, 31 Aug 2018 16:26:41  INFO test_api.py test_api [ line:39 ] 接口请求method:tradeContinue
 Fri, 31 Aug 2018 16:26:41  INFO test_api.py test_api [ line:40 ] 接口请求data:{"serialno":"201808311540580154Mj","isSend":"1",'extFields':{"errCode":"0000", "errMsg":"交易成功", "tranSt":"Y"}}
 Fri, 31 Aug 2018 16:26:42  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {}, 'errCode': 'Q015', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '查询交易原单结果为空或失败', 'tradeCode': None, 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:26:42  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功！', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:26:42  INFO test_api.py test_api [ line:56 ] =====开始比对检验返回结果=======
 Fri, 31 Aug 2018 16:26:42  INFO test_api.py test_api [ line:57 ] 全值匹配模式
 Fri, 31 Aug 2018 16:26:42  ERROR test_api.py test_api [ line:62 ] 全值结果比对失败原因为："{'extFields': {}, 'errCode': 'Q015', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '查询交易原单结果为空或失败', 'tradeCode': None, 'exObjFields': {}, 'key': None}" not found in "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功！', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}"
Traceback (most recent call last):
  File "H:\python3_apiTest\TestCases\test_api.py", line 59, in test_api
    self.assertIn(str(res),case_data["expected_data"])
  File "F:\python36\lib\unittest\case.py", line 1089, in assertIn
    self.fail(self._formatMessage(msg, standardMsg))
  File "F:\python36\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: "{'extFields': {}, 'errCode': 'Q015', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '查询交易原单结果为空或失败', 'tradeCode': None, 'exObjFields': {}, 'key': None}" not found in "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功！', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}"
 Fri, 31 Aug 2018 16:26:42  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:26:42  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【充值】974江西银行充值
 Fri, 31 Aug 2018 16:26:42  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.VaccoCoreTradeService
 Fri, 31 Aug 2018 16:26:42  INFO test_api.py test_api [ line:39 ] 接口请求method:recharge
 Fri, 31 Aug 2018 16:26:42  INFO test_api.py test_api [ line:40 ] 接口请求data:{
 "subamt":"5000",
 "paymodel":"05",
 "channel":"JX",
 "bankid":"205B0CF78550959969",
 "bankno":"974",
 "bankacco":"6222620110038594231",
 "serialno":"201808311626320848jQ",
 "custno":"1604578759",
 "apkind":"922",
 "subapkind":"922001",
 "apdt":"20180516",
 "aptm":"093540",
 "workdate":"20180516",
 "tradeacco":"001035098604578762",
 "taaccountid":"475B0CB66D40432285",
 "tano":"47",
 "sharetype":"A",
 "accptmd":"1",
 "branchcode":"247000",
 "distributorcode":"247",
"extFields":{'rechargeFlag':'1'}
}
 Fri, 31 Aug 2018 16:26:42  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {'retUrl': None, 'seqNo': '101827', 'txTime': '093540', 'channel': '000002', 'sign': 'WC976wuSGnssl5cCcPW01Jm9Jy1L7Ng756Vl4llR5KUVf+hCP8e34Bae965VtTmTvBiGs60Blv8P1uEnNXj/G81hMXmO/p/G9xste033jX8Z/DgaNkbriarduyZO0tAg4aCqRfDHHMIEA/VCqsDO0SFlkS6z/NTvY5u2eehrnaCfhmLVq3AC2OpgBY9/3DfkvkKDNLPp1c9L5zBhBdpbC3OJhMlNfZj6RdudpopH9URedHEDFVETbEyedwJmi4Xt9O8ee3dhAL95qJ6XByRN5YHZCbCDevkxJDgb0I+g+c85jkoasIQ07FbVXx+T8OupbIWNvscBLEYUJ2h+J1ysqQ==', 'cardNo': '6228484555533333333', 'idNo': '421023198705019116', 'forgotPwdUrl': None, 'userIP': None, 'currency': '156', 'instCode': '00920001', 'successfulUrl': None, 'authSeq': None, 'bankCode': '30050000', 'idType': '01', 'mobile': '13759947589', 'JxUrl': 'https://access.credit2go.cn/escrow/p2p/page/directRechargePage', 'authFlag': None, 'version': '10', 'txAmount': '5000', 'accountId': '6212462170000078011', 'name': '对对对', 'notifyUrl': 'http://www5.91wutong.com/open/jixin/directRechargePageNotifyUrl.htm?channel=yhcg', 'txCode': 'directRechargePage', 'txDate': '20180516'}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:26:42  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:{.*'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功'.*}
 Fri, 31 Aug 2018 16:26:42  INFO test_api.py test_api [ line:65 ] =====开始比对检验返回结果=======
 Fri, 31 Aug 2018 16:26:42  INFO test_api.py test_api [ line:66 ] 正则表达式匹配模式
 Fri, 31 Aug 2018 16:26:42  INFO test_api.py test_api [ line:69 ] 结果匹配，测试用例通过
 Fri, 31 Aug 2018 16:26:42  INFO test_api.py test_api [ line:81 ] 数据库里存在符合预期条件的数据,测试通过:()
 Fri, 31 Aug 2018 16:26:42  INFO test_api.py test_api [ line:84 ] ================结束一次接口请求===========
 Fri, 31 Aug 2018 16:26:42  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:26:42  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【充值后续】974江西银行充值失败
 Fri, 31 Aug 2018 16:26:42  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.ProductCoreTradeService
 Fri, 31 Aug 2018 16:26:42  INFO test_api.py test_api [ line:39 ] 接口请求method:tradeContinue
 Fri, 31 Aug 2018 16:26:42  INFO test_api.py test_api [ line:40 ] 接口请求data:{"serialno":"20180831154058046Qb",'extFields':{"errCode":"0001", "errMsg":"交易失败", "tranSt":"F"}}
 Fri, 31 Aug 2018 16:26:42  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {}, 'errCode': 'Q015', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '查询交易原单结果为空或失败', 'tradeCode': None, 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:26:42  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:{'extFields': {}, 'errCode': '0001', 'tradeStatus': 'F', 'tradeMsg': '交易失败', 'errMsg': '交易失败', 'tradeCode': '0001', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:26:42  INFO test_api.py test_api [ line:56 ] =====开始比对检验返回结果=======
 Fri, 31 Aug 2018 16:26:42  INFO test_api.py test_api [ line:57 ] 全值匹配模式
 Fri, 31 Aug 2018 16:26:42  ERROR test_api.py test_api [ line:62 ] 全值结果比对失败原因为："{'extFields': {}, 'errCode': 'Q015', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '查询交易原单结果为空或失败', 'tradeCode': None, 'exObjFields': {}, 'key': None}" not found in "{'extFields': {}, 'errCode': '0001', 'tradeStatus': 'F', 'tradeMsg': '交易失败', 'errMsg': '交易失败', 'tradeCode': '0001', 'exObjFields': {}, 'key': None}"
Traceback (most recent call last):
  File "H:\python3_apiTest\TestCases\test_api.py", line 59, in test_api
    self.assertIn(str(res),case_data["expected_data"])
  File "F:\python36\lib\unittest\case.py", line 1089, in assertIn
    self.fail(self._formatMessage(msg, standardMsg))
  File "F:\python36\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: "{'extFields': {}, 'errCode': 'Q015', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '查询交易原单结果为空或失败', 'tradeCode': None, 'exObjFields': {}, 'key': None}" not found in "{'extFields': {}, 'errCode': '0001', 'tradeStatus': 'F', 'tradeMsg': '交易失败', 'errMsg': '交易失败', 'tradeCode': '0001', 'exObjFields': {}, 'key': None}"
 Fri, 31 Aug 2018 16:26:42  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:26:42  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【充值】315恒丰银行充值
 Fri, 31 Aug 2018 16:26:42  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.VaccoCoreTradeService
 Fri, 31 Aug 2018 16:26:42  INFO test_api.py test_api [ line:39 ] 接口请求method:recharge
 Fri, 31 Aug 2018 16:26:42  INFO test_api.py test_api [ line:40 ] 接口请求data:{
 "subamt":"40000.12",
 "paymodel":"05",
 "channel":"JX",
 "bankid":"205B0CF78550959969",
 "bankno":"315",
 "bankacco":"6222620110038594231",
 "serialno":"201808311626320805Ti",
 "custno":"1604578759",
 "apkind":"922",
 "subapkind":"922001",
 "apdt":"20180516",
 "aptm":"093540",
 "workdate":"20180516",
 "tradeacco":"001035098604578762",
 "taaccountid":"475B0CB66D40432285",
 "tano":"47",
 "sharetype":"A",
 "accptmd":"1",
 "branchcode":"247000",
 "distributorcode":"247",
"extFields":{'rechargeFlag':'1'}
}
 Fri, 31 Aug 2018 16:26:42  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {'retUrl': None, 'seqNo': '140284', 'txTime': '093540', 'channel': '000002', 'sign': 'NPpvJjQUnlaRKUOkjUgIKuPU1CnalxyBRHjN3CSYLV8rovKPZGsrxG7TdIMbIyK7cbkXbw5pMOUwKh/zjjFaAlV+XysBy53nC700B63CvTb7tu4M+qyFxYg0cdGipWjoIK7tjSdTK2QNU7AqxnFy376+qH33NQFEh87qUIYRL8mY84brocnDhWS7Zsh7vpTLt1oY6BEjYbehXb0XW5/1+qMiL0bCWZuTonrZG6ux6+PS7BO499MGHHt+KsxJIUTU+c/A5g/8x46vUKRIqmCYQSB6wmKs5ICv0twquDij4j7496hLqYULzh3/rQ1Qw+7/6fUEB4M0JBdHG0t1lkNAqA==', 'cardNo': '6228484555533333333', 'idNo': '421023198705019116', 'forgotPwdUrl': None, 'userIP': None, 'currency': '156', 'instCode': '00920001', 'successfulUrl': None, 'authSeq': None, 'bankCode': '30050000', 'idType': '01', 'mobile': '13759947589', 'JxUrl': 'https://access.credit2go.cn/escrow/p2p/page/directRechargePage', 'authFlag': None, 'version': '10', 'txAmount': '40000.12', 'accountId': '6212462170000078011', 'name': '对对对', 'notifyUrl': 'http://www5.91wutong.com/open/jixin/directRechargePageNotifyUrl.htm?channel=yhcg', 'txCode': 'directRechargePage', 'txDate': '20180516'}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:26:42  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:{.*'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功'.*}
 Fri, 31 Aug 2018 16:26:42  INFO test_api.py test_api [ line:65 ] =====开始比对检验返回结果=======
 Fri, 31 Aug 2018 16:26:42  INFO test_api.py test_api [ line:66 ] 正则表达式匹配模式
 Fri, 31 Aug 2018 16:26:42  INFO test_api.py test_api [ line:69 ] 结果匹配，测试用例通过
 Fri, 31 Aug 2018 16:26:42  INFO test_api.py test_api [ line:81 ] 数据库里存在符合预期条件的数据,测试通过:()
 Fri, 31 Aug 2018 16:26:42  INFO test_api.py test_api [ line:84 ] ================结束一次接口请求===========
 Fri, 31 Aug 2018 16:26:42  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:26:42  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【充值后续】315恒丰银行充值成功
 Fri, 31 Aug 2018 16:26:42  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.ProductCoreTradeService
 Fri, 31 Aug 2018 16:26:42  INFO test_api.py test_api [ line:39 ] 接口请求method:tradeContinue
 Fri, 31 Aug 2018 16:26:42  INFO test_api.py test_api [ line:40 ] 接口请求data:{"serialno":"201808311540580869dj","isSend":"1",'extFields':{"errCode":"0000", "errMsg":"交易成功", "tranSt":"Y"}}
 Fri, 31 Aug 2018 16:26:42  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {}, 'errCode': 'Q015', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '查询交易原单结果为空或失败', 'tradeCode': None, 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:26:42  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功！', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:26:42  INFO test_api.py test_api [ line:56 ] =====开始比对检验返回结果=======
 Fri, 31 Aug 2018 16:26:42  INFO test_api.py test_api [ line:57 ] 全值匹配模式
 Fri, 31 Aug 2018 16:26:42  ERROR test_api.py test_api [ line:62 ] 全值结果比对失败原因为："{'extFields': {}, 'errCode': 'Q015', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '查询交易原单结果为空或失败', 'tradeCode': None, 'exObjFields': {}, 'key': None}" not found in "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功！', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}"
Traceback (most recent call last):
  File "H:\python3_apiTest\TestCases\test_api.py", line 59, in test_api
    self.assertIn(str(res),case_data["expected_data"])
  File "F:\python36\lib\unittest\case.py", line 1089, in assertIn
    self.fail(self._formatMessage(msg, standardMsg))
  File "F:\python36\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: "{'extFields': {}, 'errCode': 'Q015', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '查询交易原单结果为空或失败', 'tradeCode': None, 'exObjFields': {}, 'key': None}" not found in "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功！', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}"
 Fri, 31 Aug 2018 16:26:42  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:26:42  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【充值】315恒丰银行充值
 Fri, 31 Aug 2018 16:26:42  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.VaccoCoreTradeService
 Fri, 31 Aug 2018 16:26:42  INFO test_api.py test_api [ line:39 ] 接口请求method:recharge
 Fri, 31 Aug 2018 16:26:42  INFO test_api.py test_api [ line:40 ] 接口请求data:{
 "subamt":"5000",
 "paymodel":"05",
 "channel":"JX",
 "bankid":"205B0CF78550959969",
 "bankno":"315",
 "bankacco":"6222620110038594231",
 "serialno":"201808311626320786MF",
 "custno":"1604578759",
 "apkind":"922",
 "subapkind":"922001",
 "apdt":"20180516",
 "aptm":"093540",
 "workdate":"20180516",
 "tradeacco":"001035098604578762",
 "taaccountid":"475B0CB66D40432285",
 "tano":"47",
 "sharetype":"A",
 "accptmd":"1",
 "branchcode":"247000",
 "distributorcode":"247",
"extFields":{'rechargeFlag':'1'}
}
 Fri, 31 Aug 2018 16:26:42  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {'retUrl': None, 'seqNo': '106293', 'txTime': '093540', 'channel': '000002', 'sign': 'AvBrfS1g/rlCF0RyVafGxI6TTS6M5w3mUm9avi2rDLZAJlvVJsp6aq0dA7Bx6lMfKUpVhdlfVg9IG7JmRCYvA+zgXYSnSSpAgQdR2bieqbcdmMjEAHmUb7AQX3buc7c1rp3WS0A7xox/e9DyttdNNhrbM7otwvm9Hkwmd2shqqnoRVh9ZboGYITe29SZzbJHl9xZosJh9X1YRy6jdHPn1h/HxKqGXep2UYOWFo4Q9/fp92lWKkN3Bmwj8j/YV1T8cMgflaSf6pnOoL/bKcIfBVKLYWz8vPSICg194Ib6hnH1+vUSVOU+ONG0a1irk8+d3B1hHjnjqM3DX+pP4dLm7w==', 'cardNo': '6228484555533333333', 'idNo': '421023198705019116', 'forgotPwdUrl': None, 'userIP': None, 'currency': '156', 'instCode': '00920001', 'successfulUrl': None, 'authSeq': None, 'bankCode': '30050000', 'idType': '01', 'mobile': '13759947589', 'JxUrl': 'https://access.credit2go.cn/escrow/p2p/page/directRechargePage', 'authFlag': None, 'version': '10', 'txAmount': '5000', 'accountId': '6212462170000078011', 'name': '对对对', 'notifyUrl': 'http://www5.91wutong.com/open/jixin/directRechargePageNotifyUrl.htm?channel=yhcg', 'txCode': 'directRechargePage', 'txDate': '20180516'}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:26:42  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:{.*'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功'.*}
 Fri, 31 Aug 2018 16:26:42  INFO test_api.py test_api [ line:65 ] =====开始比对检验返回结果=======
 Fri, 31 Aug 2018 16:26:42  INFO test_api.py test_api [ line:66 ] 正则表达式匹配模式
 Fri, 31 Aug 2018 16:26:42  INFO test_api.py test_api [ line:69 ] 结果匹配，测试用例通过
 Fri, 31 Aug 2018 16:26:42  INFO test_api.py test_api [ line:81 ] 数据库里存在符合预期条件的数据,测试通过:()
 Fri, 31 Aug 2018 16:26:42  INFO test_api.py test_api [ line:84 ] ================结束一次接口请求===========
 Fri, 31 Aug 2018 16:26:42  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:26:42  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【充值后续】315恒丰银行充值失败
 Fri, 31 Aug 2018 16:26:42  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.ProductCoreTradeService
 Fri, 31 Aug 2018 16:26:42  INFO test_api.py test_api [ line:39 ] 接口请求method:tradeContinue
 Fri, 31 Aug 2018 16:26:42  INFO test_api.py test_api [ line:40 ] 接口请求data:{"serialno":"20180831154058068Ng",'extFields':{"errCode":"0001", "errMsg":"交易失败", "tranSt":"F"}}
 Fri, 31 Aug 2018 16:26:42  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {}, 'errCode': 'Q015', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '查询交易原单结果为空或失败', 'tradeCode': None, 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:26:42  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:{'extFields': {}, 'errCode': '0001', 'tradeStatus': 'F', 'tradeMsg': '交易失败', 'errMsg': '交易失败', 'tradeCode': '0001', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:26:42  INFO test_api.py test_api [ line:56 ] =====开始比对检验返回结果=======
 Fri, 31 Aug 2018 16:26:42  INFO test_api.py test_api [ line:57 ] 全值匹配模式
 Fri, 31 Aug 2018 16:26:42  ERROR test_api.py test_api [ line:62 ] 全值结果比对失败原因为："{'extFields': {}, 'errCode': 'Q015', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '查询交易原单结果为空或失败', 'tradeCode': None, 'exObjFields': {}, 'key': None}" not found in "{'extFields': {}, 'errCode': '0001', 'tradeStatus': 'F', 'tradeMsg': '交易失败', 'errMsg': '交易失败', 'tradeCode': '0001', 'exObjFields': {}, 'key': None}"
Traceback (most recent call last):
  File "H:\python3_apiTest\TestCases\test_api.py", line 59, in test_api
    self.assertIn(str(res),case_data["expected_data"])
  File "F:\python36\lib\unittest\case.py", line 1089, in assertIn
    self.fail(self._formatMessage(msg, standardMsg))
  File "F:\python36\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: "{'extFields': {}, 'errCode': 'Q015', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '查询交易原单结果为空或失败', 'tradeCode': None, 'exObjFields': {}, 'key': None}" not found in "{'extFields': {}, 'errCode': '0001', 'tradeStatus': 'F', 'tradeMsg': '交易失败', 'errMsg': '交易失败', 'tradeCode': '0001', 'exObjFields': {}, 'key': None}"
 Fri, 31 Aug 2018 16:26:42  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:26:42  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【充值】充值金额含特殊符号
 Fri, 31 Aug 2018 16:26:42  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.VaccoCoreTradeService
 Fri, 31 Aug 2018 16:26:42  INFO test_api.py test_api [ line:39 ] 接口请求method:recharge
 Fri, 31 Aug 2018 16:26:42  INFO test_api.py test_api [ line:40 ] 接口请求data:{
 "subamt":"40￥2",
 "paymodel":"05",
 "channel":"JX",
 "bankid":"205AE16EA606342921",
 "bankno":"315",
 "bankacco":"6222620110038594231",
 "serialno":"201808311626320494cO",
 "custno":"1538967652",
 "apkind":"922",
 "subapkind":"922001",
 "apdt":"20180501",
 "aptm":"093540",
 "workdate":"20180516",
 "tradeacco":"008395590573718304",
 "taaccountid":"475AF52F9665610507",
 "tano":"47",
 "sharetype":"A",
 "accptmd":"1",
 "branchcode":"247000",
 "distributorcode":"247","extFields":{'rechargeFlag':'1'}
}
 Fri, 31 Aug 2018 16:26:42  INFO test_api.py test_api [ line:49 ] 接口请求response data为：Failed to invoke method recharge, cause: java.lang.NumberFormatException
 Fri, 31 Aug 2018 16:26:42  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:Failed to invoke method recharge, cause: java.lang.NumberFormatException
 Fri, 31 Aug 2018 16:26:42  INFO test_api.py test_api [ line:56 ] =====开始比对检验返回结果=======
 Fri, 31 Aug 2018 16:26:42  INFO test_api.py test_api [ line:57 ] 全值匹配模式
 Fri, 31 Aug 2018 16:26:42  INFO test_api.py test_api [ line:60 ] 结果比对成功，测试用例通过
 Fri, 31 Aug 2018 16:26:42  INFO test_api.py test_api [ line:84 ] ================结束一次接口请求===========
 Fri, 31 Aug 2018 16:26:42  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:26:42  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【充值】cusno与其他参数不匹配
 Fri, 31 Aug 2018 16:26:42  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.VaccoCoreTradeService
 Fri, 31 Aug 2018 16:26:42  INFO test_api.py test_api [ line:39 ] 接口请求method:recharge
 Fri, 31 Aug 2018 16:26:42  INFO test_api.py test_api [ line:40 ] 接口请求data:{
 "subamt":"1200",
 "paymodel":"05",
 "channel":"JX",
 "bankid":"205AE16EA606342921",
 "bankno":"315",
 "bankacco":"6222620110038594231",
 "serialno":"2018083116263207Ci",
 "custno":"1538967654",
 "apkind":"922",
 "subapkind":"922001",
 "apdt":"20180501",
 "aptm":"093540",
 "workdate":"20180516",
 "tradeacco":"008395590573718304",
 "taaccountid":"475AF52F9665610507",
 "tano":"47",
 "sharetype":"A",
 "accptmd":"1",
 "branchcode":"247000",
 "distributorcode":"247","extFields":{'rechargeFlag':'1'}
}
 Fri, 31 Aug 2018 16:26:42  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': None, 'errCode': '0000', 'tradeStatus': 'F', 'tradeMsg': '查询客户信息结果为空或失败', 'errMsg': '申请成功', 'tradeCode': 'Q004', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:26:42  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:{'extFields': None, 'errCode': '0000', 'tradeStatus': 'F', 'tradeMsg': '查询客户信息结果为空或失败', 'errMsg': '申请成功', 'tradeCode': 'Q004', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:26:42  INFO test_api.py test_api [ line:56 ] =====开始比对检验返回结果=======
 Fri, 31 Aug 2018 16:26:42  INFO test_api.py test_api [ line:57 ] 全值匹配模式
 Fri, 31 Aug 2018 16:26:42  INFO test_api.py test_api [ line:60 ] 结果比对成功，测试用例通过
 Fri, 31 Aug 2018 16:26:42  INFO test_api.py test_api [ line:84 ] ================结束一次接口请求===========
 Fri, 31 Aug 2018 16:26:42  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:26:42  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【充值】cusno错误
 Fri, 31 Aug 2018 16:26:42  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.VaccoCoreTradeService
 Fri, 31 Aug 2018 16:26:42  INFO test_api.py test_api [ line:39 ] 接口请求method:recharge
 Fri, 31 Aug 2018 16:26:42  INFO test_api.py test_api [ line:40 ] 接口请求data:{
 "subamt":"1200",
 "paymodel":"05",
 "channel":"JX",
 "bankid":"205AE16EA606342921",
 "bankno":"315",
 "bankacco":"6222620110038594231",
 "serialno":"201808311626320344pG",
 "custno":"1538",
 "apkind":"922",
 "subapkind":"922001",
 "apdt":"20180501",
 "aptm":"093540",
 "workdate":"20180516",
 "tradeacco":"008395590573718304",
 "taaccountid":"475AF52F9665610507",
 "tano":"47",
 "sharetype":"A",
 "accptmd":"1",
 "branchcode":"247000",
 "distributorcode":"247","extFields":{'rechargeFlag':'1'}
}
 Fri, 31 Aug 2018 16:26:42  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': None, 'errCode': '0000', 'tradeStatus': 'F', 'tradeMsg': '查询客户信息结果为空或失败', 'errMsg': '申请成功', 'tradeCode': 'Q004', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:26:42  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:{'extFields': None, 'errCode': '0000', 'tradeStatus': 'F', 'tradeMsg': '查询客户信息结果为空或失败', 'errMsg': '申请成功', 'tradeCode': 'Q004', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:26:42  INFO test_api.py test_api [ line:56 ] =====开始比对检验返回结果=======
 Fri, 31 Aug 2018 16:26:42  INFO test_api.py test_api [ line:57 ] 全值匹配模式
 Fri, 31 Aug 2018 16:26:42  INFO test_api.py test_api [ line:60 ] 结果比对成功，测试用例通过
 Fri, 31 Aug 2018 16:26:42  INFO test_api.py test_api [ line:84 ] ================结束一次接口请求===========
 Fri, 31 Aug 2018 16:26:42  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:26:42  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【提现】交易类型为952取现
 Fri, 31 Aug 2018 16:26:42  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.VaccoCoreTradeService
 Fri, 31 Aug 2018 16:26:42  INFO test_api.py test_api [ line:39 ] 接口请求method:withdraw
 Fri, 31 Aug 2018 16:26:42  INFO test_api.py test_api [ line:40 ] 接口请求data:{"subquty":"100",
        "bankid":"205AE16EA606342921",
        "paymodel":"04",
        "channel":"JX",       "returnUrl":"https://www5.91wutong.com/acco/yhcgTrade/drawCashResult.htm",
        "routeCode":"1",        "forgetPwdUrl":"https://www5.91wutong.com/user/account/passwordResetJx.htm",
        "serialno":"201808311626320392Ec",
        "custno":"1538967652",
        "apkind":"952",
        "subapkind":"952001",
        "apdt":"20180525",
        "aptm":"155807",
        "workdate":"20180525",
        "tradeacco":"000621718538967655",
 "taaccountid":"475AE141EE07252223",
        "tano":"47",
        "sharetype":"A",
        "accptmd":"1",
        "branchcode":"247000",
        "distributorcode":"247"}
 Fri, 31 Aug 2018 16:26:43  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {'routeCode': '1', 'bankCode': '30050000', 'idType': '01', 'retUrl': 'https://www5.91wutong.com/acco/yhcgTrade/drawCashResult.htm', 'seqNo': '119259', 'txTime': '155807', 'channel': '000002', 'mobile': '13588888888', 'sign': 'Nr2OOQic6ng05es2kvHnJhukGU48apf5DFIzu61M1+yLlc33ljzja/R8PYXsuSIlyvPODaPCQ8aJQpk+9ljWh03mou7M1EECNh3DaX+VvjlPI9SxWsew/b5dyfLjQzVZo2eCj1tOKQ0vhupkW4s4RX1NGR0l78vxsCk0Hiut4uskL54YiHNS75G3RDlxvS/L7Ch49iTeEAxCvgFivHDhBumXeMLrfB347gGDKTwzCmmXYP3rEqSuu+pUqWVyapAY2pHixozIxb4aUz4e3npuAcHYEc2Z26FAhcI97uZYzeQJj1XuItmU/I12SdOCqVpg1N5J8XllmiirjToX6YFA2w==', 'JxUrl': 'https://access.credit2go.cn/escrow/p2p/page/withdraw', 'cardNo': '6222620110038594231', 'idNo': '310112197701016335', 'version': '10', 'txAmount': '100', 'accountId': '6212462170000118072', 'cardBankCode': '', 'forgotPwdUrl': 'https://www5.91wutong.com/user/account/passwordResetJx.htm', 'name': '测试账户凌浩', 'txFee': '0', 'notifyUrl': 'https://www5.91wutong.com/open/jixin/receiveWithdrawNotifyUrl.htm?channel=yhcg', 'instCode': '00920001', 'successfulUrl': 'https://www5.91wutong.com/acco/yhcgTrade/drawCashResult.htm', 'txCode': 'withdraw', 'txDate': '20180525'}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:26:43  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:{.*'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功'.*}
 Fri, 31 Aug 2018 16:26:43  INFO test_api.py test_api [ line:65 ] =====开始比对检验返回结果=======
 Fri, 31 Aug 2018 16:26:43  INFO test_api.py test_api [ line:66 ] 正则表达式匹配模式
 Fri, 31 Aug 2018 16:26:43  INFO test_api.py test_api [ line:69 ] 结果匹配，测试用例通过
 Fri, 31 Aug 2018 16:26:43  INFO test_api.py test_api [ line:81 ] 数据库里存在符合预期条件的数据,测试通过:()
 Fri, 31 Aug 2018 16:26:43  INFO test_api.py test_api [ line:84 ] ================结束一次接口请求===========
 Fri, 31 Aug 2018 16:26:43  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:26:43  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【提现后续】交易类型为952取现成功
 Fri, 31 Aug 2018 16:26:43  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.ProductCoreTradeService
 Fri, 31 Aug 2018 16:26:43  INFO test_api.py test_api [ line:39 ] 接口请求method:tradeContinue
 Fri, 31 Aug 2018 16:26:43  INFO test_api.py test_api [ line:40 ] 接口请求data:{"serialno":"201808311540580304Bh",'extFields':{"errCode":"0000", "errMsg":"交易成功", "tranSt":"Y"}}
 Fri, 31 Aug 2018 16:26:43  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {}, 'errCode': 'Q015', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '查询交易原单结果为空或失败', 'tradeCode': None, 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:26:43  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功！', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:26:43  INFO test_api.py test_api [ line:56 ] =====开始比对检验返回结果=======
 Fri, 31 Aug 2018 16:26:43  INFO test_api.py test_api [ line:57 ] 全值匹配模式
 Fri, 31 Aug 2018 16:26:43  ERROR test_api.py test_api [ line:62 ] 全值结果比对失败原因为："{'extFields': {}, 'errCode': 'Q015', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '查询交易原单结果为空或失败', 'tradeCode': None, 'exObjFields': {}, 'key': None}" not found in "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功！', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}"
Traceback (most recent call last):
  File "H:\python3_apiTest\TestCases\test_api.py", line 59, in test_api
    self.assertIn(str(res),case_data["expected_data"])
  File "F:\python36\lib\unittest\case.py", line 1089, in assertIn
    self.fail(self._formatMessage(msg, standardMsg))
  File "F:\python36\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: "{'extFields': {}, 'errCode': 'Q015', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '查询交易原单结果为空或失败', 'tradeCode': None, 'exObjFields': {}, 'key': None}" not found in "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功！', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}"
 Fri, 31 Aug 2018 16:26:43  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:26:43  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【提现】交易类型为952取现
 Fri, 31 Aug 2018 16:26:43  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.VaccoCoreTradeService
 Fri, 31 Aug 2018 16:26:43  INFO test_api.py test_api [ line:39 ] 接口请求method:withdraw
 Fri, 31 Aug 2018 16:26:43  INFO test_api.py test_api [ line:40 ] 接口请求data:{"subquty":"100",
        "bankid":"205AE16EA606342921",
        "paymodel":"04",
        "channel":"JX",       "returnUrl":"https://www5.91wutong.com/acco/yhcgTrade/drawCashResult.htm",
        "routeCode":"1",        "forgetPwdUrl":"https://www5.91wutong.com/user/account/passwordResetJx.htm",
        "serialno":"201808311626320538Pp",
        "custno":"1538967652",
        "apkind":"952",
        "subapkind":"952001",
        "apdt":"20180525",
        "aptm":"155807",
        "workdate":"20180525",
        "tradeacco":"000621718538967655",
 "taaccountid":"475AE141EE07252223",
        "tano":"47",
        "sharetype":"A",
        "accptmd":"1",
        "branchcode":"247000",
        "distributorcode":"247"}
 Fri, 31 Aug 2018 16:26:44  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {'routeCode': '1', 'bankCode': '30050000', 'idType': '01', 'retUrl': 'https://www5.91wutong.com/acco/yhcgTrade/drawCashResult.htm', 'seqNo': '130691', 'txTime': '155807', 'channel': '000002', 'mobile': '13588888888', 'sign': 'HmJV9Ky11sn2w00YJb4t4CsEJlW7tXDYe29aNp4SgUJpHV5wpf21FGC2wxDWuiUVd8jp561Q1AJQct/5w2r73LR0CaPLpsKaBK+6n+ENcXDOD3bUJlnAP0nTObmWsiIUIwpzWOKhikHIDU10DDu0ch4n917H8J8wOGIJBVREgqb1VJWIwb7fffZ+jS3Roz+fo9Lgts5O0FXCX8eCnHWuQ/SRabiTrjgcRrk9nxPpjWu0aAbg4SjKYp3QJTeX1W3+uV1Zs88FBinfM4OfMHxO0ktE9KDGYEViQKx6MnA9R4e4nUS0VIbdjMVFdjz7cRnohpL+2Fgf2yxEhsFCkOb0OA==', 'JxUrl': 'https://access.credit2go.cn/escrow/p2p/page/withdraw', 'cardNo': '6222620110038594231', 'idNo': '310112197701016335', 'version': '10', 'txAmount': '100', 'accountId': '6212462170000118072', 'cardBankCode': '', 'forgotPwdUrl': 'https://www5.91wutong.com/user/account/passwordResetJx.htm', 'name': '测试账户凌浩', 'txFee': '0', 'notifyUrl': 'https://www5.91wutong.com/open/jixin/receiveWithdrawNotifyUrl.htm?channel=yhcg', 'instCode': '00920001', 'successfulUrl': 'https://www5.91wutong.com/acco/yhcgTrade/drawCashResult.htm', 'txCode': 'withdraw', 'txDate': '20180525'}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:26:44  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:{.*'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功'.*}
 Fri, 31 Aug 2018 16:26:44  INFO test_api.py test_api [ line:65 ] =====开始比对检验返回结果=======
 Fri, 31 Aug 2018 16:26:44  INFO test_api.py test_api [ line:66 ] 正则表达式匹配模式
 Fri, 31 Aug 2018 16:26:44  INFO test_api.py test_api [ line:69 ] 结果匹配，测试用例通过
 Fri, 31 Aug 2018 16:26:44  INFO test_api.py test_api [ line:81 ] 数据库里存在符合预期条件的数据,测试通过:()
 Fri, 31 Aug 2018 16:26:44  INFO test_api.py test_api [ line:84 ] ================结束一次接口请求===========
 Fri, 31 Aug 2018 16:26:44  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:26:44  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【提现后续】交易类型为952取现失败
 Fri, 31 Aug 2018 16:26:44  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.ProductCoreTradeService
 Fri, 31 Aug 2018 16:26:44  INFO test_api.py test_api [ line:39 ] 接口请求method:tradeContinue
 Fri, 31 Aug 2018 16:26:44  INFO test_api.py test_api [ line:40 ] 接口请求data:{"serialno":"201808311540580628FF",'extFields':{"errCode":"0001", "errMsg":"交易失败", "tranSt":"F"}}
 Fri, 31 Aug 2018 16:26:44  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {}, 'errCode': 'Q015', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '查询交易原单结果为空或失败', 'tradeCode': None, 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:26:44  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:{.*'tradeStatus': 'F'.*}
 Fri, 31 Aug 2018 16:26:44  INFO test_api.py test_api [ line:65 ] =====开始比对检验返回结果=======
 Fri, 31 Aug 2018 16:26:44  INFO test_api.py test_api [ line:66 ] 正则表达式匹配模式
 Fri, 31 Aug 2018 16:26:44  ERROR test_api.py test_api [ line:71 ] 正则结果比对失败原因为;unexpectedly None
Traceback (most recent call last):
  File "H:\python3_apiTest\TestCases\test_api.py", line 68, in test_api
    self.assertIsNotNone(re.search(case_data["expected_data"],str(res)))
  File "F:\python36\lib\unittest\case.py", line 1239, in assertIsNotNone
    self.fail(self._formatMessage(msg, standardMsg))
  File "F:\python36\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: unexpectedly None
 Fri, 31 Aug 2018 16:26:44  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:26:44  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【提现】提现金额含空格
 Fri, 31 Aug 2018 16:26:44  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.VaccoCoreTradeService
 Fri, 31 Aug 2018 16:26:44  INFO test_api.py test_api [ line:39 ] 接口请求method:withdraw
 Fri, 31 Aug 2018 16:26:44  INFO test_api.py test_api [ line:40 ] 接口请求data:{"subquty":"10 0",
        "bankid":"205B0CF78550959969",
        "paymodel":"04",
        "channel":"JX",       "returnUrl":"https://www5.91wutong.com/acco/yhcgTrade/drawCashResult.htm",
        "routeCode":"1",        "forgetPwdUrl":"https://www5.91wutong.com/user/account/passwordResetJx.htm",
        "serialno":"201808311626320283cV",
        "custno":"1604578759",
        "apkind":"952",
        "subapkind":"952001",
        "apdt":"20180525",
        "aptm":"155807",
        "workdate":"20180525",
         "tradeacco":"001035098604578762",
        "taaccountid":"475B0CB66D40432285",
        "tano":"47",
        "sharetype":"A",
        "accptmd":"1",
        "branchcode":"247000",
        "distributorcode":"247"}
 Fri, 31 Aug 2018 16:26:44  INFO test_api.py test_api [ line:49 ] 接口请求response data为：Failed to invoke method withdraw, cause: java.lang.NumberFormatException
 Fri, 31 Aug 2018 16:26:44  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:Failed to invoke method withdraw, cause: java.lang.NumberFormatException
 Fri, 31 Aug 2018 16:26:44  INFO test_api.py test_api [ line:56 ] =====开始比对检验返回结果=======
 Fri, 31 Aug 2018 16:26:44  INFO test_api.py test_api [ line:57 ] 全值匹配模式
 Fri, 31 Aug 2018 16:26:44  INFO test_api.py test_api [ line:60 ] 结果比对成功，测试用例通过
 Fri, 31 Aug 2018 16:26:44  INFO test_api.py test_api [ line:81 ] 数据库里存在符合预期条件的数据,测试通过:()
 Fri, 31 Aug 2018 16:26:44  INFO test_api.py test_api [ line:84 ] ================结束一次接口请求===========
 Fri, 31 Aug 2018 16:26:44  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:26:44  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【提现】提现金额含特殊字符
 Fri, 31 Aug 2018 16:26:44  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.VaccoCoreTradeService
 Fri, 31 Aug 2018 16:26:44  INFO test_api.py test_api [ line:39 ] 接口请求method:withdraw
 Fri, 31 Aug 2018 16:26:44  INFO test_api.py test_api [ line:40 ] 接口请求data:{ "subquty":"1%00",
        "bankid":"205B0CF78550959969",
        "paymodel":"04",
        "channel":"JX",
        "returnUrl":"https://www5.91wutong.com/acco/yhcgTrade/drawCashResult.htm",
        "routeCode":"1",
        "forgetPwdUrl":"https://www5.91wutong.com/user/account/passwordResetJx.htm",
        "serialno":"20180831162632095Dx",
        "custno":"1604578759",
        "apkind":"952",
        "subapkind":"952001",
        "apdt":"20180525",
        "aptm":"155807",
        "workdate":"20180525",
        "tradeacco":"001035098604578762",
        "taaccountid":"475B0CB66D40432285",
        "tano":"47",
        "sharetype":"A",
        "accptmd":"1",
        "branchcode":"247000",
        "distributorcode":"247"}
 Fri, 31 Aug 2018 16:26:44  INFO test_api.py test_api [ line:49 ] 接口请求response data为：ad.java:745)
 Fri, 31 Aug 2018 16:26:44  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:Failed to invoke method withdraw, cause: java.lang.NumberFormatException
 Fri, 31 Aug 2018 16:26:44  INFO test_api.py test_api [ line:56 ] =====开始比对检验返回结果=======
 Fri, 31 Aug 2018 16:26:44  INFO test_api.py test_api [ line:57 ] 全值匹配模式
 Fri, 31 Aug 2018 16:26:44  ERROR test_api.py test_api [ line:62 ] 全值结果比对失败原因为：'ad.java:745)' not found in 'Failed to invoke method withdraw, cause: java.lang.NumberFormatException'
Traceback (most recent call last):
  File "H:\python3_apiTest\TestCases\test_api.py", line 59, in test_api
    self.assertIn(str(res),case_data["expected_data"])
  File "F:\python36\lib\unittest\case.py", line 1089, in assertIn
    self.fail(self._formatMessage(msg, standardMsg))
  File "F:\python36\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: 'ad.java:745)' not found in 'Failed to invoke method withdraw, cause: java.lang.NumberFormatException'
 Fri, 31 Aug 2018 16:26:44  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:26:44  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【提现】提现金额>账户余额
 Fri, 31 Aug 2018 16:26:44  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.VaccoCoreTradeService
 Fri, 31 Aug 2018 16:26:44  INFO test_api.py test_api [ line:39 ] 接口请求method:withdraw
 Fri, 31 Aug 2018 16:26:44  INFO test_api.py test_api [ line:40 ] 接口请求data:{ "subquty":"110000",
        "bankid":"205AF2D52899667599",
        "paymodel":"04",
        "channel":"JX",
        "returnUrl":"https://www5.91wutong.com/acco/yhcgTrade/drawCashResult.htm",
        "routeCode":"1",
        "forgetPwdUrl":"https://www5.91wutong.com/user/account/passwordResetJx.htm",
        "serialno":"201808311626320359vi",
        "custno":"1538965327",
        "apkind":"952",
        "subapkind":"952001",
        "apdt":"20180525",
        "aptm":"215807",
        "workdate":"20180525",
       "tradeacco":"000621718538965330",
        "taaccountid":"475AD0470C45319298",
        "tano":"47",
        "sharetype":"A",
        "accptmd":"1",
        "branchcode":"247000",
        "distributorcode":"247"}
 Fri, 31 Aug 2018 16:26:44  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {}, 'errCode': 'BC21', 'tradeStatus': 'I', 'tradeMsg': '产品余额不足或者账户余额不足！', 'errMsg': '产品余额不足或者账户余额不足！', 'tradeCode': 'BC21', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:26:44  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:{'extFields': {}, 'errCode': 'BC21', 'tradeStatus': 'I', 'tradeMsg': '产品余额不足或者账户余额不足！', 'errMsg': '产品余额不足或者账户余额不足！', 'tradeCode': 'BC21', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:26:44  INFO test_api.py test_api [ line:56 ] =====开始比对检验返回结果=======
 Fri, 31 Aug 2018 16:26:44  INFO test_api.py test_api [ line:57 ] 全值匹配模式
 Fri, 31 Aug 2018 16:26:44  INFO test_api.py test_api [ line:60 ] 结果比对成功，测试用例通过
 Fri, 31 Aug 2018 16:26:45  INFO test_api.py test_api [ line:81 ] 数据库里存在符合预期条件的数据,测试通过:()
 Fri, 31 Aug 2018 16:26:45  INFO test_api.py test_api [ line:84 ] ================结束一次接口请求===========
 Fri, 31 Aug 2018 16:26:45  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:26:45  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【提现】客户号不存在
 Fri, 31 Aug 2018 16:26:45  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.VaccoCoreTradeService
 Fri, 31 Aug 2018 16:26:45  INFO test_api.py test_api [ line:39 ] 接口请求method:withdraw
 Fri, 31 Aug 2018 16:26:45  INFO test_api.py test_api [ line:40 ] 接口请求data:{ "subquty":"10.123",
        "bankid":"205AF2D52899667599",
        "paymodel":"04",
        "channel":"JX",
        "returnUrl":"https://www5.91wutong.com/acco/yhcgTrade/drawCashResult.htm",
        "routeCode":"1",
        "forgetPwdUrl":"https://www5.91wutong.com/user/account/passwordResetJx.htm",
        "serialno":"201808311626320769gK",
        "custno":"1538965327123",
        "apkind":"952",
        "subapkind":"952001",
        "apdt":"20180525",
        "aptm":"215807",
        "workdate":"20180525",
        "tradeacco":"000621718538965330",
        "taaccountid":"475AD0470C45319298",
        "tano":"47",
        "sharetype":"A",
        "accptmd":"1",
        "branchcode":"247000",
        "distributorcode":"247"}
 Fri, 31 Aug 2018 16:26:45  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {}, 'errCode': 'Q004', 'tradeStatus': 'F', 'tradeMsg': '查询客户信息结果为空或失败', 'errMsg': '查询客户信息结果为空或失败', 'tradeCode': 'Q004', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:26:45  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:{'extFields': {}, 'errCode': 'Q004', 'tradeStatus': 'F', 'tradeMsg': '查询客户信息结果为空或失败', 'errMsg': '查询客户信息结果为空或失败', 'tradeCode': 'Q004', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:26:45  INFO test_api.py test_api [ line:56 ] =====开始比对检验返回结果=======
 Fri, 31 Aug 2018 16:26:45  INFO test_api.py test_api [ line:57 ] 全值匹配模式
 Fri, 31 Aug 2018 16:26:45  INFO test_api.py test_api [ line:60 ] 结果比对成功，测试用例通过
 Fri, 31 Aug 2018 16:26:45  INFO test_api.py test_api [ line:81 ] 数据库里存在符合预期条件的数据,测试通过:()
 Fri, 31 Aug 2018 16:26:45  INFO test_api.py test_api [ line:84 ] ================结束一次接口请求===========
 Fri, 31 Aug 2018 16:26:45  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:26:45  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【提现】客户号与其他参数不匹配
 Fri, 31 Aug 2018 16:26:45  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.VaccoCoreTradeService
 Fri, 31 Aug 2018 16:26:45  INFO test_api.py test_api [ line:39 ] 接口请求method:withdraw
 Fri, 31 Aug 2018 16:26:45  INFO test_api.py test_api [ line:40 ] 接口请求data:{"subquty":"10",
        "bankid":"205AF2D52899667599",
        "paymodel":"04",
        "channel":"JX",
        "returnUrl":"https://www5.91wutong.com/acco/yhcgTrade/drawCashResult.htm",
        "routeCode":"1",
        "forgetPwdUrl":"https://www5.91wutong.com/user/account/passwordResetJx.htm",
        "serialno":"201808311626320682Tj",
        "custno":"1538967652",
        "apkind":"924",
        "subapkind":"924001",
        "apdt":"20180525",
        "aptm":"215807",
        "workdate":"20180525",
        "tradeacco":"000621718538965330",
        "taaccountid":"475AD0470C45319298",
        "tano":"47",
        "sharetype":"A",
        "accptmd":"1",
        "branchcode":"247000",
        "distributorcode":"247"}
 Fri, 31 Aug 2018 16:26:45  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {}, 'errCode': 'Q019', 'tradeStatus': 'F', 'tradeMsg': '查询银行卡信息结果为空或失败', 'errMsg': '查询银行卡信息结果为空或失败', 'tradeCode': 'Q019', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:26:45  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:{'extFields': {}, 'errCode': 'Q019', 'tradeStatus': 'F', 'tradeMsg': '查询银行卡信息结果为空或失败', 'errMsg': '查询银行卡信息结果为空或失败', 'tradeCode': 'Q019', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:26:45  INFO test_api.py test_api [ line:56 ] =====开始比对检验返回结果=======
 Fri, 31 Aug 2018 16:26:45  INFO test_api.py test_api [ line:57 ] 全值匹配模式
 Fri, 31 Aug 2018 16:26:45  INFO test_api.py test_api [ line:60 ] 结果比对成功，测试用例通过
 Fri, 31 Aug 2018 16:26:45  INFO test_api.py test_api [ line:81 ] 数据库里存在符合预期条件的数据,测试通过:()
 Fri, 31 Aug 2018 16:26:45  INFO test_api.py test_api [ line:84 ] ================结束一次接口请求===========
 Fri, 31 Aug 2018 16:26:45  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:26:45  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【提现】交易类型为924取现成功
 Fri, 31 Aug 2018 16:26:45  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.VaccoCoreTradeService
 Fri, 31 Aug 2018 16:26:45  INFO test_api.py test_api [ line:39 ] 接口请求method:withdraw
 Fri, 31 Aug 2018 16:26:45  INFO test_api.py test_api [ line:40 ] 接口请求data:{ "subquty":"10",
        "bankid":"205AE16EA606342921",
        "paymodel":"04",
        "channel":"JX",
        "returnUrl":"https://www5.91wutong.com/acco/yhcgTrade/drawCashResult.htm",
        "routeCode":"1",
        "forgetPwdUrl":"https://www5.91wutong.com/user/account/passwordResetJx.htm",
        "serialno":"201808311626320194ra",
        "custno":"1538967652",
        "apkind":"924",
        "subapkind":"924001",
        "apdt":"20180525",
        "aptm":"215807",
        "workdate":"20180525",
       "tradeacco":"000621718538967655",
 "taaccountid":"475AE141EE07252223",
        "tano":"47",
        "sharetype":"A",
        "accptmd":"1",
        "branchcode":"247000",
        "distributorcode":"247"}
 Fri, 31 Aug 2018 16:26:46  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {'routeCode': '1', 'bankCode': '30050000', 'idType': '01', 'retUrl': 'https://www5.91wutong.com/acco/yhcgTrade/drawCashResult.htm', 'seqNo': '119676', 'txTime': '215807', 'channel': '000002', 'mobile': '13588888888', 'sign': 'llL0JZOs+iEtvKYieK7ZCNtV2haxtP5FZcgF3aBv3Hkhb25FYm6lc9Cj+x7YZqWP8sgY2y07YAwaVCuk7Ee1BTkY3Z5xY6ufct843TtzU557eB/4EHnwV2Kf0astbDg2ynYRP9rtbovIMvzU8BO6sUWUNR9kiJZ25c6Oc9DsVqBbSA4aLNIt4BLLoEy6L6LIMc90Rr61HZ/NgIdAR5xmgkB1t3qibLrQwJDpOJrNeAcueqihqua8qKeD33MXvru4RRz1/onkUu9GIpx1c4gnz4pS+9iWVMJMRUyuziIlWa65tElKT63+HEpVHxg5Z6toRpDQLai1EZmi29nad9M/0A==', 'JxUrl': 'https://access.credit2go.cn/escrow/p2p/page/withdraw', 'cardNo': '6222620110038594231', 'idNo': '310112197701016335', 'version': '10', 'txAmount': '10', 'accountId': '6212462170000118072', 'cardBankCode': '', 'forgotPwdUrl': 'https://www5.91wutong.com/user/account/passwordResetJx.htm', 'name': '测试账户凌浩', 'txFee': '0', 'notifyUrl': 'https://www5.91wutong.com/open/jixin/receiveWithdrawNotifyUrl.htm?channel=yhcg', 'instCode': '00920001', 'successfulUrl': 'https://www5.91wutong.com/acco/yhcgTrade/drawCashResult.htm', 'txCode': 'withdraw', 'txDate': '20180525'}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:26:46  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:{.*'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功'.*}
 Fri, 31 Aug 2018 16:26:46  INFO test_api.py test_api [ line:65 ] =====开始比对检验返回结果=======
 Fri, 31 Aug 2018 16:26:46  INFO test_api.py test_api [ line:66 ] 正则表达式匹配模式
 Fri, 31 Aug 2018 16:26:46  INFO test_api.py test_api [ line:69 ] 结果匹配，测试用例通过
 Fri, 31 Aug 2018 16:26:46  INFO test_api.py test_api [ line:81 ] 数据库里存在符合预期条件的数据,测试通过:()
 Fri, 31 Aug 2018 16:26:46  INFO test_api.py test_api [ line:84 ] ================结束一次接口请求===========
 Fri, 31 Aug 2018 16:26:46  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:26:46  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【提现后续】交易类型为924取现成功
 Fri, 31 Aug 2018 16:26:46  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.ProductCoreTradeService
 Fri, 31 Aug 2018 16:26:46  INFO test_api.py test_api [ line:39 ] 接口请求method:tradeContinue
 Fri, 31 Aug 2018 16:26:46  INFO test_api.py test_api [ line:40 ] 接口请求data:{"serialno":"20180831154058033QG",'extFields':{"errCode":"0000", "errMsg":"交易成功", "tranSt":"Y"}}
 Fri, 31 Aug 2018 16:26:46  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {}, 'errCode': 'Q015', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '查询交易原单结果为空或失败', 'tradeCode': None, 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:26:46  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功！', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:26:46  INFO test_api.py test_api [ line:56 ] =====开始比对检验返回结果=======
 Fri, 31 Aug 2018 16:26:46  INFO test_api.py test_api [ line:57 ] 全值匹配模式
 Fri, 31 Aug 2018 16:26:46  ERROR test_api.py test_api [ line:62 ] 全值结果比对失败原因为："{'extFields': {}, 'errCode': 'Q015', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '查询交易原单结果为空或失败', 'tradeCode': None, 'exObjFields': {}, 'key': None}" not found in "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功！', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}"
Traceback (most recent call last):
  File "H:\python3_apiTest\TestCases\test_api.py", line 59, in test_api
    self.assertIn(str(res),case_data["expected_data"])
  File "F:\python36\lib\unittest\case.py", line 1089, in assertIn
    self.fail(self._formatMessage(msg, standardMsg))
  File "F:\python36\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: "{'extFields': {}, 'errCode': 'Q015', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '查询交易原单结果为空或失败', 'tradeCode': None, 'exObjFields': {}, 'key': None}" not found in "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功！', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}"
 Fri, 31 Aug 2018 16:26:46  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:26:46  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【提现】交易类型为924取现成功
 Fri, 31 Aug 2018 16:26:46  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.VaccoCoreTradeService
 Fri, 31 Aug 2018 16:26:46  INFO test_api.py test_api [ line:39 ] 接口请求method:withdraw
 Fri, 31 Aug 2018 16:26:46  INFO test_api.py test_api [ line:40 ] 接口请求data:{ "subquty":"10",
        "bankid":"205AE16EA606342921",
        "paymodel":"04",
        "channel":"JX",
        "returnUrl":"https://www5.91wutong.com/acco/yhcgTrade/drawCashResult.htm",
        "routeCode":"1",
        "forgetPwdUrl":"https://www5.91wutong.com/user/account/passwordResetJx.htm",
        "serialno":"20180831162632066Uh",
        "custno":"1538967652",
        "apkind":"924",
        "subapkind":"924001",
        "apdt":"20180525",
        "aptm":"215807",
        "workdate":"20180525",
       "tradeacco":"000621718538967655",
 "taaccountid":"475AE141EE07252223",
        "tano":"47",
        "sharetype":"A",
        "accptmd":"1",
        "branchcode":"247000",
        "distributorcode":"247"}
 Fri, 31 Aug 2018 16:26:46  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {'routeCode': '1', 'bankCode': '30050000', 'idType': '01', 'retUrl': 'https://www5.91wutong.com/acco/yhcgTrade/drawCashResult.htm', 'seqNo': '148657', 'txTime': '215807', 'channel': '000002', 'mobile': '13588888888', 'sign': 'EIDrBHBrYyvah+FyXmidSxk7jBFqCn71+/4UHfg0W1vQNLTQ0+aOERGZ9CsAk6ahPx09j8NWK1z7eGsvGoFSjCVXQbSTZoD6EJqfGxexQ4kILtoRP84gO3MQnCr7qvzSRNQKepujjeWwsTv/AnsY9gG99tDyTWfgQPSB0aeZr1A9FaY1xQ7tjNQZb42/nKlN1/vlvzQoLhmvEszbW7XzLjcZoOuHEo0ZM1gKCe1W7f9unuMENULbiTbuoMrtsmb7ddQMKQy7FzdgbStpeDx4Tw3RXaV5IykothYDvAwcQNsEQnD8z36vsSD01EVAXopIGrMQNxs1qEL9/IU9pYySfg==', 'JxUrl': 'https://access.credit2go.cn/escrow/p2p/page/withdraw', 'cardNo': '6222620110038594231', 'idNo': '310112197701016335', 'version': '10', 'txAmount': '10', 'accountId': '6212462170000118072', 'cardBankCode': '', 'forgotPwdUrl': 'https://www5.91wutong.com/user/account/passwordResetJx.htm', 'name': '测试账户凌浩', 'txFee': '0', 'notifyUrl': 'https://www5.91wutong.com/open/jixin/receiveWithdrawNotifyUrl.htm?channel=yhcg', 'instCode': '00920001', 'successfulUrl': 'https://www5.91wutong.com/acco/yhcgTrade/drawCashResult.htm', 'txCode': 'withdraw', 'txDate': '20180525'}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:26:46  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:{.*'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功'.*}
 Fri, 31 Aug 2018 16:26:46  INFO test_api.py test_api [ line:65 ] =====开始比对检验返回结果=======
 Fri, 31 Aug 2018 16:26:46  INFO test_api.py test_api [ line:66 ] 正则表达式匹配模式
 Fri, 31 Aug 2018 16:26:46  INFO test_api.py test_api [ line:69 ] 结果匹配，测试用例通过
 Fri, 31 Aug 2018 16:26:46  INFO test_api.py test_api [ line:81 ] 数据库里存在符合预期条件的数据,测试通过:()
 Fri, 31 Aug 2018 16:26:46  INFO test_api.py test_api [ line:84 ] ================结束一次接口请求===========
 Fri, 31 Aug 2018 16:26:46  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:26:46  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【提现后续】交易类型为924取现失败
 Fri, 31 Aug 2018 16:26:46  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.ProductCoreTradeService
 Fri, 31 Aug 2018 16:26:46  INFO test_api.py test_api [ line:39 ] 接口请求method:tradeContinue
 Fri, 31 Aug 2018 16:26:46  INFO test_api.py test_api [ line:40 ] 接口请求data:{"serialno":"201808311540580624uo",'extFields':{"errCode":"0001", "errMsg":"交易失败", "tranSt":"F"}}
 Fri, 31 Aug 2018 16:26:46  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {}, 'errCode': 'Q015', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '查询交易原单结果为空或失败', 'tradeCode': None, 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:26:46  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:{.*'tradeStatus': 'F'.*}
 Fri, 31 Aug 2018 16:26:46  INFO test_api.py test_api [ line:65 ] =====开始比对检验返回结果=======
 Fri, 31 Aug 2018 16:26:46  INFO test_api.py test_api [ line:66 ] 正则表达式匹配模式
 Fri, 31 Aug 2018 16:26:46  ERROR test_api.py test_api [ line:71 ] 正则结果比对失败原因为;unexpectedly None
Traceback (most recent call last):
  File "H:\python3_apiTest\TestCases\test_api.py", line 68, in test_api
    self.assertIsNotNone(re.search(case_data["expected_data"],str(res)))
  File "F:\python36\lib\unittest\case.py", line 1239, in assertIsNotNone
    self.fail(self._formatMessage(msg, standardMsg))
  File "F:\python36\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: unexpectedly None
 Fri, 31 Aug 2018 16:26:46  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:26:46  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【提现】交易类型错误
 Fri, 31 Aug 2018 16:26:46  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.VaccoCoreTradeService
 Fri, 31 Aug 2018 16:26:46  INFO test_api.py test_api [ line:39 ] 接口请求method:withdraw
 Fri, 31 Aug 2018 16:26:46  INFO test_api.py test_api [ line:40 ] 接口请求data:{"subquty":"10",
        "bankid":"205AE16EA606342921",
        "paymodel":"04",
        "channel":"JX",
        "returnUrl":"https://www5.91wutong.com/acco/yhcgTrade/drawCashResult.htm",
        "routeCode":"1",
        "forgetPwdUrl":"https://www5.91wutong.com/user/account/passwordResetJx.htm",
        "serialno":"201808311626320270MF",
        "custno":"1538967652",
        "apkind":"943",
        "subapkind":"943001",
        "apdt":"20180525",
        "aptm":"215807",
        "workdate":"20180525",
         "tradeacco":"000621718538967655",
 "taaccountid":"475AE141EE07252223",
        "tano":"47",
        "sharetype":"A",
        "accptmd":"3",
        "branchcode":"247000",
        "distributorcode":"247"}
 Fri, 31 Aug 2018 16:26:47  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {}, 'errCode': 'P003', 'tradeStatus': None, 'tradeMsg': '业务类型[Apkind] 不符合逻辑. 期望值[952or924]', 'errMsg': '业务类型[Apkind] 不符合逻辑. 期望值[952or924]', 'tradeCode': 'P003', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:26:47  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:{'extFields': {}, 'errCode': 'P003', 'tradeStatus': None, 'tradeMsg': '业务类型[Apkind] 不符合逻辑. 期望值[952or924]', 'errMsg': '业务类型[Apkind] 不符合逻辑. 期望值[952or924]', 'tradeCode': 'P003', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:26:47  INFO test_api.py test_api [ line:56 ] =====开始比对检验返回结果=======
 Fri, 31 Aug 2018 16:26:47  INFO test_api.py test_api [ line:57 ] 全值匹配模式
 Fri, 31 Aug 2018 16:26:47  INFO test_api.py test_api [ line:60 ] 结果比对成功，测试用例通过
 Fri, 31 Aug 2018 16:26:47  INFO test_api.py test_api [ line:81 ] 数据库里存在符合预期条件的数据,测试通过:()
 Fri, 31 Aug 2018 16:26:47  INFO test_api.py test_api [ line:84 ] ================结束一次接口请求===========
 Fri, 31 Aug 2018 16:26:47  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:26:47  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【提现】渠道为2手机取现成功
 Fri, 31 Aug 2018 16:26:47  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.VaccoCoreTradeService
 Fri, 31 Aug 2018 16:26:47  INFO test_api.py test_api [ line:39 ] 接口请求method:withdraw
 Fri, 31 Aug 2018 16:26:47  INFO test_api.py test_api [ line:40 ] 接口请求data:{ "subquty":"10",
        "bankid":"205AE16EA606342921",
        "paymodel":"04",
        "channel":"JX",
        "returnUrl":"https://www5.91wutong.com/acco/yhcgTrade/drawCashResult.htm",
        "routeCode":"1",
        "forgetPwdUrl":"https://www5.91wutong.com/user/account/passwordResetJx.htm",
        "serialno":"201808311626320545RJ",
        "custno":"1538967652",
        "apkind":"924",
        "subapkind":"924001",
        "apdt":"20180525",
        "aptm":"215807",
        "workdate":"20180525",
   "tradeacco":"000621718538967655",
 "taaccountid":"475AE141EE07252223",
        "tano":"47",
        "sharetype":"A",
        "accptmd":"2",
        "branchcode":"247000",
        "distributorcode":"247"}
 Fri, 31 Aug 2018 16:26:47  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {'routeCode': '1', 'bankCode': '30050000', 'idType': '01', 'retUrl': 'https://www5.91wutong.com/acco/yhcgTrade/drawCashResult.htm', 'seqNo': '107665', 'txTime': '215807', 'channel': '000001', 'mobile': '13588888888', 'sign': 'c4xKCt81AhFecbDw2f4AAFYRbod+dMuoe78h21adcjY7zMptlSGTXYccT/JM3jFLuVOl5huL3LKtOW8AAMQHmQUQH2ZxtIfHujp649FKrwL+M3p8+UJfQjQVw7cHwowE01PRDng+hlsUbbz9gGIPNJ42H07yYUkslK1pd30yQl/l+lYtn+JN+ErDgmdDBN3AA4heaV/gCpOIqKUqvqtml/N5/E4Bua+xe9c2YM5bC4rINTLb2oL7h98hURp5pm7+Are6AZgPoDpVDSjYy+s/uqDkFPzmoftkmoOWjB5wtRodk5NrDnUguvJPoV1KgP1NWn5NLBZ/Ze4Fl1ZmdxBZnQ==', 'JxUrl': 'https://access.credit2go.cn/escrow/p2p/page/withdraw', 'cardNo': '6222620110038594231', 'idNo': '310112197701016335', 'version': '10', 'txAmount': '10', 'accountId': '6212462170000118072', 'cardBankCode': '', 'forgotPwdUrl': 'https://www5.91wutong.com/user/account/passwordResetJx.htm', 'name': '测试账户凌浩', 'txFee': '0', 'notifyUrl': 'https://www5.91wutong.com/open/jixin/receiveWithdrawNotifyUrl.htm?channel=yhcg', 'instCode': '00920001', 'successfulUrl': 'https://www5.91wutong.com/acco/yhcgTrade/drawCashResult.htm', 'txCode': 'withdraw', 'txDate': '20180525'}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:26:47  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:{.*'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功'.*}
 Fri, 31 Aug 2018 16:26:47  INFO test_api.py test_api [ line:65 ] =====开始比对检验返回结果=======
 Fri, 31 Aug 2018 16:26:47  INFO test_api.py test_api [ line:66 ] 正则表达式匹配模式
 Fri, 31 Aug 2018 16:26:47  INFO test_api.py test_api [ line:69 ] 结果匹配，测试用例通过
 Fri, 31 Aug 2018 16:26:47  INFO test_api.py test_api [ line:81 ] 数据库里存在符合预期条件的数据,测试通过:()
 Fri, 31 Aug 2018 16:26:47  INFO test_api.py test_api [ line:84 ] ================结束一次接口请求===========
 Fri, 31 Aug 2018 16:26:47  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:26:47  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【提现后续】渠道accptmd为2手机取现成功
 Fri, 31 Aug 2018 16:26:47  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.ProductCoreTradeService
 Fri, 31 Aug 2018 16:26:47  INFO test_api.py test_api [ line:39 ] 接口请求method:tradeContinue
 Fri, 31 Aug 2018 16:26:47  INFO test_api.py test_api [ line:40 ] 接口请求data:{"serialno":"201808311540580221kM",'extFields':{"errCode":"0000", "errMsg":"交易成功", "tranSt":"Y"}}
 Fri, 31 Aug 2018 16:26:47  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {}, 'errCode': 'Q015', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '查询交易原单结果为空或失败', 'tradeCode': None, 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:26:47  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功！', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:26:47  INFO test_api.py test_api [ line:56 ] =====开始比对检验返回结果=======
 Fri, 31 Aug 2018 16:26:47  INFO test_api.py test_api [ line:57 ] 全值匹配模式
 Fri, 31 Aug 2018 16:26:47  ERROR test_api.py test_api [ line:62 ] 全值结果比对失败原因为："{'extFields': {}, 'errCode': 'Q015', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '查询交易原单结果为空或失败', 'tradeCode': None, 'exObjFields': {}, 'key': None}" not found in "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功！', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}"
Traceback (most recent call last):
  File "H:\python3_apiTest\TestCases\test_api.py", line 59, in test_api
    self.assertIn(str(res),case_data["expected_data"])
  File "F:\python36\lib\unittest\case.py", line 1089, in assertIn
    self.fail(self._formatMessage(msg, standardMsg))
  File "F:\python36\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: "{'extFields': {}, 'errCode': 'Q015', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '查询交易原单结果为空或失败', 'tradeCode': None, 'exObjFields': {}, 'key': None}" not found in "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功！', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}"
 Fri, 31 Aug 2018 16:26:47  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:26:47  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【提现】渠道为2手机取现成功
 Fri, 31 Aug 2018 16:26:47  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.VaccoCoreTradeService
 Fri, 31 Aug 2018 16:26:47  INFO test_api.py test_api [ line:39 ] 接口请求method:withdraw
 Fri, 31 Aug 2018 16:26:47  INFO test_api.py test_api [ line:40 ] 接口请求data:{ "subquty":"10",
        "bankid":"205AE16EA606342921",
        "paymodel":"04",
        "channel":"JX",
        "returnUrl":"https://www5.91wutong.com/acco/yhcgTrade/drawCashResult.htm",
        "routeCode":"1",
        "forgetPwdUrl":"https://www5.91wutong.com/user/account/passwordResetJx.htm",
        "serialno":"201808311626320985Xj",
        "custno":"1538967652",
        "apkind":"924",
        "subapkind":"924001",
        "apdt":"20180525",
        "aptm":"215807",
        "workdate":"20180525",
     "tradeacco":"000621718538967655",
 "taaccountid":"475AE141EE07252223",
        "tano":"47",
        "sharetype":"A",
        "accptmd":"1",
        "branchcode":"247000",
        "distributorcode":"247"}
 Fri, 31 Aug 2018 16:26:48  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {'routeCode': '1', 'bankCode': '30050000', 'idType': '01', 'retUrl': 'https://www5.91wutong.com/acco/yhcgTrade/drawCashResult.htm', 'seqNo': '139458', 'txTime': '215807', 'channel': '000002', 'mobile': '13588888888', 'sign': 'mwHz428Xh+9UpyHv/gBRSerscGPSO21IuDc/nNwUj8nFY9mcZ5nyDT0rmyQ2VOr1+rtBwBCuPenWLWTb37fysQd9nWI7yYSixoyLghSZoRXOdhBO4CQ/OXuaNhKspM5S6j+bIHPMP0nQw+xHKnHo+U/WM7LzI+qGjLFj+io/4F8pVOebRjOKsHGak24B4FbJB75+zLpE3CbX5lCXiyo3hHsvqA/4GlOjG8dJwpmzvxOwX4dzHIlfNk9N0uT2ZB/RpJ80uTPwE9bG2J3UIlqis8sgC8GYSZZJjl5ovrbxPQrPQwGlN7vsnnfPp+h68aF1qrCinzRHCbrxnG7j55pzsg==', 'JxUrl': 'https://access.credit2go.cn/escrow/p2p/page/withdraw', 'cardNo': '6222620110038594231', 'idNo': '310112197701016335', 'version': '10', 'txAmount': '10', 'accountId': '6212462170000118072', 'cardBankCode': '', 'forgotPwdUrl': 'https://www5.91wutong.com/user/account/passwordResetJx.htm', 'name': '测试账户凌浩', 'txFee': '0', 'notifyUrl': 'https://www5.91wutong.com/open/jixin/receiveWithdrawNotifyUrl.htm?channel=yhcg', 'instCode': '00920001', 'successfulUrl': 'https://www5.91wutong.com/acco/yhcgTrade/drawCashResult.htm', 'txCode': 'withdraw', 'txDate': '20180525'}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:26:48  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:{.*'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功'.*}
 Fri, 31 Aug 2018 16:26:48  INFO test_api.py test_api [ line:65 ] =====开始比对检验返回结果=======
 Fri, 31 Aug 2018 16:26:48  INFO test_api.py test_api [ line:66 ] 正则表达式匹配模式
 Fri, 31 Aug 2018 16:26:48  INFO test_api.py test_api [ line:69 ] 结果匹配，测试用例通过
 Fri, 31 Aug 2018 16:26:48  INFO test_api.py test_api [ line:81 ] 数据库里存在符合预期条件的数据,测试通过:()
 Fri, 31 Aug 2018 16:26:48  INFO test_api.py test_api [ line:84 ] ================结束一次接口请求===========
 Fri, 31 Aug 2018 16:26:48  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:26:48  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【提现后续】渠道accptmd为2手机取现失败
 Fri, 31 Aug 2018 16:26:48  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.ProductCoreTradeService
 Fri, 31 Aug 2018 16:26:48  INFO test_api.py test_api [ line:39 ] 接口请求method:tradeContinue
 Fri, 31 Aug 2018 16:26:48  INFO test_api.py test_api [ line:40 ] 接口请求data:{"serialno":"201808311540580357hb",'extFields':{"errCode":"0001", "errMsg":"交易失败", "tranSt":"F"}}
 Fri, 31 Aug 2018 16:26:48  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {}, 'errCode': 'Q015', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '查询交易原单结果为空或失败', 'tradeCode': None, 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:26:48  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:{.*'tradeStatus': 'F'.*}
 Fri, 31 Aug 2018 16:26:48  INFO test_api.py test_api [ line:65 ] =====开始比对检验返回结果=======
 Fri, 31 Aug 2018 16:26:48  INFO test_api.py test_api [ line:66 ] 正则表达式匹配模式
 Fri, 31 Aug 2018 16:26:48  ERROR test_api.py test_api [ line:71 ] 正则结果比对失败原因为;unexpectedly None
Traceback (most recent call last):
  File "H:\python3_apiTest\TestCases\test_api.py", line 68, in test_api
    self.assertIsNotNone(re.search(case_data["expected_data"],str(res)))
  File "F:\python36\lib\unittest\case.py", line 1239, in assertIsNotNone
    self.fail(self._formatMessage(msg, standardMsg))
  File "F:\python36\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: unexpectedly None
 Fri, 31 Aug 2018 16:26:48  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:26:48  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【提现】渠道为3企业版取现成功
 Fri, 31 Aug 2018 16:26:48  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.VaccoCoreTradeService
 Fri, 31 Aug 2018 16:26:48  INFO test_api.py test_api [ line:39 ] 接口请求method:withdraw
 Fri, 31 Aug 2018 16:26:48  INFO test_api.py test_api [ line:40 ] 接口请求data:{"subquty":"10",
        "bankid":"205AE16EA606342921",
        "paymodel":"04",
        "channel":"JX",
        "returnUrl":"https://www5.91wutong.com/acco/yhcgTrade/drawCashResult.htm",
        "routeCode":"1",
        "forgetPwdUrl":"https://www5.91wutong.com/user/account/passwordResetJx.htm",
        "serialno":"201808311626320474hq",
        "custno":"1538967652",
        "apkind":"924",
        "subapkind":"924001",
        "apdt":"20180525",
        "aptm":"215807",
        "workdate":"20180525",
       "tradeacco":"000621718538967655",
 "taaccountid":"475AE141EE07252223",
        "tano":"47",
        "sharetype":"A",
        "accptmd":"3",
        "branchcode":"247000",
        "distributorcode":"247"}
 Fri, 31 Aug 2018 16:26:49  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {'routeCode': '1', 'bankCode': '30050000', 'idType': '01', 'retUrl': 'https://www5.91wutong.com/acco/yhcgTrade/drawCashResult.htm', 'seqNo': '116454', 'txTime': '215807', 'channel': '000004', 'mobile': '13588888888', 'sign': 'egFrrQhzhwY2/oZbxQHQ/M35GgVjk/G9k1sY72fFFmU/gBSftZv5PTwpm+FrxMM5w2zqI/DkL60bF8dFAGaf/jfS9TIFELSlobCBWG4X6SV903nqzosjlRMEFJJZJOEaTmnn1+FGu37khVZm7WG9HwzmOPrnhsHZK7RgHXaYQnCLxiz4TyfIQGa7fG/ExlH2HBR1gMwxXlcTKQcNXyOEP4GZG+NkFkhaNSJ/sUTL5HOIJO+oq80WPb+lz8IlN/efkdxFW1ldCAs+iD+kOsYDL4+PsM9P0AyhZnFpK65O/On2iNRGdd4WacF15w7V3jisfWPs0oiolbdkcGtu9Dj87g==', 'JxUrl': 'https://access.credit2go.cn/escrow/p2p/page/withdraw', 'cardNo': '6222620110038594231', 'idNo': '310112197701016335', 'version': '10', 'txAmount': '10', 'accountId': '6212462170000118072', 'cardBankCode': '', 'forgotPwdUrl': 'https://www5.91wutong.com/user/account/passwordResetJx.htm', 'name': '测试账户凌浩', 'txFee': '0', 'notifyUrl': 'https://www5.91wutong.com/open/jixin/receiveWithdrawNotifyUrl.htm?channel=yhcg', 'instCode': '00920001', 'successfulUrl': 'https://www5.91wutong.com/acco/yhcgTrade/drawCashResult.htm', 'txCode': 'withdraw', 'txDate': '20180525'}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:26:49  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:{.*'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功'.*}
 Fri, 31 Aug 2018 16:26:49  INFO test_api.py test_api [ line:65 ] =====开始比对检验返回结果=======
 Fri, 31 Aug 2018 16:26:49  INFO test_api.py test_api [ line:66 ] 正则表达式匹配模式
 Fri, 31 Aug 2018 16:26:49  INFO test_api.py test_api [ line:69 ] 结果匹配，测试用例通过
 Fri, 31 Aug 2018 16:26:49  INFO test_api.py test_api [ line:81 ] 数据库里存在符合预期条件的数据,测试通过:()
 Fri, 31 Aug 2018 16:26:49  INFO test_api.py test_api [ line:84 ] ================结束一次接口请求===========
 Fri, 31 Aug 2018 16:26:49  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:26:49  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【提现后续】渠道accptmd为3企业版取现成功
 Fri, 31 Aug 2018 16:26:49  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.ProductCoreTradeService
 Fri, 31 Aug 2018 16:26:49  INFO test_api.py test_api [ line:39 ] 接口请求method:tradeContinue
 Fri, 31 Aug 2018 16:26:49  INFO test_api.py test_api [ line:40 ] 接口请求data:{"serialno":"201808311540580668Fz",'extFields':{"errCode":"0000", "errMsg":"交易成功", "tranSt":"Y"}}
 Fri, 31 Aug 2018 16:26:49  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {}, 'errCode': 'Q015', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '查询交易原单结果为空或失败', 'tradeCode': None, 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:26:49  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功！', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:26:49  INFO test_api.py test_api [ line:56 ] =====开始比对检验返回结果=======
 Fri, 31 Aug 2018 16:26:49  INFO test_api.py test_api [ line:57 ] 全值匹配模式
 Fri, 31 Aug 2018 16:26:49  ERROR test_api.py test_api [ line:62 ] 全值结果比对失败原因为："{'extFields': {}, 'errCode': 'Q015', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '查询交易原单结果为空或失败', 'tradeCode': None, 'exObjFields': {}, 'key': None}" not found in "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功！', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}"
Traceback (most recent call last):
  File "H:\python3_apiTest\TestCases\test_api.py", line 59, in test_api
    self.assertIn(str(res),case_data["expected_data"])
  File "F:\python36\lib\unittest\case.py", line 1089, in assertIn
    self.fail(self._formatMessage(msg, standardMsg))
  File "F:\python36\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: "{'extFields': {}, 'errCode': 'Q015', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '查询交易原单结果为空或失败', 'tradeCode': None, 'exObjFields': {}, 'key': None}" not found in "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功！', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}"
 Fri, 31 Aug 2018 16:26:49  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:26:49  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【提现】渠道accptmd为3企业版取现成功
 Fri, 31 Aug 2018 16:26:49  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.VaccoCoreTradeService
 Fri, 31 Aug 2018 16:26:49  INFO test_api.py test_api [ line:39 ] 接口请求method:withdraw
 Fri, 31 Aug 2018 16:26:49  INFO test_api.py test_api [ line:40 ] 接口请求data:{"subquty":"10",
        "bankid":"205AE16EA606342921",
        "paymodel":"04",
        "channel":"JX",
        "returnUrl":"https://www5.91wutong.com/acco/yhcgTrade/drawCashResult.htm",
        "routeCode":"1",
        "forgetPwdUrl":"https://www5.91wutong.com/user/account/passwordResetJx.htm",
        "serialno":"20180831162632033nM",
        "custno":"1538967652",
        "apkind":"924",
        "subapkind":"924001",
        "apdt":"20180525",
        "aptm":"215807",
        "workdate":"20180525",
      "tradeacco":"000621718538967655",
 "taaccountid":"475AE141EE07252223",
        "tano":"47",
        "sharetype":"A",
        "accptmd":"3",
        "branchcode":"247000",
        "distributorcode":"247"}
 Fri, 31 Aug 2018 16:26:50  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {'routeCode': '1', 'bankCode': '30050000', 'idType': '01', 'retUrl': 'https://www5.91wutong.com/acco/yhcgTrade/drawCashResult.htm', 'seqNo': '109875', 'txTime': '215807', 'channel': '000004', 'mobile': '13588888888', 'sign': 'dJucgN61RqumXEJaqZiRSEoNPM+q/NUQIbTyVwvvUhTPqpxhgMN4VF0LJ8pDtD77KwQFMLzPSrxK31T6qp9Cn5UMBBFw1wOtFeSdNRJGHuHXQ2W8E/TGPRlqdRJSUx/D/BqEdYpi+VFabLXooptFVlGxiy82EGBPMYKMYPuQmKdwxDI0YF1oyKo5k08Z3iOYorVhhOm+dRkgmsPQal3WhJT6JoA6BIlvA1v/hSm/ZVIo/HqZHYJN/ToPcaBl02x9mFpohhwBwQu+GCg/AgSUpVj1lPUHAnWpYJmF6l2roR8bXmRJr+6UsFZcDaV7xUsiFtii5vreSq6JjR2jicAlww==', 'JxUrl': 'https://access.credit2go.cn/escrow/p2p/page/withdraw', 'cardNo': '6222620110038594231', 'idNo': '310112197701016335', 'version': '10', 'txAmount': '10', 'accountId': '6212462170000118072', 'cardBankCode': '', 'forgotPwdUrl': 'https://www5.91wutong.com/user/account/passwordResetJx.htm', 'name': '测试账户凌浩', 'txFee': '0', 'notifyUrl': 'https://www5.91wutong.com/open/jixin/receiveWithdrawNotifyUrl.htm?channel=yhcg', 'instCode': '00920001', 'successfulUrl': 'https://www5.91wutong.com/acco/yhcgTrade/drawCashResult.htm', 'txCode': 'withdraw', 'txDate': '20180525'}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:26:50  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:{.*'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功'.*}
 Fri, 31 Aug 2018 16:26:50  INFO test_api.py test_api [ line:65 ] =====开始比对检验返回结果=======
 Fri, 31 Aug 2018 16:26:50  INFO test_api.py test_api [ line:66 ] 正则表达式匹配模式
 Fri, 31 Aug 2018 16:26:50  INFO test_api.py test_api [ line:69 ] 结果匹配，测试用例通过
 Fri, 31 Aug 2018 16:26:50  INFO test_api.py test_api [ line:81 ] 数据库里存在符合预期条件的数据,测试通过:()
 Fri, 31 Aug 2018 16:26:50  INFO test_api.py test_api [ line:84 ] ================结束一次接口请求===========
 Fri, 31 Aug 2018 16:26:50  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:26:50  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【提现后续】渠道accptmd为3企业版取现失败
 Fri, 31 Aug 2018 16:26:50  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.ProductCoreTradeService
 Fri, 31 Aug 2018 16:26:50  INFO test_api.py test_api [ line:39 ] 接口请求method:tradeContinue
 Fri, 31 Aug 2018 16:26:50  INFO test_api.py test_api [ line:40 ] 接口请求data:{"serialno":"201808311540580220eR",'extFields':{"errCode":"0001", "errMsg":"交易失败", "tranSt":"F"}}
 Fri, 31 Aug 2018 16:26:50  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {}, 'errCode': 'Q015', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '查询交易原单结果为空或失败', 'tradeCode': None, 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:26:50  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:{.*'tradeStatus': 'F'.*}
 Fri, 31 Aug 2018 16:26:50  INFO test_api.py test_api [ line:65 ] =====开始比对检验返回结果=======
 Fri, 31 Aug 2018 16:26:50  INFO test_api.py test_api [ line:66 ] 正则表达式匹配模式
 Fri, 31 Aug 2018 16:26:50  ERROR test_api.py test_api [ line:71 ] 正则结果比对失败原因为;unexpectedly None
Traceback (most recent call last):
  File "H:\python3_apiTest\TestCases\test_api.py", line 68, in test_api
    self.assertIsNotNone(re.search(case_data["expected_data"],str(res)))
  File "F:\python36\lib\unittest\case.py", line 1239, in assertIsNotNone
    self.fail(self._formatMessage(msg, standardMsg))
  File "F:\python36\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: unexpectedly None
 Fri, 31 Aug 2018 16:26:50  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:26:50  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【提现】即信路由代码为2取现成功
 Fri, 31 Aug 2018 16:26:50  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.VaccoCoreTradeService
 Fri, 31 Aug 2018 16:26:50  INFO test_api.py test_api [ line:39 ] 接口请求method:withdraw
 Fri, 31 Aug 2018 16:26:50  INFO test_api.py test_api [ line:40 ] 接口请求data:{"subquty":"10",
        "bankid":"205AE16EA606342921",
        "paymodel":"04",
        "channel":"JX",
        "returnUrl":"https://www5.91wutong.com/acco/yhcgTrade/drawCashResult.htm",
        "routeCode":"2",
        "cardBankCnaps":"308584001024",
        "forgetPwdUrl":"https://www5.91wutong.com/user/account/passwordResetJx.htm",
        "serialno":"201808311626320614qN",
        "custno":"1538967652",
        "apkind":"924",
        "subapkind":"924001",
        "apdt":"20180525",
        "aptm":"215807",
        "workdate":"20180525",
      "tradeacco":"000621718538967655",
 "taaccountid":"475AE141EE07252223",
        "tano":"47",
        "sharetype":"A",
        "accptmd":"3",
        "branchcode":"247000",
        "distributorcode":"247"}
 Fri, 31 Aug 2018 16:26:51  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {'retUrl': 'https://www5.91wutong.com/acco/yhcgTrade/drawCashResult.htm', 'seqNo': '110148', 'txTime': '215807', 'channel': '000004', 'sign': 'bJyy7u9XrCr/mYmSD332ydZSTdDeQmRK7+TS0qOyPtZv33ppPmXXcyOWQoGRJAu26vC3SAuEXW3g6uYte4ZHxDAR7XfVbAeLJEyGqWIhMbZvKgt9nHCFADRdD45Wf1RW/8AO0QN2g2ZthCxZSagL3Xvy9wgKty7hSx/QzQxsS0NPnHAnfaYcQ1G/MTahWYr/1rxa6RPex3Jwmkuy6CKY1aCYmv9JCISZ7j4e6jL0vPC0pS0vWC7/vJVOQwCF+lOtXr+fvKKPZDE/Yt7vmoHPlINcKX4G0LWUOml9+NZjYBgzLww99UTwUXbuyH6Q5dKHcC8y/Cn4st/cygYKrLkRYw==', 'cardNo': '6222620110038594231', 'idNo': '310112197701016335', 'forgotPwdUrl': 'https://www5.91wutong.com/user/account/passwordResetJx.htm', 'instCode': '00920001', 'successfulUrl': 'https://www5.91wutong.com/acco/yhcgTrade/drawCashResult.htm', 'routeCode': '2', 'bankCode': '30050000', 'idType': '01', 'mobile': '13588888888', 'JxUrl': 'https://access.credit2go.cn/escrow/p2p/page/withdraw', 'cardBankCnaps': '308584001024', 'version': '10', 'txAmount': '10', 'accountId': '6212462170000118072', 'cardBankCode': '', 'name': '测试账户凌浩', 'txFee': '0', 'notifyUrl': 'https://www5.91wutong.com/open/jixin/receiveWithdrawNotifyUrl.htm?channel=yhcg', 'txCode': 'withdraw', 'txDate': '20180525'}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:26:51  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:{.*'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功'.*}
 Fri, 31 Aug 2018 16:26:51  INFO test_api.py test_api [ line:65 ] =====开始比对检验返回结果=======
 Fri, 31 Aug 2018 16:26:51  INFO test_api.py test_api [ line:66 ] 正则表达式匹配模式
 Fri, 31 Aug 2018 16:26:51  INFO test_api.py test_api [ line:69 ] 结果匹配，测试用例通过
 Fri, 31 Aug 2018 16:26:51  INFO test_api.py test_api [ line:81 ] 数据库里存在符合预期条件的数据,测试通过:()
 Fri, 31 Aug 2018 16:26:51  INFO test_api.py test_api [ line:84 ] ================结束一次接口请求===========
 Fri, 31 Aug 2018 16:26:51  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:26:51  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【提现后续】即信路由代码routecode为2取现成功
 Fri, 31 Aug 2018 16:26:51  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.ProductCoreTradeService
 Fri, 31 Aug 2018 16:26:51  INFO test_api.py test_api [ line:39 ] 接口请求method:tradeContinue
 Fri, 31 Aug 2018 16:26:51  INFO test_api.py test_api [ line:40 ] 接口请求data:{"serialno":"201808311540580239jZ",'extFields':{"errCode":"0000", "errMsg":"交易成功", "tranSt":"Y"}}
 Fri, 31 Aug 2018 16:26:51  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {}, 'errCode': 'Q015', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '查询交易原单结果为空或失败', 'tradeCode': None, 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:26:51  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功！', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:26:51  INFO test_api.py test_api [ line:56 ] =====开始比对检验返回结果=======
 Fri, 31 Aug 2018 16:26:51  INFO test_api.py test_api [ line:57 ] 全值匹配模式
 Fri, 31 Aug 2018 16:26:51  ERROR test_api.py test_api [ line:62 ] 全值结果比对失败原因为："{'extFields': {}, 'errCode': 'Q015', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '查询交易原单结果为空或失败', 'tradeCode': None, 'exObjFields': {}, 'key': None}" not found in "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功！', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}"
Traceback (most recent call last):
  File "H:\python3_apiTest\TestCases\test_api.py", line 59, in test_api
    self.assertIn(str(res),case_data["expected_data"])
  File "F:\python36\lib\unittest\case.py", line 1089, in assertIn
    self.fail(self._formatMessage(msg, standardMsg))
  File "F:\python36\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: "{'extFields': {}, 'errCode': 'Q015', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '查询交易原单结果为空或失败', 'tradeCode': None, 'exObjFields': {}, 'key': None}" not found in "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功！', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}"
 Fri, 31 Aug 2018 16:26:51  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:26:51  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【提现】即信路由代码routecode为2取现成功
 Fri, 31 Aug 2018 16:26:51  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.VaccoCoreTradeService
 Fri, 31 Aug 2018 16:26:51  INFO test_api.py test_api [ line:39 ] 接口请求method:withdraw
 Fri, 31 Aug 2018 16:26:51  INFO test_api.py test_api [ line:40 ] 接口请求data:{"subquty":"10",
        "bankid":"205AE16EA606342921",
        "paymodel":"04",
        "channel":"JX",
        "returnUrl":"https://www5.91wutong.com/acco/yhcgTrade/drawCashResult.htm",
        "routeCode":"2",
        "cardBankCnaps":"308584001024",
        "forgetPwdUrl":"https://www5.91wutong.com/user/account/passwordResetJx.htm",
        "serialno":"201808311626320980ly",
        "custno":"1538967652",
        "apkind":"924",
        "subapkind":"924001",
        "apdt":"20180525",
        "aptm":"215807",
        "workdate":"20180525",
       "tradeacco":"000621718538967655",
 "taaccountid":"475AE141EE07252223",
        "tano":"47",
        "sharetype":"A",
        "accptmd":"3",
        "branchcode":"247000",
        "distributorcode":"247"}
 Fri, 31 Aug 2018 16:26:52  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {'retUrl': 'https://www5.91wutong.com/acco/yhcgTrade/drawCashResult.htm', 'seqNo': '105076', 'txTime': '215807', 'channel': '000004', 'sign': 'Gs04tz+BybD56jgYA5Gn7/DCBv06RoqQJYAk8cS2V7Hh5FGUEMtxx3B3o+IVbh5r/2wr0ubgBfZScEjZQF2ROgRRz1xFl3tDuEpFy9LLSAFcUgMpggDD4ZZpmpM83Qk/mAo0ulVfBlptjjFjtGomnlRVvN0jfaapUS1FWSqzGsC7utDqOHoF9GuOqaRl2ENpqU0RsaCg4QRxAUSTbcjBj6zVeAfgw+I4OASXzedysvrwzRbgm2plm+2TmtU5Jzz61axTefHG3a10m7bgF+o9lGmeK3iWTTszE+5XyOfdf9XBljYiLSgpdx7xTe59E3tDyraGOnbBxGnM2rDtYVSEEQ==', 'cardNo': '6222620110038594231', 'idNo': '310112197701016335', 'forgotPwdUrl': 'https://www5.91wutong.com/user/account/passwordResetJx.htm', 'instCode': '00920001', 'successfulUrl': 'https://www5.91wutong.com/acco/yhcgTrade/drawCashResult.htm', 'routeCode': '2', 'bankCode': '30050000', 'idType': '01', 'mobile': '13588888888', 'JxUrl': 'https://access.credit2go.cn/escrow/p2p/page/withdraw', 'cardBankCnaps': '308584001024', 'version': '10', 'txAmount': '10', 'accountId': '6212462170000118072', 'cardBankCode': '', 'name': '测试账户凌浩', 'txFee': '0', 'notifyUrl': 'https://www5.91wutong.com/open/jixin/receiveWithdrawNotifyUrl.htm?channel=yhcg', 'txCode': 'withdraw', 'txDate': '20180525'}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:26:52  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:{.*'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功'.*}
 Fri, 31 Aug 2018 16:26:52  INFO test_api.py test_api [ line:65 ] =====开始比对检验返回结果=======
 Fri, 31 Aug 2018 16:26:52  INFO test_api.py test_api [ line:66 ] 正则表达式匹配模式
 Fri, 31 Aug 2018 16:26:52  INFO test_api.py test_api [ line:69 ] 结果匹配，测试用例通过
 Fri, 31 Aug 2018 16:26:52  INFO test_api.py test_api [ line:81 ] 数据库里存在符合预期条件的数据,测试通过:()
 Fri, 31 Aug 2018 16:26:52  INFO test_api.py test_api [ line:84 ] ================结束一次接口请求===========
 Fri, 31 Aug 2018 16:26:52  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:26:52  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【提现后续】即信路由代码routecode为2取现失败
 Fri, 31 Aug 2018 16:26:52  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.ProductCoreTradeService
 Fri, 31 Aug 2018 16:26:52  INFO test_api.py test_api [ line:39 ] 接口请求method:tradeContinue
 Fri, 31 Aug 2018 16:26:52  INFO test_api.py test_api [ line:40 ] 接口请求data:{"serialno":"20180831154058042fD",'extFields':{"errCode":"0001", "errMsg":"交易失败", "tranSt":"F"}}
 Fri, 31 Aug 2018 16:26:52  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {}, 'errCode': 'Q015', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '查询交易原单结果为空或失败', 'tradeCode': None, 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:26:52  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:{.*'tradeStatus': 'F'.*}
 Fri, 31 Aug 2018 16:26:52  INFO test_api.py test_api [ line:65 ] =====开始比对检验返回结果=======
 Fri, 31 Aug 2018 16:26:52  INFO test_api.py test_api [ line:66 ] 正则表达式匹配模式
 Fri, 31 Aug 2018 16:26:52  ERROR test_api.py test_api [ line:71 ] 正则结果比对失败原因为;unexpectedly None
Traceback (most recent call last):
  File "H:\python3_apiTest\TestCases\test_api.py", line 68, in test_api
    self.assertIsNotNone(re.search(case_data["expected_data"],str(res)))
  File "F:\python36\lib\unittest\case.py", line 1239, in assertIsNotNone
    self.fail(self._formatMessage(msg, standardMsg))
  File "F:\python36\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: unexpectedly None
 Fri, 31 Aug 2018 16:26:52  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:26:52  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【提现】支付模式错误
 Fri, 31 Aug 2018 16:26:52  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.VaccoCoreTradeService
 Fri, 31 Aug 2018 16:26:52  INFO test_api.py test_api [ line:39 ] 接口请求method:withdraw
 Fri, 31 Aug 2018 16:26:52  INFO test_api.py test_api [ line:40 ] 接口请求data:{"subquty":"10",
        "bankid":"205AE16EA606342921",
        "paymodel":"05",
        "channel":"JX",
        "returnUrl":"https://www5.91wutong.com/acco/yhcgTrade/drawCashResult.htm",
        "routeCode":"2",
        "cardBankCnaps":"308584001024",
        "forgetPwdUrl":"https://www5.91wutong.com/user/account/passwordResetJx.htm",
        "serialno":"201808311626320445lA",
        "custno":"1538967652",
        "apkind":"924",
        "subapkind":"924001",
        "apdt":"20180525",
        "aptm":"215807",
        "workdate":"20180525",
        "tradeacco":"000621718538967655",
 "taaccountid":"475AE141EE07252223",
        "tano":"47",
        "sharetype":"A",
        "accptmd":"3",
        "branchcode":"247000",
        "distributorcode":"247"}
 Fri, 31 Aug 2018 16:26:52  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'F', 'tradeMsg': '查询路由信息为空', 'errMsg': '申请成功', 'tradeCode': '9995', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:26:52  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'F', 'tradeMsg': '查询路由信息为空', 'errMsg': '申请成功', 'tradeCode': '9995', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:26:52  INFO test_api.py test_api [ line:56 ] =====开始比对检验返回结果=======
 Fri, 31 Aug 2018 16:26:52  INFO test_api.py test_api [ line:57 ] 全值匹配模式
 Fri, 31 Aug 2018 16:26:52  INFO test_api.py test_api [ line:60 ] 结果比对成功，测试用例通过
 Fri, 31 Aug 2018 16:26:52  INFO test_api.py test_api [ line:81 ] 数据库里存在符合预期条件的数据,测试通过:()
 Fri, 31 Aug 2018 16:26:52  INFO test_api.py test_api [ line:84 ] ================结束一次接口请求===========
 Fri, 31 Aug 2018 16:26:52  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:26:52  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【提现】return url返回梧桐页面链接为空
 Fri, 31 Aug 2018 16:26:52  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.VaccoCoreTradeService
 Fri, 31 Aug 2018 16:26:52  INFO test_api.py test_api [ line:39 ] 接口请求method:withdraw
 Fri, 31 Aug 2018 16:26:52  INFO test_api.py test_api [ line:40 ] 接口请求data:{"subquty":"10",
        "bankid":"205AE16EA606342921",
        "paymodel":"05",
        "channel":"JX",
        "returnUrl":"",
        "routeCode":"2",
        "cardBankCnaps":"308584001024",
        "forgetPwdUrl":"https://www5.91wutong.com/user/account/passwordResetJx.htm",
        "serialno":"201808311626320992fU",
        "custno":"1538967652",
        "apkind":"924",
        "subapkind":"924001",
        "apdt":"20180525",
        "aptm":"215807",
        "workdate":"20180525",
       "tradeacco":"000621718538967655",
 "taaccountid":"475AE141EE07252223",
        "tano":"47",
        "sharetype":"A",
        "accptmd":"3",
        "branchcode":"247000",
        "distributorcode":"247"}
 Fri, 31 Aug 2018 16:26:52  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {}, 'errCode': 'P001', 'tradeStatus': None, 'tradeMsg': '返回梧桐地址[ReturnUrl] 不能为null.', 'errMsg': '返回梧桐地址[ReturnUrl] 不能为null.', 'tradeCode': 'P001', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:26:52  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:{'extFields': {}, 'errCode': 'P001', 'tradeStatus': None, 'tradeMsg': '返回梧桐地址[ReturnUrl] 不能为null.', 'errMsg': '返回梧桐地址[ReturnUrl] 不能为null.', 'tradeCode': 'P001', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:26:52  INFO test_api.py test_api [ line:56 ] =====开始比对检验返回结果=======
 Fri, 31 Aug 2018 16:26:52  INFO test_api.py test_api [ line:57 ] 全值匹配模式
 Fri, 31 Aug 2018 16:26:52  INFO test_api.py test_api [ line:60 ] 结果比对成功，测试用例通过
 Fri, 31 Aug 2018 16:26:52  INFO test_api.py test_api [ line:81 ] 数据库里存在符合预期条件的数据,测试通过:()
 Fri, 31 Aug 2018 16:26:52  INFO test_api.py test_api [ line:84 ] ================结束一次接口请求===========
 Fri, 31 Aug 2018 16:26:52  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:26:52  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【提现】忘记密码链接为空
 Fri, 31 Aug 2018 16:26:52  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.VaccoCoreTradeService
 Fri, 31 Aug 2018 16:26:52  INFO test_api.py test_api [ line:39 ] 接口请求method:withdraw
 Fri, 31 Aug 2018 16:26:52  INFO test_api.py test_api [ line:40 ] 接口请求data:{"subquty":"10",
        "bankid":"205AE16EA606342921",
        "paymodel":"04",
        "channel":"JX",
        "returnUrl":"https://www5.91wutong.com/acco/yhcgTrade/drawCashResult.htm",
        "routeCode":"2",
        "cardBankCnaps":"308584001024",
        "forgetPwdUrl":"",
        "serialno":"20180831162632093KH",
        "custno":"1538967652",
        "apkind":"924",
        "subapkind":"924001",
        "apdt":"20180525",
        "aptm":"215807",
        "workdate":"20180525",
       "tradeacco":"000621718538967655",
 "taaccountid":"475AE141EE07252223",
        "tano":"47",
        "sharetype":"A",
        "accptmd":"3",
        "branchcode":"247000",
        "distributorcode":"247"}
 Fri, 31 Aug 2018 16:26:52  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {}, 'errCode': 'P001', 'tradeStatus': None, 'tradeMsg': '忘记密码链接[ForgetPwdUrl] 不能为null.', 'errMsg': '忘记密码链接[ForgetPwdUrl] 不能为null.', 'tradeCode': 'P001', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:26:52  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:{'extFields': {}, 'errCode': 'P001', 'tradeStatus': None, 'tradeMsg': '忘记密码链接[ForgetPwdUrl] 不能为null.', 'errMsg': '忘记密码链接[ForgetPwdUrl] 不能为null.', 'tradeCode': 'P001', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:26:52  INFO test_api.py test_api [ line:56 ] =====开始比对检验返回结果=======
 Fri, 31 Aug 2018 16:26:52  INFO test_api.py test_api [ line:57 ] 全值匹配模式
 Fri, 31 Aug 2018 16:26:52  INFO test_api.py test_api [ line:60 ] 结果比对成功，测试用例通过
 Fri, 31 Aug 2018 16:26:52  INFO test_api.py test_api [ line:81 ] 数据库里存在符合预期条件的数据,测试通过:()
 Fri, 31 Aug 2018 16:26:52  INFO test_api.py test_api [ line:84 ] ================结束一次接口请求===========
 Fri, 31 Aug 2018 16:26:52  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:26:52  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【余额购买】购买随心投产品申请成功
 Fri, 31 Aug 2018 16:26:52  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.ProductCoreTradeService
 Fri, 31 Aug 2018 16:26:52  INFO test_api.py test_api [ line:39 ] 接口请求method:buyByVacco
 Fri, 31 Aug 2018 16:26:52  INFO test_api.py test_api [ line:40 ] 接口请求data:{
"periodic":"false",
"subamt":"100.00",
"honourdate":"20180720",
"baseyield":"0.0828",
"yield":"0.0828",
"addyield":"0",
"interestbegindate":"20180710",
"interestenddate":"20180719",
"serialno":"201808311626320874Ku",
"custno":"1538943691",
"apkind":"012","subapkind":"012001",
"apdt":"20180710",
"aptm":"102056",
"workdate":"20180710",
"tradeacco":"000621718538943694",
"taaccountid":"475A7D638769350988",
"tano":"47","productid":"732822",
"sharetype":"A","accptmd":"1",
"branchcode":"247000","distributorcode":"247"}
 Fri, 31 Aug 2018 16:26:52  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:26:52  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:26:52  INFO test_api.py test_api [ line:56 ] =====开始比对检验返回结果=======
 Fri, 31 Aug 2018 16:26:52  INFO test_api.py test_api [ line:57 ] 全值匹配模式
 Fri, 31 Aug 2018 16:26:52  INFO test_api.py test_api [ line:60 ] 结果比对成功，测试用例通过
 Fri, 31 Aug 2018 16:26:52  INFO test_api.py test_api [ line:81 ] 数据库里存在符合预期条件的数据,测试通过:()
 Fri, 31 Aug 2018 16:26:52  INFO test_api.py test_api [ line:84 ] ================结束一次接口请求===========
 Fri, 31 Aug 2018 16:26:52  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:26:52  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【调用轮询接口处理交易请求】
 Fri, 31 Aug 2018 16:26:52  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.ProductCoreTradeService
 Fri, 31 Aug 2018 16:26:52  INFO test_api.py test_api [ line:39 ] 接口请求method:tradeContinueTask
 Fri, 31 Aug 2018 16:26:52  INFO test_api.py test_api [ line:40 ] 接口请求data:""
 Fri, 31 Aug 2018 16:26:54  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {}, 'errCode': '0000', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '申请成功', 'tradeCode': None, 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:26:54  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:None
 Fri, 31 Aug 2018 16:26:54  INFO test_api.py test_api [ line:81 ] 数据库里存在符合预期条件的数据,测试通过:()
 Fri, 31 Aug 2018 16:26:54  INFO test_api.py test_api [ line:81 ] 数据库里存在符合预期条件的数据,测试通过:()
 Fri, 31 Aug 2018 16:26:54  INFO test_api.py test_api [ line:84 ] ================结束一次接口请求===========
 Fri, 31 Aug 2018 16:26:54  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:26:54  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【余额购买】购买金额大于账户可用余额
 Fri, 31 Aug 2018 16:26:54  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.ProductCoreTradeService
 Fri, 31 Aug 2018 16:26:54  INFO test_api.py test_api [ line:39 ] 接口请求method:buyByVacco
 Fri, 31 Aug 2018 16:26:54  INFO test_api.py test_api [ line:40 ] 接口请求data:{
"periodic":"false",
"subamt":"10000.00",
"honourdate":"20180720",
"baseyield":"0.0828",
"yield":"0.0828",
"addyield":"0",
"interestbegindate":"20180710",
"interestenddate":"20180719",
"serialno":"201808311626320612nv",
"custno":"1538943529",
"apkind":"012","subapkind":"012001",
"apdt":"20180710",
"aptm":"102056",
"workdate":"20180710",
"tradeacco":"000621718538943532",
"taaccountid":"475A7D11AC36446661",
"tano":"47","productid":"732822",
"sharetype":"A","accptmd":"1",
"branchcode":"247000","distributorcode":"247"}
 Fri, 31 Aug 2018 16:26:54  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'F', 'tradeMsg': '查询不到唯一的关联持仓扩展编号！', 'errMsg': '申请成功', 'tradeCode': 'BC22', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:26:54  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'F', 'tradeMsg': '产品余额不足或者账户余额不足！', 'errMsg': '申请成功', 'tradeCode': 'BC21', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:26:54  INFO test_api.py test_api [ line:56 ] =====开始比对检验返回结果=======
 Fri, 31 Aug 2018 16:26:54  INFO test_api.py test_api [ line:57 ] 全值匹配模式
 Fri, 31 Aug 2018 16:26:54  ERROR test_api.py test_api [ line:62 ] 全值结果比对失败原因为："{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'F', 'tradeMsg': '查询不到唯一的关联持仓扩展编号！', 'errMsg': '申请成功', 'tradeCode': 'BC22', 'exObjFields': {}, 'key': None}" not found in "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'F', 'tradeMsg': '产品余额不足或者账户余额不足！', 'errMsg': '申请成功', 'tradeCode': 'BC21', 'exObjFields': {}, 'key': None}"
Traceback (most recent call last):
  File "H:\python3_apiTest\TestCases\test_api.py", line 59, in test_api
    self.assertIn(str(res),case_data["expected_data"])
  File "F:\python36\lib\unittest\case.py", line 1089, in assertIn
    self.fail(self._formatMessage(msg, standardMsg))
  File "F:\python36\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'F', 'tradeMsg': '查询不到唯一的关联持仓扩展编号！', 'errMsg': '申请成功', 'tradeCode': 'BC22', 'exObjFields': {}, 'key': None}" not found in "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'F', 'tradeMsg': '产品余额不足或者账户余额不足！', 'errMsg': '申请成功', 'tradeCode': 'BC21', 'exObjFields': {}, 'key': None}"
 Fri, 31 Aug 2018 16:26:54  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:26:54  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【余额购买】购买金额大于产品剩余可购金额
 Fri, 31 Aug 2018 16:26:54  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.ProductCoreTradeService
 Fri, 31 Aug 2018 16:26:54  INFO test_api.py test_api [ line:39 ] 接口请求method:buyByVacco
 Fri, 31 Aug 2018 16:26:54  INFO test_api.py test_api [ line:40 ] 接口请求data:{
"periodic":"false",
"subamt":"100000",
"honourdate":"20180720",
"baseyield":"0.0828",
"yield":"0.0828",
"addyield":"0",
"interestbegindate":"20180710",
"interestenddate":"20180719",
"serialno":"201808311626320773JH",
"custno":"1538943559",
"apkind":"012","subapkind":"012001",
"apdt":"20180710",
"aptm":"102056",
"workdate":"20180710",
"tradeacco":"000621718538943562",
"taaccountid":"475A7D148427411438",
"tano":"47","productid":"732821",
"sharetype":"A","accptmd":"1",
"branchcode":"247000","distributorcode":"247"}
 Fri, 31 Aug 2018 16:26:54  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'F', 'tradeMsg': '产品余额不足或者账户余额不足！', 'errMsg': '申请成功', 'tradeCode': 'BC21', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:26:54  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'F', 'tradeMsg': '产品余额不足或者账户余额不足！', 'errMsg': '申请成功', 'tradeCode': 'BC21', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:26:54  INFO test_api.py test_api [ line:56 ] =====开始比对检验返回结果=======
 Fri, 31 Aug 2018 16:26:54  INFO test_api.py test_api [ line:57 ] 全值匹配模式
 Fri, 31 Aug 2018 16:26:54  INFO test_api.py test_api [ line:60 ] 结果比对成功，测试用例通过
 Fri, 31 Aug 2018 16:26:54  INFO test_api.py test_api [ line:81 ] 数据库里存在符合预期条件的数据,测试通过:()
 Fri, 31 Aug 2018 16:26:54  INFO test_api.py test_api [ line:84 ] ================结束一次接口请求===========
 Fri, 31 Aug 2018 16:26:54  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:26:54  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【余额购买】输入金额含空格
 Fri, 31 Aug 2018 16:26:54  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.ProductCoreTradeService
 Fri, 31 Aug 2018 16:26:54  INFO test_api.py test_api [ line:39 ] 接口请求method:buyByVacco
 Fri, 31 Aug 2018 16:26:54  INFO test_api.py test_api [ line:40 ] 接口请求data:{
"periodic":"false",
"subamt":"10 0",
"honourdate":"20180720",
"baseyield":"0.0828",
"yield":"0.0828",
"addyield":"0",
"interestbegindate":"20180710",
"interestenddate":"20180719",
"serialno":"201808311626320253gJ",
"custno":"1538943691",
"apkind":"012","subapkind":"012001",
"apdt":"20180710",
"aptm":"102056",
"workdate":"20180710",
"tradeacco":"000621718538943694",
"taaccountid":"475A7D638769350988",
"tano":"47","productid":"732822",
"sharetype":"A","accptmd":"1",
"branchcode":"247000","distributorcode":"247"}
 Fri, 31 Aug 2018 16:26:54  INFO test_api.py test_api [ line:49 ] 接口请求response data为：read.java:745)
 Fri, 31 Aug 2018 16:26:54  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:Failed to invoke method buyByVacco, cause: java.lang.NumberFormatException
 Fri, 31 Aug 2018 16:26:54  INFO test_api.py test_api [ line:56 ] =====开始比对检验返回结果=======
 Fri, 31 Aug 2018 16:26:54  INFO test_api.py test_api [ line:57 ] 全值匹配模式
 Fri, 31 Aug 2018 16:26:54  ERROR test_api.py test_api [ line:62 ] 全值结果比对失败原因为：'read.java:745)' not found in 'Failed to invoke method buyByVacco, cause: java.lang.NumberFormatException'
Traceback (most recent call last):
  File "H:\python3_apiTest\TestCases\test_api.py", line 59, in test_api
    self.assertIn(str(res),case_data["expected_data"])
  File "F:\python36\lib\unittest\case.py", line 1089, in assertIn
    self.fail(self._formatMessage(msg, standardMsg))
  File "F:\python36\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: 'read.java:745)' not found in 'Failed to invoke method buyByVacco, cause: java.lang.NumberFormatException'
 Fri, 31 Aug 2018 16:26:54  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:26:54  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【余额购买】输入金额含特殊字符
 Fri, 31 Aug 2018 16:26:54  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.ProductCoreTradeService
 Fri, 31 Aug 2018 16:26:54  INFO test_api.py test_api [ line:39 ] 接口请求method:buyByVacco
 Fri, 31 Aug 2018 16:26:54  INFO test_api.py test_api [ line:40 ] 接口请求data:{
"periodic":"false",
"subamt":"10%0.00",
"honourdate":"20180720",
"baseyield":"0.0828",
"yield":"0.0828",
"addyield":"0",
"interestbegindate":"20180710",
"interestenddate":"20180719",
"serialno":"201808311626320413iK",
"custno":"1538943691",
"apkind":"012","subapkind":"012001",
"apdt":"20180710",
"aptm":"102056",
"workdate":"20180710",
"tradeacco":"000621718538943694",
"taaccountid":"475A7D638769350988",
"tano":"47","productid":"732822",
"sharetype":"A","accptmd":"1",
"branchcode":"247000","distributorcode":"247"}
 Fri, 31 Aug 2018 16:26:54  INFO test_api.py test_api [ line:49 ] 接口请求response data为：read.java:745)
 Fri, 31 Aug 2018 16:26:54  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:Failed to invoke method buyByVacco, cause: java.lang.NumberFormatException
 Fri, 31 Aug 2018 16:26:54  INFO test_api.py test_api [ line:56 ] =====开始比对检验返回结果=======
 Fri, 31 Aug 2018 16:26:54  INFO test_api.py test_api [ line:57 ] 全值匹配模式
 Fri, 31 Aug 2018 16:26:54  ERROR test_api.py test_api [ line:62 ] 全值结果比对失败原因为：'read.java:745)' not found in 'Failed to invoke method buyByVacco, cause: java.lang.NumberFormatException'
Traceback (most recent call last):
  File "H:\python3_apiTest\TestCases\test_api.py", line 59, in test_api
    self.assertIn(str(res),case_data["expected_data"])
  File "F:\python36\lib\unittest\case.py", line 1089, in assertIn
    self.fail(self._formatMessage(msg, standardMsg))
  File "F:\python36\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: 'read.java:745)' not found in 'Failed to invoke method buyByVacco, cause: java.lang.NumberFormatException'
 Fri, 31 Aug 2018 16:26:54  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:26:54  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【余额购买】购买系统加息随心投产品
 Fri, 31 Aug 2018 16:26:54  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.ProductCoreTradeService
 Fri, 31 Aug 2018 16:26:54  INFO test_api.py test_api [ line:39 ] 接口请求method:buyByVacco
 Fri, 31 Aug 2018 16:26:54  INFO test_api.py test_api [ line:40 ] 接口请求data:{"periodic":"false",
"subamt":"10",
"honourdate":"20180720",
"baseyield":"0.0828",
"yield":"0.0838",
"addyield":"0",
"interestbegindate":"20180710",
"interestenddate":"20180719",
"serialno":"201808311626320791tF",
"custno":"1538943691",
"apkind":"012","subapkind":"012001",
"apdt":"20180710",
"aptm":"134256",
"workdate":"20180710",
"tradeacco":"000621718538943694",
"taaccountid":"475A7D638769350988",
"tano":"47","productid":"732822",
"sharetype":"A","accptmd":"1",
"branchcode":"247000","distributorcode":"247"}
 Fri, 31 Aug 2018 16:26:54  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:26:54  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:26:54  INFO test_api.py test_api [ line:56 ] =====开始比对检验返回结果=======
 Fri, 31 Aug 2018 16:26:54  INFO test_api.py test_api [ line:57 ] 全值匹配模式
 Fri, 31 Aug 2018 16:26:54  INFO test_api.py test_api [ line:60 ] 结果比对成功，测试用例通过
 Fri, 31 Aug 2018 16:26:54  INFO test_api.py test_api [ line:81 ] 数据库里存在符合预期条件的数据,测试通过:()
 Fri, 31 Aug 2018 16:26:54  INFO test_api.py test_api [ line:84 ] ================结束一次接口请求===========
 Fri, 31 Aug 2018 16:26:54  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:26:54  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【调用轮询接口处理交易请求】
 Fri, 31 Aug 2018 16:26:54  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.ProductCoreTradeService
 Fri, 31 Aug 2018 16:26:54  INFO test_api.py test_api [ line:39 ] 接口请求method:tradeContinueTask
 Fri, 31 Aug 2018 16:26:54  INFO test_api.py test_api [ line:40 ] 接口请求data:""
 Fri, 31 Aug 2018 16:26:56  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {}, 'errCode': '0000', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '申请成功', 'tradeCode': None, 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:26:56  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:None
 Fri, 31 Aug 2018 16:26:56  INFO test_api.py test_api [ line:81 ] 数据库里存在符合预期条件的数据,测试通过:()
 Fri, 31 Aug 2018 16:26:56  INFO test_api.py test_api [ line:81 ] 数据库里存在符合预期条件的数据,测试通过:()
 Fri, 31 Aug 2018 16:26:56  INFO test_api.py test_api [ line:84 ] ================结束一次接口请求===========
 Fri, 31 Aug 2018 16:26:56  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:26:56  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【余额购买】使用加息券购买随心投产品
 Fri, 31 Aug 2018 16:26:56  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.ProductCoreTradeService
 Fri, 31 Aug 2018 16:26:56  INFO test_api.py test_api [ line:39 ] 接口请求method:buyByVacco
 Fri, 31 Aug 2018 16:26:56  INFO test_api.py test_api [ line:40 ] 接口请求data:{"periodic":"false",
"subamt":"100",
"honourdate":"20180720",
"baseyield":"0.0850",
"yield":"0.0070",
"addyield":"0.4",
"exyield":"0",
"exActivityFlag":"1",
"couponid":"20180710153894369120709111860",
"interestbegindate":"20180710",
"interestenddate":"20180719",
"serialno":"201808311626320466DO",
"custno":"1538943691",
"apkind":"012","subapkind":"012001",
"apdt":"20180710",
"aptm":"134256",
"workdate":"20180710",
"tradeacco":"000621718538943694",
"taaccountid":"475A7D638769350988",
"tano":"47","productid":"732908",
"sharetype":"A","accptmd":"1",
"branchcode":"247000","distributorcode":"247"}
 Fri, 31 Aug 2018 16:26:56  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:26:56  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:26:56  INFO test_api.py test_api [ line:56 ] =====开始比对检验返回结果=======
 Fri, 31 Aug 2018 16:26:56  INFO test_api.py test_api [ line:57 ] 全值匹配模式
 Fri, 31 Aug 2018 16:26:56  INFO test_api.py test_api [ line:60 ] 结果比对成功，测试用例通过
 Fri, 31 Aug 2018 16:26:56  INFO test_api.py test_api [ line:81 ] 数据库里存在符合预期条件的数据,测试通过:()
 Fri, 31 Aug 2018 16:26:56  INFO test_api.py test_api [ line:84 ] ================结束一次接口请求===========
 Fri, 31 Aug 2018 16:26:56  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:26:56  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【调用轮询接口处理交易请求】
 Fri, 31 Aug 2018 16:26:56  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.ProductCoreTradeService
 Fri, 31 Aug 2018 16:26:56  INFO test_api.py test_api [ line:39 ] 接口请求method:tradeContinueTask
 Fri, 31 Aug 2018 16:26:56  INFO test_api.py test_api [ line:40 ] 接口请求data:""
 Fri, 31 Aug 2018 16:26:59  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {}, 'errCode': '0000', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '申请成功', 'tradeCode': None, 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:26:59  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:None
 Fri, 31 Aug 2018 16:26:59  INFO test_api.py test_api [ line:81 ] 数据库里存在符合预期条件的数据,测试通过:()
 Fri, 31 Aug 2018 16:26:59  INFO test_api.py test_api [ line:81 ] 数据库里存在符合预期条件的数据,测试通过:()
 Fri, 31 Aug 2018 16:26:59  INFO test_api.py test_api [ line:84 ] ================结束一次接口请求===========
 Fri, 31 Aug 2018 16:26:59  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:26:59  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【余额购买】使用返现券购买随心投产品
 Fri, 31 Aug 2018 16:26:59  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.ProductCoreTradeService
 Fri, 31 Aug 2018 16:26:59  INFO test_api.py test_api [ line:39 ] 接口请求method:buyByVacco
 Fri, 31 Aug 2018 16:26:59  INFO test_api.py test_api [ line:40 ] 接口请求data:{"periodic":"false",
        "subamt":"1000.00",
        "couponid":"5B4C07350077bcEA",
        "honourdate":"20190615",
        "baseyield":"0.0828",
        "yield":"0.0828",
        "addyield":"0.0000",
        "interestbegindate":"20180717",
        "interestenddate":"20190614",
        "exyield":"0",
        "exActivityFlag":"1",
        "serialno":"201808311626320191pb",
        "custno":"1538943691",
        "apkind":"012",
        "subapkind":"012001",
        "apdt":"20180717",
        "aptm":"114840",
        "workdate":"20180717",
        "tradeacco":"000621718538943694",
        "taaccountid":"475A7D638769350988",
        "tano":"47",
        "productid":"732818",
        "sharetype":"A",
        "accptmd":"1",
        "branchcode":"247000",
        "distributorcode":"247"}
 Fri, 31 Aug 2018 16:26:59  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:26:59  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:26:59  INFO test_api.py test_api [ line:56 ] =====开始比对检验返回结果=======
 Fri, 31 Aug 2018 16:26:59  INFO test_api.py test_api [ line:57 ] 全值匹配模式
 Fri, 31 Aug 2018 16:26:59  INFO test_api.py test_api [ line:60 ] 结果比对成功，测试用例通过
 Fri, 31 Aug 2018 16:26:59  INFO test_api.py test_api [ line:81 ] 数据库里存在符合预期条件的数据,测试通过:()
 Fri, 31 Aug 2018 16:26:59  INFO test_api.py test_api [ line:84 ] ================结束一次接口请求===========
 Fri, 31 Aug 2018 16:26:59  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:26:59  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【调用轮询接口处理交易请求】
 Fri, 31 Aug 2018 16:26:59  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.ProductCoreTradeService
 Fri, 31 Aug 2018 16:26:59  INFO test_api.py test_api [ line:39 ] 接口请求method:tradeContinueTask
 Fri, 31 Aug 2018 16:26:59  INFO test_api.py test_api [ line:40 ] 接口请求data:""
 Fri, 31 Aug 2018 16:27:02  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {}, 'errCode': '0000', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '申请成功', 'tradeCode': None, 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:27:02  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:None
 Fri, 31 Aug 2018 16:27:02  INFO test_api.py test_api [ line:81 ] 数据库里存在符合预期条件的数据,测试通过:()
 Fri, 31 Aug 2018 16:27:02  INFO test_api.py test_api [ line:81 ] 数据库里存在符合预期条件的数据,测试通过:()
 Fri, 31 Aug 2018 16:27:02  INFO test_api.py test_api [ line:84 ] ================结束一次接口请求===========
 Fri, 31 Aug 2018 16:27:02  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:27:02  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【余额购买】购买随意转产品
 Fri, 31 Aug 2018 16:27:02  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.ProductCoreTradeService
 Fri, 31 Aug 2018 16:27:02  INFO test_api.py test_api [ line:39 ] 接口请求method:buyByVacco
 Fri, 31 Aug 2018 16:27:02  INFO test_api.py test_api [ line:40 ] 接口请求data:{"periodic":"false",
"subamt":"100",
"honourdate":"20180720",
"baseyield":"0.0850",
"yield":"0.0070",
"addyield":"0.4",
"exyield":"0",
"exActivityFlag":"1",
"couponid":"20180710153894369120709111860",
"interestbegindate":"20180710",
"interestenddate":"20180719",
"serialno":"201808311626320389Tb",
"custno":"1538943691",
"apkind":"012","subapkind":"012001",
"apdt":"20180710",
"aptm":"134256",
"workdate":"20180710",
"tradeacco":"000621718538943694",
"taaccountid":"475A7D638769350988",
"tano":"47","productid":"732908",
"sharetype":"A","accptmd":"1",
"branchcode":"247000","distributorcode":"247"}
 Fri, 31 Aug 2018 16:27:02  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:27:02  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:27:02  INFO test_api.py test_api [ line:56 ] =====开始比对检验返回结果=======
 Fri, 31 Aug 2018 16:27:02  INFO test_api.py test_api [ line:57 ] 全值匹配模式
 Fri, 31 Aug 2018 16:27:02  INFO test_api.py test_api [ line:60 ] 结果比对成功，测试用例通过
 Fri, 31 Aug 2018 16:27:02  INFO test_api.py test_api [ line:81 ] 数据库里存在符合预期条件的数据,测试通过:()
 Fri, 31 Aug 2018 16:27:02  INFO test_api.py test_api [ line:84 ] ================结束一次接口请求===========
 Fri, 31 Aug 2018 16:27:02  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:27:02  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【调用轮询接口处理交易请求】
 Fri, 31 Aug 2018 16:27:02  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.ProductCoreTradeService
 Fri, 31 Aug 2018 16:27:02  INFO test_api.py test_api [ line:39 ] 接口请求method:tradeContinueTask
 Fri, 31 Aug 2018 16:27:02  INFO test_api.py test_api [ line:40 ] 接口请求data:""
 Fri, 31 Aug 2018 16:27:05  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {}, 'errCode': '0000', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '申请成功', 'tradeCode': None, 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:27:05  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:None
 Fri, 31 Aug 2018 16:27:05  INFO test_api.py test_api [ line:81 ] 数据库里存在符合预期条件的数据,测试通过:()
 Fri, 31 Aug 2018 16:27:05  INFO test_api.py test_api [ line:81 ] 数据库里存在符合预期条件的数据,测试通过:()
 Fri, 31 Aug 2018 16:27:05  INFO test_api.py test_api [ line:84 ] ================结束一次接口请求===========
 Fri, 31 Aug 2018 16:27:05  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:27:05  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【余额购买】购买月月盈产品
 Fri, 31 Aug 2018 16:27:05  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.ProductCoreTradeService
 Fri, 31 Aug 2018 16:27:05  INFO test_api.py test_api [ line:39 ] 接口请求method:buyByVacco
 Fri, 31 Aug 2018 16:27:05  INFO test_api.py test_api [ line:40 ] 接口请求data:{
"subamt":"10",
"honourdate":"20180604",
"baseyield":"0.0828",
"yield":"0.0238",
"addyield":"0",
"interestbegindate":"20180525",
"interestenddate":"20180603",
"periodic":"true",
"cycleDay":"20",
"transferDay":"2",
"serialno":"201808311626320227Qg",
"custno":"1604568937",
"apkind":"012","subapkind":"012001",
"apdt":"20180525",
"aptm":"134256",
"workdate":"20180525",
"tradeacco":"001035098604568940",
"taaccountid":"475AFA3D7B64069928",
"tano":"47","productid":"8802",
"sharetype":"A","accptmd":"1",
"branchcode":"247000","distributorcode":"247"}
 Fri, 31 Aug 2018 16:27:05  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:27:05  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:27:05  INFO test_api.py test_api [ line:56 ] =====开始比对检验返回结果=======
 Fri, 31 Aug 2018 16:27:05  INFO test_api.py test_api [ line:57 ] 全值匹配模式
 Fri, 31 Aug 2018 16:27:05  INFO test_api.py test_api [ line:60 ] 结果比对成功，测试用例通过
 Fri, 31 Aug 2018 16:27:05  INFO test_api.py test_api [ line:81 ] 数据库里存在符合预期条件的数据,测试通过:()
 Fri, 31 Aug 2018 16:27:05  INFO test_api.py test_api [ line:84 ] ================结束一次接口请求===========
 Fri, 31 Aug 2018 16:27:05  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:27:05  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【调用轮询接口处理交易请求】
 Fri, 31 Aug 2018 16:27:05  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.ProductCoreTradeService
 Fri, 31 Aug 2018 16:27:05  INFO test_api.py test_api [ line:39 ] 接口请求method:tradeContinueTask
 Fri, 31 Aug 2018 16:27:05  INFO test_api.py test_api [ line:40 ] 接口请求data:""
 Fri, 31 Aug 2018 16:27:09  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {}, 'errCode': '0000', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '申请成功', 'tradeCode': None, 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:27:09  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:None
 Fri, 31 Aug 2018 16:27:09  INFO test_api.py test_api [ line:81 ] 数据库里存在符合预期条件的数据,测试通过:()
 Fri, 31 Aug 2018 16:27:09  INFO test_api.py test_api [ line:81 ] 数据库里存在符合预期条件的数据,测试通过:()
 Fri, 31 Aug 2018 16:27:09  INFO test_api.py test_api [ line:84 ] ================结束一次接口请求===========
 Fri, 31 Aug 2018 16:27:09  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:27:09  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【余额购买】购买季季升产品
 Fri, 31 Aug 2018 16:27:09  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.ProductCoreTradeService
 Fri, 31 Aug 2018 16:27:09  INFO test_api.py test_api [ line:39 ] 接口请求method:buyByVacco
 Fri, 31 Aug 2018 16:27:09  INFO test_api.py test_api [ line:40 ] 接口请求data:{
"subamt":"10",
"honourdate":"20180604",
"baseyield":"0.0828",
"yield":"0.0238",
"addyield":"0",
"interestbegindate":"20180525",
"interestenddate":"20180603",
"periodic":"true",
"cycleDay":"20",
"transferDay":"2",
"serialno":"201808311626320986QH",
"custno":"1604568937",
"apkind":"012","subapkind":"012001",
"apdt":"20180525",
"aptm":"134256",
"workdate":"20180525",
"tradeacco":"001035098604568940",
"taaccountid":"475AFA3D7B64069928",
"tano":"47","productid":"8901",
"sharetype":"A","accptmd":"1",
"branchcode":"247000","distributorcode":"247"}
 Fri, 31 Aug 2018 16:27:09  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:27:09  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:27:09  INFO test_api.py test_api [ line:56 ] =====开始比对检验返回结果=======
 Fri, 31 Aug 2018 16:27:09  INFO test_api.py test_api [ line:57 ] 全值匹配模式
 Fri, 31 Aug 2018 16:27:09  INFO test_api.py test_api [ line:60 ] 结果比对成功，测试用例通过
 Fri, 31 Aug 2018 16:27:09  INFO test_api.py test_api [ line:81 ] 数据库里存在符合预期条件的数据,测试通过:()
 Fri, 31 Aug 2018 16:27:09  INFO test_api.py test_api [ line:84 ] ================结束一次接口请求===========
 Fri, 31 Aug 2018 16:27:09  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:27:09  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【调用轮询接口处理交易请求】
 Fri, 31 Aug 2018 16:27:09  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.ProductCoreTradeService
 Fri, 31 Aug 2018 16:27:09  INFO test_api.py test_api [ line:39 ] 接口请求method:tradeContinueTask
 Fri, 31 Aug 2018 16:27:09  INFO test_api.py test_api [ line:40 ] 接口请求data:""
 Fri, 31 Aug 2018 16:27:13  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {}, 'errCode': '0000', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '申请成功', 'tradeCode': None, 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:27:13  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:None
 Fri, 31 Aug 2018 16:27:13  INFO test_api.py test_api [ line:81 ] 数据库里存在符合预期条件的数据,测试通过:()
 Fri, 31 Aug 2018 16:27:13  INFO test_api.py test_api [ line:81 ] 数据库里存在符合预期条件的数据,测试通过:()
 Fri, 31 Aug 2018 16:27:13  INFO test_api.py test_api [ line:84 ] ================结束一次接口请求===========
 Fri, 31 Aug 2018 16:27:13  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:27:13  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【余额购买】购买双季智选产品
 Fri, 31 Aug 2018 16:27:13  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.ProductCoreTradeService
 Fri, 31 Aug 2018 16:27:13  INFO test_api.py test_api [ line:39 ] 接口请求method:buyByVacco
 Fri, 31 Aug 2018 16:27:13  INFO test_api.py test_api [ line:40 ] 接口请求data:{
"subamt":"10",
"honourdate":"20180604",
"baseyield":"0.0828",
"yield":"0.0238",
"addyield":"0",
"interestbegindate":"20180525",
"interestenddate":"20180603",
"periodic":"true",
"cycleDay":"20",
"transferDay":"2",
"serialno":"201808311626320524RQ",
"custno":"1604568937",
"apkind":"012","subapkind":"012001",
"apdt":"20180525",
"aptm":"134256",
"workdate":"20180525",
"tradeacco":"001035098604568940",
"taaccountid":"475AFA3D7B64069928",
"tano":"47","productid":"8903",
"sharetype":"A","accptmd":"1",
"branchcode":"247000","distributorcode":"247"}
 Fri, 31 Aug 2018 16:27:13  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:27:13  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:27:13  INFO test_api.py test_api [ line:56 ] =====开始比对检验返回结果=======
 Fri, 31 Aug 2018 16:27:13  INFO test_api.py test_api [ line:57 ] 全值匹配模式
 Fri, 31 Aug 2018 16:27:13  INFO test_api.py test_api [ line:60 ] 结果比对成功，测试用例通过
 Fri, 31 Aug 2018 16:27:13  INFO test_api.py test_api [ line:81 ] 数据库里存在符合预期条件的数据,测试通过:()
 Fri, 31 Aug 2018 16:27:13  INFO test_api.py test_api [ line:84 ] ================结束一次接口请求===========
 Fri, 31 Aug 2018 16:27:13  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:27:13  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【调用轮询接口处理交易请求】
 Fri, 31 Aug 2018 16:27:13  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.ProductCoreTradeService
 Fri, 31 Aug 2018 16:27:13  INFO test_api.py test_api [ line:39 ] 接口请求method:tradeContinueTask
 Fri, 31 Aug 2018 16:27:13  INFO test_api.py test_api [ line:40 ] 接口请求data:""
 Fri, 31 Aug 2018 16:27:17  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {}, 'errCode': '0000', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '申请成功', 'tradeCode': None, 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:27:17  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:None
 Fri, 31 Aug 2018 16:27:17  INFO test_api.py test_api [ line:81 ] 数据库里存在符合预期条件的数据,测试通过:()
 Fri, 31 Aug 2018 16:27:17  INFO test_api.py test_api [ line:81 ] 数据库里存在符合预期条件的数据,测试通过:()
 Fri, 31 Aug 2018 16:27:17  INFO test_api.py test_api [ line:84 ] ================结束一次接口请求===========
 Fri, 31 Aug 2018 16:27:17  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:27:17  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【余额购买】购买四季甄选产品
 Fri, 31 Aug 2018 16:27:17  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.ProductCoreTradeService
 Fri, 31 Aug 2018 16:27:17  INFO test_api.py test_api [ line:39 ] 接口请求method:buyByVacco
 Fri, 31 Aug 2018 16:27:17  INFO test_api.py test_api [ line:40 ] 接口请求data:{
"subamt":"10",
"honourdate":"20180604",
"baseyield":"0.0828",
"yield":"0.0238",
"addyield":"0",
"interestbegindate":"20180525",
"interestenddate":"20180603",
"periodic":"true",
"cycleDay":"20",
"transferDay":"2",
"serialno":"201808311626320445MJ",
"custno":"1604568937",
"apkind":"012","subapkind":"012001",
"apdt":"20180525",
"aptm":"134256",
"workdate":"20180525",
"tradeacco":"001035098604568940",
"taaccountid":"475AFA3D7B64069928",
"tano":"47","productid":"8904",
"sharetype":"A","accptmd":"1",
"branchcode":"247000","distributorcode":"247"}
 Fri, 31 Aug 2018 16:27:18  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:27:18  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:27:18  INFO test_api.py test_api [ line:56 ] =====开始比对检验返回结果=======
 Fri, 31 Aug 2018 16:27:18  INFO test_api.py test_api [ line:57 ] 全值匹配模式
 Fri, 31 Aug 2018 16:27:18  INFO test_api.py test_api [ line:60 ] 结果比对成功，测试用例通过
 Fri, 31 Aug 2018 16:27:18  INFO test_api.py test_api [ line:81 ] 数据库里存在符合预期条件的数据,测试通过:()
 Fri, 31 Aug 2018 16:27:18  INFO test_api.py test_api [ line:84 ] ================结束一次接口请求===========
 Fri, 31 Aug 2018 16:27:18  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:27:18  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【调用轮询接口处理交易请求】
 Fri, 31 Aug 2018 16:27:18  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.ProductCoreTradeService
 Fri, 31 Aug 2018 16:27:18  INFO test_api.py test_api [ line:39 ] 接口请求method:tradeContinueTask
 Fri, 31 Aug 2018 16:27:18  INFO test_api.py test_api [ line:40 ] 接口请求data:""
 Fri, 31 Aug 2018 16:27:22  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {}, 'errCode': '0000', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '申请成功', 'tradeCode': None, 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:27:22  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:None
 Fri, 31 Aug 2018 16:27:22  INFO test_api.py test_api [ line:81 ] 数据库里存在符合预期条件的数据,测试通过:()
 Fri, 31 Aug 2018 16:27:22  INFO test_api.py test_api [ line:81 ] 数据库里存在符合预期条件的数据,测试通过:()
 Fri, 31 Aug 2018 16:27:22  INFO test_api.py test_api [ line:84 ] ================结束一次接口请求===========
 Fri, 31 Aug 2018 16:27:22  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:27:22  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【余额购买】cusno不存在
 Fri, 31 Aug 2018 16:27:22  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.ProductCoreTradeService
 Fri, 31 Aug 2018 16:27:22  INFO test_api.py test_api [ line:39 ] 接口请求method:buyByVacco
 Fri, 31 Aug 2018 16:27:22  INFO test_api.py test_api [ line:40 ] 接口请求data:{
"subamt":"10",
"honourdate":"20180604",
"baseyield":"0.0828",
"yield":"0.0238",
"addyield":"0",
"interestbegindate":"20180525",
"interestenddate":"20180603",
"periodic":"true",
"cycleDay":"20",
"transferDay":"2",
"serialno":"201808311626320702Ke",
"custno":"1538967652ddddd",
"apkind":"012","subapkind":"012001",
"apdt":"20180525",
"aptm":"134256",
"workdate":"20180525",
"tradeacco":"001035098604568940",
"taaccountid":"475AFA3D7B64069928",
"tano":"47","productid":"732681",
"sharetype":"A","accptmd":"1",
"branchcode":"247000","distributorcode":"247"}
 Fri, 31 Aug 2018 16:27:22  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'F', 'tradeMsg': '查询客户信息结果为空或失败', 'errMsg': '申请成功', 'tradeCode': 'Q004', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:27:22  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'F', 'tradeMsg': '查询客户信息结果为空或失败', 'errMsg': '申请成功', 'tradeCode': 'Q004', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:27:22  INFO test_api.py test_api [ line:56 ] =====开始比对检验返回结果=======
 Fri, 31 Aug 2018 16:27:22  INFO test_api.py test_api [ line:57 ] 全值匹配模式
 Fri, 31 Aug 2018 16:27:22  INFO test_api.py test_api [ line:60 ] 结果比对成功，测试用例通过
 Fri, 31 Aug 2018 16:27:22  INFO test_api.py test_api [ line:81 ] 数据库里存在符合预期条件的数据,测试通过:()
 Fri, 31 Aug 2018 16:27:22  INFO test_api.py test_api [ line:84 ] ================结束一次接口请求===========
 Fri, 31 Aug 2018 16:27:22  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:27:22  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【余额购买】productid不存在
 Fri, 31 Aug 2018 16:27:22  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.ProductCoreTradeService
 Fri, 31 Aug 2018 16:27:22  INFO test_api.py test_api [ line:39 ] 接口请求method:buyByVacco
 Fri, 31 Aug 2018 16:27:22  INFO test_api.py test_api [ line:40 ] 接口请求data:{
"subamt":"10",
"honourdate":"20180604",
"baseyield":"0.0828",
"yield":"0.0238",
"addyield":"0",
"interestbegindate":"20180525",
"interestenddate":"20180603",
"serialno":"201808311626320325Co",
"custno":"1604568937",
"apkind":"012","subapkind":"012001",
"apdt":"20180525",
"aptm":"134256",
"workdate":"20180525",
"tradeacco":"001035098604568940",
"taaccountid":"475AFA3D7B64069928",
"tano":"47","productid":"732681123",
"sharetype":"A","accptmd":"1",
"branchcode":"247000","distributorcode":"247"}
 Fri, 31 Aug 2018 16:27:22  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'F', 'tradeMsg': '查询产品客户号结果为空或失败', 'errMsg': '申请成功', 'tradeCode': 'Q021', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:27:22  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'F', 'tradeMsg': '查询产品客户号结果为空或失败', 'errMsg': '申请成功', 'tradeCode': 'Q021', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:27:22  INFO test_api.py test_api [ line:56 ] =====开始比对检验返回结果=======
 Fri, 31 Aug 2018 16:27:22  INFO test_api.py test_api [ line:57 ] 全值匹配模式
 Fri, 31 Aug 2018 16:27:22  INFO test_api.py test_api [ line:60 ] 结果比对成功，测试用例通过
 Fri, 31 Aug 2018 16:27:22  INFO test_api.py test_api [ line:81 ] 数据库里存在符合预期条件的数据,测试通过:()
 Fri, 31 Aug 2018 16:27:22  INFO test_api.py test_api [ line:84 ] ================结束一次接口请求===========
 Fri, 31 Aug 2018 16:27:22  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:27:22  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【余额购买】渠道2-手机购买随心投产品成功
 Fri, 31 Aug 2018 16:27:22  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.ProductCoreTradeService
 Fri, 31 Aug 2018 16:27:22  INFO test_api.py test_api [ line:39 ] 接口请求method:buyByVacco
 Fri, 31 Aug 2018 16:27:22  INFO test_api.py test_api [ line:40 ] 接口请求data:{
"subamt":"10",
"honourdate":"20180604",
"baseyield":"0.0828",
"yield":"0.0238",
"addyield":"0",
"interestbegindate":"20180525",
"interestenddate":"20180603",
"serialno":"20180831162632018lh",
"custno":"1538967652",
"apkind":"012","subapkind":"012001",
"apdt":"20180525",
"aptm":"134256",
"workdate":"20180525",
"tradeacco":"000621718538967655",
"taaccountid":"475AE141EE07252223",
"tano":"47","productid":"732822",
"sharetype":"A","accptmd":"2",
"branchcode":"247000","distributorcode":"247"}
 Fri, 31 Aug 2018 16:27:22  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:27:22  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:27:22  INFO test_api.py test_api [ line:56 ] =====开始比对检验返回结果=======
 Fri, 31 Aug 2018 16:27:22  INFO test_api.py test_api [ line:57 ] 全值匹配模式
 Fri, 31 Aug 2018 16:27:22  INFO test_api.py test_api [ line:60 ] 结果比对成功，测试用例通过
 Fri, 31 Aug 2018 16:27:22  INFO test_api.py test_api [ line:81 ] 数据库里存在符合预期条件的数据,测试通过:()
 Fri, 31 Aug 2018 16:27:22  INFO test_api.py test_api [ line:84 ] ================结束一次接口请求===========
 Fri, 31 Aug 2018 16:27:22  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:27:22  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【调用轮询接口处理交易请求】
 Fri, 31 Aug 2018 16:27:22  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.ProductCoreTradeService
 Fri, 31 Aug 2018 16:27:22  INFO test_api.py test_api [ line:39 ] 接口请求method:tradeContinueTask
 Fri, 31 Aug 2018 16:27:22  INFO test_api.py test_api [ line:40 ] 接口请求data:""
 Fri, 31 Aug 2018 16:27:24  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {}, 'errCode': '0000', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '申请成功', 'tradeCode': None, 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:27:24  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:None
 Fri, 31 Aug 2018 16:27:24  INFO test_api.py test_api [ line:81 ] 数据库里存在符合预期条件的数据,测试通过:()
 Fri, 31 Aug 2018 16:27:24  INFO test_api.py test_api [ line:81 ] 数据库里存在符合预期条件的数据,测试通过:()
 Fri, 31 Aug 2018 16:27:24  INFO test_api.py test_api [ line:84 ] ================结束一次接口请求===========
 Fri, 31 Aug 2018 16:27:24  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:27:24  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【余额购买】渠道3-企业版购买随心投产品成功
 Fri, 31 Aug 2018 16:27:24  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.ProductCoreTradeService
 Fri, 31 Aug 2018 16:27:24  INFO test_api.py test_api [ line:39 ] 接口请求method:buyByVacco
 Fri, 31 Aug 2018 16:27:24  INFO test_api.py test_api [ line:40 ] 接口请求data:{
"subamt":"10",
"honourdate":"20180604",
"baseyield":"0.0828",
"yield":"0.0238",
"addyield":"0",
"interestbegindate":"20180525",
"interestenddate":"20180603",
"serialno":"201808311626320765WV",
"custno":"1538967652",
"apkind":"012","subapkind":"012001",
"apdt":"20180525",
"aptm":"134256",
"workdate":"20180525",
"tradeacco":"000621718538967655",
"taaccountid":"475AE141EE07252223",
"tano":"47","productid":"732681",
"sharetype":"A","accptmd":"3",
"branchcode":"247000","distributorcode":"247"}
 Fri, 31 Aug 2018 16:27:24  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:27:24  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:27:24  INFO test_api.py test_api [ line:56 ] =====开始比对检验返回结果=======
 Fri, 31 Aug 2018 16:27:24  INFO test_api.py test_api [ line:57 ] 全值匹配模式
 Fri, 31 Aug 2018 16:27:24  INFO test_api.py test_api [ line:60 ] 结果比对成功，测试用例通过
 Fri, 31 Aug 2018 16:27:24  INFO test_api.py test_api [ line:81 ] 数据库里存在符合预期条件的数据,测试通过:()
 Fri, 31 Aug 2018 16:27:24  INFO test_api.py test_api [ line:84 ] ================结束一次接口请求===========
 Fri, 31 Aug 2018 16:27:24  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:27:24  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【调用轮询接口处理交易请求】
 Fri, 31 Aug 2018 16:27:24  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.ProductCoreTradeService
 Fri, 31 Aug 2018 16:27:24  INFO test_api.py test_api [ line:39 ] 接口请求method:tradeContinueTask
 Fri, 31 Aug 2018 16:27:24  INFO test_api.py test_api [ line:40 ] 接口请求data:""
 Fri, 31 Aug 2018 16:27:25  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {}, 'errCode': '0000', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '申请成功', 'tradeCode': None, 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:27:25  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:None
 Fri, 31 Aug 2018 16:27:25  INFO test_api.py test_api [ line:81 ] 数据库里存在符合预期条件的数据,测试通过:()
 Fri, 31 Aug 2018 16:27:25  INFO test_api.py test_api [ line:81 ] 数据库里存在符合预期条件的数据,测试通过:()
 Fri, 31 Aug 2018 16:27:25  INFO test_api.py test_api [ line:84 ] ================结束一次接口请求===========
 Fri, 31 Aug 2018 16:27:25  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:27:25  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【组合卖出】双季产品开放日卖出申请
 Fri, 31 Aug 2018 16:27:25  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.ProductCoreTradeService
 Fri, 31 Aug 2018 16:27:25  INFO test_api.py test_api [ line:39 ] 接口请求method:sellToVacco
 Fri, 31 Aug 2018 16:27:25  INFO test_api.py test_api [ line:40 ] 接口请求data:{"refercapno":"5AE02D4E13F7bc16",
        "reemFlag":"0",
        "selltype":1,
        "periodic":"true",
        "mixProd":"true",
        "bigVCustno":"1597219229",
        "honourFlag":"1",
        "newFlag":"0",
        "partPayment":"false",
        "subquty":"100.00",
        "feetp":"07",
        "feemode":"1",
        "feevalue":"0.0",
        "serialno":"201808311626320404TD",
        "custno":"1538943691",
        "apkind":"014",
        "subapkind":"014001",
        "apdt":"20180831",
        "aptm":"113344",
        "workdate":"20180831",
        "tradeacco":"000621718538943694",
        "taaccountid":"475A7D638769350988",
        "tano":"47",
        "productid":"8903",
        "sharetype":"A",
        "accptmd":"1",
        "branchcode":"247000",
        "distributorcode":"247"}
 Fri, 31 Aug 2018 16:27:26  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'F', 'tradeMsg': '客户持有的该产品不在开放日之内', 'errMsg': '申请成功', 'tradeCode': 'B006', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:27:26  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:27:26  INFO test_api.py test_api [ line:56 ] =====开始比对检验返回结果=======
 Fri, 31 Aug 2018 16:27:26  INFO test_api.py test_api [ line:57 ] 全值匹配模式
 Fri, 31 Aug 2018 16:27:26  ERROR test_api.py test_api [ line:62 ] 全值结果比对失败原因为："{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'F', 'tradeMsg': '客户持有的该产品不在开放日之内', 'errMsg': '申请成功', 'tradeCode': 'B006', 'exObjFields': {}, 'key': None}" not found in "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}"
Traceback (most recent call last):
  File "H:\python3_apiTest\TestCases\test_api.py", line 59, in test_api
    self.assertIn(str(res),case_data["expected_data"])
  File "F:\python36\lib\unittest\case.py", line 1089, in assertIn
    self.fail(self._formatMessage(msg, standardMsg))
  File "F:\python36\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'F', 'tradeMsg': '客户持有的该产品不在开放日之内', 'errMsg': '申请成功', 'tradeCode': 'B006', 'exObjFields': {}, 'key': None}" not found in "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}"
 Fri, 31 Aug 2018 16:27:26  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:27:26  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【调用轮询接口处理交易请求】
 Fri, 31 Aug 2018 16:27:26  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.ProductCoreTradeService
 Fri, 31 Aug 2018 16:27:26  INFO test_api.py test_api [ line:39 ] 接口请求method:tradeContinueTask
 Fri, 31 Aug 2018 16:27:26  INFO test_api.py test_api [ line:40 ] 接口请求data:""
 Fri, 31 Aug 2018 16:27:27  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {}, 'errCode': '0000', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '申请成功', 'tradeCode': None, 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:27:27  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:None
 Fri, 31 Aug 2018 16:27:27  INFO test_api.py test_api [ line:81 ] 数据库里存在符合预期条件的数据,测试通过:()
 Fri, 31 Aug 2018 16:27:27  INFO test_api.py test_api [ line:84 ] ================结束一次接口请求===========
 Fri, 31 Aug 2018 16:27:27  INFO test_api.py test_api [ line:88 ] 需要等待时间60s发起后续请求
 Fri, 31 Aug 2018 16:27:57  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:27:57  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【卖出后续接口】双季产品开放日卖出成功
 Fri, 31 Aug 2018 16:27:57  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.ProductCoreTradeService
 Fri, 31 Aug 2018 16:27:57  INFO test_api.py test_api [ line:39 ] 接口请求method:tradeContinue
 Fri, 31 Aug 2018 16:27:57  INFO test_api.py test_api [ line:40 ] 接口请求data:{"serialno":"201808311540580226JT","isSend":"1",'extFields':{"errCode":"0000", "errMsg":"交易成功", "tranSt":"Y"}}
 Fri, 31 Aug 2018 16:27:57  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {}, 'errCode': 'Q015', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '查询交易原单结果为空或失败', 'tradeCode': None, 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:27:57  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功！', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:27:57  INFO test_api.py test_api [ line:56 ] =====开始比对检验返回结果=======
 Fri, 31 Aug 2018 16:27:57  INFO test_api.py test_api [ line:57 ] 全值匹配模式
 Fri, 31 Aug 2018 16:27:57  ERROR test_api.py test_api [ line:62 ] 全值结果比对失败原因为："{'extFields': {}, 'errCode': 'Q015', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '查询交易原单结果为空或失败', 'tradeCode': None, 'exObjFields': {}, 'key': None}" not found in "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功！', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}"
Traceback (most recent call last):
  File "H:\python3_apiTest\TestCases\test_api.py", line 59, in test_api
    self.assertIn(str(res),case_data["expected_data"])
  File "F:\python36\lib\unittest\case.py", line 1089, in assertIn
    self.fail(self._formatMessage(msg, standardMsg))
  File "F:\python36\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: "{'extFields': {}, 'errCode': 'Q015', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '查询交易原单结果为空或失败', 'tradeCode': None, 'exObjFields': {}, 'key': None}" not found in "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功！', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}"
 Fri, 31 Aug 2018 16:27:57  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:27:57  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【组合卖出】双季产品开放日卖出申请
 Fri, 31 Aug 2018 16:27:57  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.ProductCoreTradeService
 Fri, 31 Aug 2018 16:27:57  INFO test_api.py test_api [ line:39 ] 接口请求method:sellToVacco
 Fri, 31 Aug 2018 16:27:57  INFO test_api.py test_api [ line:40 ] 接口请求data:{"refercapno":"5AE02D4E13F7bc16",
        "reemFlag":"0",
        "selltype":1,
        "periodic":"true",
        "mixProd":"true",
        "bigVCustno":"1597219229",
        "honourFlag":"1",
        "newFlag":"0",
        "partPayment":"false",
        "subquty":"100.00",
        "feetp":"07",
        "feemode":"1",
        "feevalue":"0.0",
        "serialno":"201808311626320197nF",
        "custno":"1538943691",
        "apkind":"014",
        "subapkind":"014001",
        "apdt":"20180831",
        "aptm":"113344",
        "workdate":"20180831",
        "tradeacco":"000621718538943694",
        "taaccountid":"475A7D638769350988",
        "tano":"47",
        "productid":"8903",
        "sharetype":"A",
        "accptmd":"1",
        "branchcode":"247000",
        "distributorcode":"247"}
 Fri, 31 Aug 2018 16:27:57  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'F', 'tradeMsg': '客户持有的该产品不在开放日之内', 'errMsg': '申请成功', 'tradeCode': 'B006', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:27:57  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:27:57  INFO test_api.py test_api [ line:56 ] =====开始比对检验返回结果=======
 Fri, 31 Aug 2018 16:27:57  INFO test_api.py test_api [ line:57 ] 全值匹配模式
 Fri, 31 Aug 2018 16:27:57  ERROR test_api.py test_api [ line:62 ] 全值结果比对失败原因为："{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'F', 'tradeMsg': '客户持有的该产品不在开放日之内', 'errMsg': '申请成功', 'tradeCode': 'B006', 'exObjFields': {}, 'key': None}" not found in "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}"
Traceback (most recent call last):
  File "H:\python3_apiTest\TestCases\test_api.py", line 59, in test_api
    self.assertIn(str(res),case_data["expected_data"])
  File "F:\python36\lib\unittest\case.py", line 1089, in assertIn
    self.fail(self._formatMessage(msg, standardMsg))
  File "F:\python36\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'F', 'tradeMsg': '客户持有的该产品不在开放日之内', 'errMsg': '申请成功', 'tradeCode': 'B006', 'exObjFields': {}, 'key': None}" not found in "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}"
 Fri, 31 Aug 2018 16:27:57  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:27:57  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【调用轮询接口处理交易请求】
 Fri, 31 Aug 2018 16:27:57  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.ProductCoreTradeService
 Fri, 31 Aug 2018 16:27:57  INFO test_api.py test_api [ line:39 ] 接口请求method:tradeContinueTask
 Fri, 31 Aug 2018 16:27:57  INFO test_api.py test_api [ line:40 ] 接口请求data:""
 Fri, 31 Aug 2018 16:27:58  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {}, 'errCode': '0000', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '申请成功', 'tradeCode': None, 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:27:58  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:None
 Fri, 31 Aug 2018 16:27:58  INFO test_api.py test_api [ line:81 ] 数据库里存在符合预期条件的数据,测试通过:()
 Fri, 31 Aug 2018 16:27:58  INFO test_api.py test_api [ line:84 ] ================结束一次接口请求===========
 Fri, 31 Aug 2018 16:27:58  INFO test_api.py test_api [ line:88 ] 需要等待时间60s发起后续请求
 Fri, 31 Aug 2018 16:28:28  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:28:28  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【卖出后续接口】双季产品开放日卖出失败
 Fri, 31 Aug 2018 16:28:28  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.ProductCoreTradeService
 Fri, 31 Aug 2018 16:28:28  INFO test_api.py test_api [ line:39 ] 接口请求method:tradeContinue
 Fri, 31 Aug 2018 16:28:28  INFO test_api.py test_api [ line:40 ] 接口请求data:{"serialno":"201808311540580746wT",'extFields':{"errCode":"0001", "errMsg":"交易失败", "tranSt":"F"}}
 Fri, 31 Aug 2018 16:28:28  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {}, 'errCode': 'Q015', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '查询交易原单结果为空或失败', 'tradeCode': None, 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:28:28  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'F'.* 'errMsg': '申请成功', 'tradeCode': '0001', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:28:28  INFO test_api.py test_api [ line:65 ] =====开始比对检验返回结果=======
 Fri, 31 Aug 2018 16:28:28  INFO test_api.py test_api [ line:66 ] 正则表达式匹配模式
 Fri, 31 Aug 2018 16:28:28  ERROR test_api.py test_api [ line:71 ] 正则结果比对失败原因为;unexpectedly None
Traceback (most recent call last):
  File "H:\python3_apiTest\TestCases\test_api.py", line 68, in test_api
    self.assertIsNotNone(re.search(case_data["expected_data"],str(res)))
  File "F:\python36\lib\unittest\case.py", line 1239, in assertIsNotNone
    self.fail(self._formatMessage(msg, standardMsg))
  File "F:\python36\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: unexpectedly None
 Fri, 31 Aug 2018 16:28:28  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:28:28  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【组合卖出】双季产品提前卖出申请
 Fri, 31 Aug 2018 16:28:28  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.ProductCoreTradeService
 Fri, 31 Aug 2018 16:28:28  INFO test_api.py test_api [ line:39 ] 接口请求method:sellToVacco
 Fri, 31 Aug 2018 16:28:28  INFO test_api.py test_api [ line:40 ] 接口请求data:{"refercapno":"5B06227E029Dbc36",
        "reemFlag":"1",
        "selltype":1,
        "periodic":"true",
        "mixProd":"true",
        "bigVCustno":"1597219229",
        "honourFlag":"1",
        "newFlag":"0",
        "partPayment":"false",
        "subquty":"100.00",
        "feetp":"07",
        "feemode":"1",
        "feevalue":"0.01",
        "serialno":"201808311626320714kH",
        "custno":"1538943691",
        "apkind":"014",
        "subapkind":"014001",
        "apdt":"20180722",
        "aptm":"113344",
        "workdate":"20180722",
        "tradeacco":"000621718538943694",
        "taaccountid":"475A7D638769350988",
        "tano":"47",
        "productid":"8903",
        "sharetype":"A",
        "accptmd":"1",
        "branchcode":"247000",
        "distributorcode":"247"}
 Fri, 31 Aug 2018 16:28:28  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:28:28  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:28:28  INFO test_api.py test_api [ line:56 ] =====开始比对检验返回结果=======
 Fri, 31 Aug 2018 16:28:28  INFO test_api.py test_api [ line:57 ] 全值匹配模式
 Fri, 31 Aug 2018 16:28:28  INFO test_api.py test_api [ line:60 ] 结果比对成功，测试用例通过
 Fri, 31 Aug 2018 16:28:28  INFO test_api.py test_api [ line:81 ] 数据库里存在符合预期条件的数据,测试通过:()
 Fri, 31 Aug 2018 16:28:28  INFO test_api.py test_api [ line:84 ] ================结束一次接口请求===========
 Fri, 31 Aug 2018 16:28:28  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:28:28  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【调用轮询接口处理交易请求】
 Fri, 31 Aug 2018 16:28:28  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.ProductCoreTradeService
 Fri, 31 Aug 2018 16:28:28  INFO test_api.py test_api [ line:39 ] 接口请求method:tradeContinueTask
 Fri, 31 Aug 2018 16:28:28  INFO test_api.py test_api [ line:40 ] 接口请求data:""
 Fri, 31 Aug 2018 16:28:30  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {}, 'errCode': '0000', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '申请成功', 'tradeCode': None, 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:28:30  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:None
 Fri, 31 Aug 2018 16:28:30  INFO test_api.py test_api [ line:81 ] 数据库里存在符合预期条件的数据,测试通过:()
 Fri, 31 Aug 2018 16:28:30  INFO test_api.py test_api [ line:84 ] ================结束一次接口请求===========
 Fri, 31 Aug 2018 16:28:30  INFO test_api.py test_api [ line:88 ] 需要等待时间60s发起后续请求
 Fri, 31 Aug 2018 16:29:00  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:29:00  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【卖出后续接口】双季产品提前卖出成功
 Fri, 31 Aug 2018 16:29:00  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.ProductCoreTradeService
 Fri, 31 Aug 2018 16:29:00  INFO test_api.py test_api [ line:39 ] 接口请求method:tradeContinue
 Fri, 31 Aug 2018 16:29:00  INFO test_api.py test_api [ line:40 ] 接口请求data:{"serialno":"201808311540580795yN","isSend":"1",'extFields':{"errCode":"0000", "errMsg":"交易成功", "tranSt":"Y"}}
 Fri, 31 Aug 2018 16:29:00  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {}, 'errCode': 'Q015', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '查询交易原单结果为空或失败', 'tradeCode': None, 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:29:00  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功！', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:29:00  INFO test_api.py test_api [ line:56 ] =====开始比对检验返回结果=======
 Fri, 31 Aug 2018 16:29:00  INFO test_api.py test_api [ line:57 ] 全值匹配模式
 Fri, 31 Aug 2018 16:29:00  ERROR test_api.py test_api [ line:62 ] 全值结果比对失败原因为："{'extFields': {}, 'errCode': 'Q015', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '查询交易原单结果为空或失败', 'tradeCode': None, 'exObjFields': {}, 'key': None}" not found in "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功！', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}"
Traceback (most recent call last):
  File "H:\python3_apiTest\TestCases\test_api.py", line 59, in test_api
    self.assertIn(str(res),case_data["expected_data"])
  File "F:\python36\lib\unittest\case.py", line 1089, in assertIn
    self.fail(self._formatMessage(msg, standardMsg))
  File "F:\python36\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: "{'extFields': {}, 'errCode': 'Q015', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '查询交易原单结果为空或失败', 'tradeCode': None, 'exObjFields': {}, 'key': None}" not found in "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功！', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}"
 Fri, 31 Aug 2018 16:29:00  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:29:00  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【组合卖出】双季产品提前卖出申请
 Fri, 31 Aug 2018 16:29:00  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.ProductCoreTradeService
 Fri, 31 Aug 2018 16:29:00  INFO test_api.py test_api [ line:39 ] 接口请求method:sellToVacco
 Fri, 31 Aug 2018 16:29:00  INFO test_api.py test_api [ line:40 ] 接口请求data:{"refercapno":"5B06227E029Dbc36",
        "reemFlag":"1",
        "selltype":1,
        "periodic":"true",
        "mixProd":"true",
        "bigVCustno":"1597219229",
        "honourFlag":"1",
        "newFlag":"0",
        "partPayment":"false",
        "subquty":"100.00",
        "feetp":"07",
        "feemode":"1",
        "feevalue":"0.01",
        "serialno":"201808311626320288dp",
        "custno":"1538943691",
        "apkind":"014",
        "subapkind":"014001",
        "apdt":"20180722",
        "aptm":"113344",
        "workdate":"20180722",
        "tradeacco":"000621718538943694",
        "taaccountid":"475A7D638769350988",
        "tano":"47",
        "productid":"8903",
        "sharetype":"A",
        "accptmd":"1",
        "branchcode":"247000",
        "distributorcode":"247"}
 Fri, 31 Aug 2018 16:29:00  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:29:00  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:29:00  INFO test_api.py test_api [ line:56 ] =====开始比对检验返回结果=======
 Fri, 31 Aug 2018 16:29:00  INFO test_api.py test_api [ line:57 ] 全值匹配模式
 Fri, 31 Aug 2018 16:29:00  INFO test_api.py test_api [ line:60 ] 结果比对成功，测试用例通过
 Fri, 31 Aug 2018 16:29:00  INFO test_api.py test_api [ line:81 ] 数据库里存在符合预期条件的数据,测试通过:()
 Fri, 31 Aug 2018 16:29:00  INFO test_api.py test_api [ line:84 ] ================结束一次接口请求===========
 Fri, 31 Aug 2018 16:29:00  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:29:00  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【调用轮询接口处理交易请求】
 Fri, 31 Aug 2018 16:29:00  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.ProductCoreTradeService
 Fri, 31 Aug 2018 16:29:00  INFO test_api.py test_api [ line:39 ] 接口请求method:tradeContinueTask
 Fri, 31 Aug 2018 16:29:00  INFO test_api.py test_api [ line:40 ] 接口请求data:""
 Fri, 31 Aug 2018 16:29:01  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {}, 'errCode': '0000', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '申请成功', 'tradeCode': None, 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:29:01  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:None
 Fri, 31 Aug 2018 16:29:01  INFO test_api.py test_api [ line:81 ] 数据库里存在符合预期条件的数据,测试通过:()
 Fri, 31 Aug 2018 16:29:01  INFO test_api.py test_api [ line:84 ] ================结束一次接口请求===========
 Fri, 31 Aug 2018 16:29:01  INFO test_api.py test_api [ line:88 ] 需要等待时间60s发起后续请求
 Fri, 31 Aug 2018 16:29:31  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:29:31  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【卖出后续接口】双季产品开放日卖出失败
 Fri, 31 Aug 2018 16:29:31  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.ProductCoreTradeService
 Fri, 31 Aug 2018 16:29:31  INFO test_api.py test_api [ line:39 ] 接口请求method:tradeContinue
 Fri, 31 Aug 2018 16:29:31  INFO test_api.py test_api [ line:40 ] 接口请求data:{"serialno":"201808311540580288cL",'extFields':{"errCode":"0001", "errMsg":"交易失败", "tranSt":"F"}}
 Fri, 31 Aug 2018 16:29:31  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {}, 'errCode': 'Q015', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '查询交易原单结果为空或失败', 'tradeCode': None, 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:29:31  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'F'.* 'errMsg': '申请成功', 'tradeCode': '0001', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:29:31  INFO test_api.py test_api [ line:65 ] =====开始比对检验返回结果=======
 Fri, 31 Aug 2018 16:29:31  INFO test_api.py test_api [ line:66 ] 正则表达式匹配模式
 Fri, 31 Aug 2018 16:29:31  ERROR test_api.py test_api [ line:71 ] 正则结果比对失败原因为;unexpectedly None
Traceback (most recent call last):
  File "H:\python3_apiTest\TestCases\test_api.py", line 68, in test_api
    self.assertIsNotNone(re.search(case_data["expected_data"],str(res)))
  File "F:\python36\lib\unittest\case.py", line 1239, in assertIsNotNone
    self.fail(self._formatMessage(msg, standardMsg))
  File "F:\python36\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: unexpectedly None
 Fri, 31 Aug 2018 16:29:31  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:29:31  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【组合卖出】双季产品不在开放日卖出
 Fri, 31 Aug 2018 16:29:31  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.ProductCoreTradeService
 Fri, 31 Aug 2018 16:29:31  INFO test_api.py test_api [ line:39 ] 接口请求method:sellToVacco
 Fri, 31 Aug 2018 16:29:31  INFO test_api.py test_api [ line:40 ] 接口请求data:{"refercapno":"59A65428006Cbc64",
        "reemFlag":"0",
        "selltype":1,
        "periodic":"true",
        "mixProd":"true",
        "bigVCustno":"1503257540",
        "honourFlag":"1",
        "newFlag":"0",
        "partPayment":"true",
        "subquty":"10",
        "serialno":"201808311626320530VC",
        "custno":"1538747953",
        "apkind":"142",
        "subapkind":"142001",
        "apdt":"20180531",
        "aptm":"113242",
        "workdate":"20180531",
        "tradeacco":"000621718538747956",
        "taaccountid":"4759A61C6F83922488",
        "tano":"47",
        "productid":"8903",
        "sharetype":"A",
        "accptmd":"1",
        "branchcode":"247000",
        "distributorcode":"247"}
 Fri, 31 Aug 2018 16:29:32  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'F', 'tradeMsg': '客户持有的该产品不在开放日之内', 'errMsg': '申请成功', 'tradeCode': 'B006', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:29:32  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'F', 'tradeMsg': '客户持有的该产品不在开放日之内', 'errMsg': '申请成功', 'tradeCode': 'B006', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:29:32  INFO test_api.py test_api [ line:56 ] =====开始比对检验返回结果=======
 Fri, 31 Aug 2018 16:29:32  INFO test_api.py test_api [ line:57 ] 全值匹配模式
 Fri, 31 Aug 2018 16:29:32  INFO test_api.py test_api [ line:60 ] 结果比对成功，测试用例通过
 Fri, 31 Aug 2018 16:29:32  INFO test_api.py test_api [ line:81 ] 数据库里存在符合预期条件的数据,测试通过:()
 Fri, 31 Aug 2018 16:29:32  INFO test_api.py test_api [ line:81 ] 数据库里存在符合预期条件的数据,测试通过:()
 Fri, 31 Aug 2018 16:29:32  INFO test_api.py test_api [ line:84 ] ================结束一次接口请求===========
 Fri, 31 Aug 2018 16:29:32  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:29:32  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【散标转让】散标转让申请
 Fri, 31 Aug 2018 16:29:32  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.ProductCoreTranService
 Fri, 31 Aug 2018 16:29:32  INFO test_api.py test_api [ line:39 ] 接口请求method:transferApp
 Fri, 31 Aug 2018 16:29:32  INFO test_api.py test_api [ line:40 ] 接口请求data:{
"serialno":"201808311626320996EW",
"subquty":"10.00",
"custno":"1538943691",
"apkind":"055",
"subapkind":"055001",
"apdt":"20180726",
"aptm":"161324",
"workdate":"20180726",
"sharetype":"A",
"accptmd":"1",
"branchcode":"247000",
"distributorcode":"247",
"referno":"5B5980AB002Cbc84",
"tradeacco":"000621718538943694",
"taaccountid":"475A7D638769350988",
"productid":"732937",
"tano":"47",
"feetp":"06",
"feemode":"1",
"feevalue":"0.002",
"baseyield":"0.0900",
"yield":"0.0900",
"addyield":"0.0000",
"exyield":"0.0000",
"interestbegindate":"20180726",
"interestenddate":"20181016",
"selltype":1}
 Fri, 31 Aug 2018 16:29:32  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {}, 'errCode': '0000', 'errMsg': '申请成功', 'exObjFields': {}, 'key': None, 'status': 'Y'}
 Fri, 31 Aug 2018 16:29:32  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:{'extFields': {}, 'errCode': '0000', 'errMsg': '申请成功', 'exObjFields': {}, 'key': None, 'status': 'Y'}
 Fri, 31 Aug 2018 16:29:32  INFO test_api.py test_api [ line:56 ] =====开始比对检验返回结果=======
 Fri, 31 Aug 2018 16:29:32  INFO test_api.py test_api [ line:57 ] 全值匹配模式
 Fri, 31 Aug 2018 16:29:32  INFO test_api.py test_api [ line:60 ] 结果比对成功，测试用例通过
 Fri, 31 Aug 2018 16:29:32  INFO test_api.py test_api [ line:81 ] 数据库里存在符合预期条件的数据,测试通过:()
 Fri, 31 Aug 2018 16:29:32  INFO test_api.py test_api [ line:84 ] ================结束一次接口请求===========
 Fri, 31 Aug 2018 16:29:32  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:29:32  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【散标转让】散标转让购买申请
 Fri, 31 Aug 2018 16:29:32  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.ProductCoreTradeService
 Fri, 31 Aug 2018 16:29:32  INFO test_api.py test_api [ line:39 ] 接口请求method:transferByVacco
 Fri, 31 Aug 2018 16:29:32  INFO test_api.py test_api [ line:40 ] 接口请求data:{
"referno":"201808311540590457wa",
"subquty":"10",
"honourdate":"20181017",
"baseyield":"0.0900",
"yield":"0.0900",
"addyield":"0.0000",
"interestbegindate":"20180726",
"interestenddate":"20181016",
"exyield":"0",
"serialno":"20180831162632059iV",
"custno":"1538943811",
"apkind":"056",
"subapkind":"056001",
"apdt":"20180726",
"aptm":"134031",
"workdate":"20180726",
"tradeacco":"000621718538943814",
"taaccountid":"475A7FB19598436383",
"tano":"47",
"productid":"732937",
"sharetype":"A",
"accptmd":"1",
"branchcode":"247000",
"distributorcode":"247"}
 Fri, 31 Aug 2018 16:29:32  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'F', 'tradeMsg': '查询交易原单结果为空或失败', 'errMsg': '申请成功', 'tradeCode': 'Q015', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:29:32  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:29:32  INFO test_api.py test_api [ line:56 ] =====开始比对检验返回结果=======
 Fri, 31 Aug 2018 16:29:32  INFO test_api.py test_api [ line:57 ] 全值匹配模式
 Fri, 31 Aug 2018 16:29:32  ERROR test_api.py test_api [ line:62 ] 全值结果比对失败原因为："{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'F', 'tradeMsg': '查询交易原单结果为空或失败', 'errMsg': '申请成功', 'tradeCode': 'Q015', 'exObjFields': {}, 'key': None}" not found in "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}"
Traceback (most recent call last):
  File "H:\python3_apiTest\TestCases\test_api.py", line 59, in test_api
    self.assertIn(str(res),case_data["expected_data"])
  File "F:\python36\lib\unittest\case.py", line 1089, in assertIn
    self.fail(self._formatMessage(msg, standardMsg))
  File "F:\python36\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'F', 'tradeMsg': '查询交易原单结果为空或失败', 'errMsg': '申请成功', 'tradeCode': 'Q015', 'exObjFields': {}, 'key': None}" not found in "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}"
 Fri, 31 Aug 2018 16:29:32  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:29:32  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【调用轮询接口处理交易请求】
 Fri, 31 Aug 2018 16:29:32  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.ProductCoreTradeService
 Fri, 31 Aug 2018 16:29:32  INFO test_api.py test_api [ line:39 ] 接口请求method:tradeContinueTask
 Fri, 31 Aug 2018 16:29:32  INFO test_api.py test_api [ line:40 ] 接口请求data:""
 Fri, 31 Aug 2018 16:29:33  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {}, 'errCode': '0000', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '申请成功', 'tradeCode': None, 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:29:33  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:{'extFields': {}, 'errCode': '0000', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '申请成功', 'tradeCode': None, 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:29:33  INFO test_api.py test_api [ line:56 ] =====开始比对检验返回结果=======
 Fri, 31 Aug 2018 16:29:33  INFO test_api.py test_api [ line:57 ] 全值匹配模式
 Fri, 31 Aug 2018 16:29:33  INFO test_api.py test_api [ line:60 ] 结果比对成功，测试用例通过
 Fri, 31 Aug 2018 16:29:33  INFO test_api.py test_api [ line:81 ] 数据库里存在符合预期条件的数据,测试通过:()
 Fri, 31 Aug 2018 16:29:33  INFO test_api.py test_api [ line:84 ] ================结束一次接口请求===========
 Fri, 31 Aug 2018 16:29:33  INFO test_api.py test_api [ line:88 ] 需要等待时间60s发起后续请求
 Fri, 31 Aug 2018 16:30:03  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:30:03  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【转让购买后续接口】散标转让购买成功
 Fri, 31 Aug 2018 16:30:03  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.ProductCoreTradeService
 Fri, 31 Aug 2018 16:30:03  INFO test_api.py test_api [ line:39 ] 接口请求method:tradeContinue
 Fri, 31 Aug 2018 16:30:03  INFO test_api.py test_api [ line:40 ] 接口请求data:{"serialno":"201808311540590621FD","isSend":"1",'extFields':{"errCode":"0000", "errMsg":"交易成功", "tranSt":"Y"}}
 Fri, 31 Aug 2018 16:30:03  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {}, 'errCode': 'Q015', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '查询交易原单结果为空或失败', 'tradeCode': None, 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:30:03  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功！', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:30:03  INFO test_api.py test_api [ line:56 ] =====开始比对检验返回结果=======
 Fri, 31 Aug 2018 16:30:03  INFO test_api.py test_api [ line:57 ] 全值匹配模式
 Fri, 31 Aug 2018 16:30:03  ERROR test_api.py test_api [ line:62 ] 全值结果比对失败原因为："{'extFields': {}, 'errCode': 'Q015', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '查询交易原单结果为空或失败', 'tradeCode': None, 'exObjFields': {}, 'key': None}" not found in "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功！', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}"
Traceback (most recent call last):
  File "H:\python3_apiTest\TestCases\test_api.py", line 59, in test_api
    self.assertIn(str(res),case_data["expected_data"])
  File "F:\python36\lib\unittest\case.py", line 1089, in assertIn
    self.fail(self._formatMessage(msg, standardMsg))
  File "F:\python36\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: "{'extFields': {}, 'errCode': 'Q015', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '查询交易原单结果为空或失败', 'tradeCode': None, 'exObjFields': {}, 'key': None}" not found in "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功！', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}"
 Fri, 31 Aug 2018 16:30:03  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:30:03  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【散标转让】散标转让申请
 Fri, 31 Aug 2018 16:30:03  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.ProductCoreTranService
 Fri, 31 Aug 2018 16:30:03  INFO test_api.py test_api [ line:39 ] 接口请求method:transferApp
 Fri, 31 Aug 2018 16:30:03  INFO test_api.py test_api [ line:40 ] 接口请求data:{
"serialno":"201808311626320961Cx",
"subquty":"100.00",
"custno":"1538943691",
"apkind":"055",
"subapkind":"055001",
"apdt":"20180726",
"aptm":"161324",
"workdate":"20180726",
"sharetype":"A",
"accptmd":"1",
"branchcode":"247000",
"distributorcode":"247",
"referno":"5B5980AB002Cbc84",
"tradeacco":"000621718538943694",
"taaccountid":"475A7D638769350988",
"productid":"732937",
"tano":"47",
"feetp":"06",
"feemode":"1",
"feevalue":"0.002",
"baseyield":"0.0900",
"yield":"0.0900",
"addyield":"0.0000",
"exyield":"0.0000",
"interestbegindate":"20180726",
"interestenddate":"20181016",
"selltype":1}
 Fri, 31 Aug 2018 16:30:04  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {}, 'errCode': '0000', 'errMsg': '申请成功', 'exObjFields': {}, 'key': None, 'status': 'Y'}
 Fri, 31 Aug 2018 16:30:04  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:{'extFields': {}, 'errCode': '0000', 'errMsg': '申请成功', 'exObjFields': {}, 'key': None, 'status': 'Y'}
 Fri, 31 Aug 2018 16:30:04  INFO test_api.py test_api [ line:56 ] =====开始比对检验返回结果=======
 Fri, 31 Aug 2018 16:30:04  INFO test_api.py test_api [ line:57 ] 全值匹配模式
 Fri, 31 Aug 2018 16:30:04  INFO test_api.py test_api [ line:60 ] 结果比对成功，测试用例通过
 Fri, 31 Aug 2018 16:30:04  INFO test_api.py test_api [ line:81 ] 数据库里存在符合预期条件的数据,测试通过:()
 Fri, 31 Aug 2018 16:30:04  INFO test_api.py test_api [ line:84 ] ================结束一次接口请求===========
 Fri, 31 Aug 2018 16:30:04  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:30:04  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【散标转让】散标转让购买申请
 Fri, 31 Aug 2018 16:30:04  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.ProductCoreTradeService
 Fri, 31 Aug 2018 16:30:04  INFO test_api.py test_api [ line:39 ] 接口请求method:transferByVacco
 Fri, 31 Aug 2018 16:30:04  INFO test_api.py test_api [ line:40 ] 接口请求data:{
"referno":"201808311540590426go",
"subquty":"100",
"honourdate":"20181017",
"baseyield":"0.0900",
"yield":"0.0900",
"addyield":"0.0000",
"interestbegindate":"20180726",
"interestenddate":"20181016",
"exyield":"0",
"serialno":"201808311626320135ee",
"custno":"1538943811",
"apkind":"056",
"subapkind":"056001",
"apdt":"20180726",
"aptm":"134031",
"workdate":"20180726",
"tradeacco":"000621718538943814",
"taaccountid":"475A7FB19598436383",
"tano":"47",
"productid":"732937",
"sharetype":"A",
"accptmd":"1",
"branchcode":"247000",
"distributorcode":"247"}
 Fri, 31 Aug 2018 16:30:04  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'F', 'tradeMsg': '查询交易原单结果为空或失败', 'errMsg': '申请成功', 'tradeCode': 'Q015', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:30:04  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:30:04  INFO test_api.py test_api [ line:56 ] =====开始比对检验返回结果=======
 Fri, 31 Aug 2018 16:30:04  INFO test_api.py test_api [ line:57 ] 全值匹配模式
 Fri, 31 Aug 2018 16:30:04  ERROR test_api.py test_api [ line:62 ] 全值结果比对失败原因为："{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'F', 'tradeMsg': '查询交易原单结果为空或失败', 'errMsg': '申请成功', 'tradeCode': 'Q015', 'exObjFields': {}, 'key': None}" not found in "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}"
Traceback (most recent call last):
  File "H:\python3_apiTest\TestCases\test_api.py", line 59, in test_api
    self.assertIn(str(res),case_data["expected_data"])
  File "F:\python36\lib\unittest\case.py", line 1089, in assertIn
    self.fail(self._formatMessage(msg, standardMsg))
  File "F:\python36\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'F', 'tradeMsg': '查询交易原单结果为空或失败', 'errMsg': '申请成功', 'tradeCode': 'Q015', 'exObjFields': {}, 'key': None}" not found in "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}"
 Fri, 31 Aug 2018 16:30:04  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:30:04  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【调用轮询接口处理交易请求】
 Fri, 31 Aug 2018 16:30:04  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.ProductCoreTradeService
 Fri, 31 Aug 2018 16:30:04  INFO test_api.py test_api [ line:39 ] 接口请求method:tradeContinueTask
 Fri, 31 Aug 2018 16:30:04  INFO test_api.py test_api [ line:40 ] 接口请求data:""
 Fri, 31 Aug 2018 16:30:05  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {}, 'errCode': '0000', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '申请成功', 'tradeCode': None, 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:30:05  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:{'extFields': {}, 'errCode': '0000', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '申请成功', 'tradeCode': None, 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:30:05  INFO test_api.py test_api [ line:56 ] =====开始比对检验返回结果=======
 Fri, 31 Aug 2018 16:30:05  INFO test_api.py test_api [ line:57 ] 全值匹配模式
 Fri, 31 Aug 2018 16:30:05  INFO test_api.py test_api [ line:60 ] 结果比对成功，测试用例通过
 Fri, 31 Aug 2018 16:30:05  INFO test_api.py test_api [ line:81 ] 数据库里存在符合预期条件的数据,测试通过:()
 Fri, 31 Aug 2018 16:30:05  INFO test_api.py test_api [ line:84 ] ================结束一次接口请求===========
 Fri, 31 Aug 2018 16:30:05  INFO test_api.py test_api [ line:88 ] 需要等待时间60s发起后续请求
 Fri, 31 Aug 2018 16:30:35  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:30:35  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【转让购买后续接口】散标转让购买失败
 Fri, 31 Aug 2018 16:30:35  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.ProductCoreTradeService
 Fri, 31 Aug 2018 16:30:35  INFO test_api.py test_api [ line:39 ] 接口请求method:tradeContinue
 Fri, 31 Aug 2018 16:30:35  INFO test_api.py test_api [ line:40 ] 接口请求data:{"serialno":"201808311540590299ZG",'extFields':{"errCode":"0001", "errMsg":"交易失败", "tranSt":"F"}}
 Fri, 31 Aug 2018 16:30:35  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {}, 'errCode': 'Q015', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '查询交易原单结果为空或失败', 'tradeCode': None, 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:30:35  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'F', 'tradeMsg': '浜ゆ槗澶辫触', 'errMsg': '申请成功', 'tradeCode': '0001', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:30:35  INFO test_api.py test_api [ line:56 ] =====开始比对检验返回结果=======
 Fri, 31 Aug 2018 16:30:35  INFO test_api.py test_api [ line:57 ] 全值匹配模式
 Fri, 31 Aug 2018 16:30:35  ERROR test_api.py test_api [ line:62 ] 全值结果比对失败原因为："{'extFields': {}, 'errCode': 'Q015', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '查询交易原单结果为空或失败', 'tradeCode': None, 'exObjFields': {}, 'key': None}" not found in "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'F', 'tradeMsg': '浜ゆ槗澶辫触', 'errMsg': '申请成功', 'tradeCode': '0001', 'exObjFields': {}, 'key': None}"
Traceback (most recent call last):
  File "H:\python3_apiTest\TestCases\test_api.py", line 59, in test_api
    self.assertIn(str(res),case_data["expected_data"])
  File "F:\python36\lib\unittest\case.py", line 1089, in assertIn
    self.fail(self._formatMessage(msg, standardMsg))
  File "F:\python36\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: "{'extFields': {}, 'errCode': 'Q015', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '查询交易原单结果为空或失败', 'tradeCode': None, 'exObjFields': {}, 'key': None}" not found in "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'F', 'tradeMsg': '浜ゆ槗澶辫触', 'errMsg': '申请成功', 'tradeCode': '0001', 'exObjFields': {}, 'key': None}"
 Fri, 31 Aug 2018 16:30:35  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:30:35  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【散标转让】转让金额含空格
 Fri, 31 Aug 2018 16:30:35  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.ProductCoreTranService
 Fri, 31 Aug 2018 16:30:35  INFO test_api.py test_api [ line:39 ] 接口请求method:transferApp
 Fri, 31 Aug 2018 16:30:35  INFO test_api.py test_api [ line:40 ] 接口请求data:{
"serialno":"201808311626320493oI",
"subquty":"1 0.00",
"custno":"1538943691",
"apkind":"055",
"subapkind":"055001",
"apdt":"20180726",
"aptm":"161324",
"workdate":"20180726",
"sharetype":"A",
"accptmd":"1",
"branchcode":"247000",
"distributorcode":"247",
"referno":"5B5980AB002Cbc84",
"tradeacco":"000621718538943694",
"taaccountid":"475A7D638769350988",
"productid":"732937",
"tano":"47",
"feetp":"06",
"feemode":"1",
"feevalue":"0.002",
"baseyield":"0.0900",
"yield":"0.0900",
"addyield":"0.0000",
"exyield":"0.0000",
"interestbegindate":"20180726",
"interestenddate":"20181016",
"selltype":1}
 Fri, 31 Aug 2018 16:30:35  INFO test_api.py test_api [ line:49 ] 接口请求response data为：Failed to invoke method transferApp, cause: java.lang.NumberFormatException
 Fri, 31 Aug 2018 16:30:35  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:Failed to invoke method transferApp, cause: java.lang.NumberFormatException
 Fri, 31 Aug 2018 16:30:35  INFO test_api.py test_api [ line:56 ] =====开始比对检验返回结果=======
 Fri, 31 Aug 2018 16:30:35  INFO test_api.py test_api [ line:57 ] 全值匹配模式
 Fri, 31 Aug 2018 16:30:35  INFO test_api.py test_api [ line:60 ] 结果比对成功，测试用例通过
 Fri, 31 Aug 2018 16:30:35  INFO test_api.py test_api [ line:81 ] 数据库里存在符合预期条件的数据,测试通过:()
 Fri, 31 Aug 2018 16:30:35  INFO test_api.py test_api [ line:84 ] ================结束一次接口请求===========
 Fri, 31 Aug 2018 16:30:35  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:30:35  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【散标转让】转让金额含特殊字符
 Fri, 31 Aug 2018 16:30:35  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.ProductCoreTranService
 Fri, 31 Aug 2018 16:30:35  INFO test_api.py test_api [ line:39 ] 接口请求method:transferApp
 Fri, 31 Aug 2018 16:30:35  INFO test_api.py test_api [ line:40 ] 接口请求data:{
"serialno":"201808311626320768LL",
"subquty":"1@0.00",
"custno":"1538943691",
"apkind":"055",
"subapkind":"055001",
"apdt":"20180726",
"aptm":"161324",
"workdate":"20180726",
"sharetype":"A",
"accptmd":"1",
"branchcode":"247000",
"distributorcode":"247",
"referno":"5B5980AB002Cbc84",
"tradeacco":"000621718538943694",
"taaccountid":"475A7D638769350988",
"productid":"732937",
"tano":"47",
"feetp":"06",
"feemode":"1",
"feevalue":"0.002",
"baseyield":"0.0900",
"yield":"0.0900",
"addyield":"0.0000",
"exyield":"0.0000",
"interestbegindate":"20180726",
"interestenddate":"20181016",
"selltype":1}
 Fri, 31 Aug 2018 16:30:35  INFO test_api.py test_api [ line:49 ] 接口请求response data为：Failed to invoke method transferApp, cause: java.lang.NumberFormatException
 Fri, 31 Aug 2018 16:30:35  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:Failed to invoke method transferApp, cause: java.lang.NumberFormatException
 Fri, 31 Aug 2018 16:30:35  INFO test_api.py test_api [ line:56 ] =====开始比对检验返回结果=======
 Fri, 31 Aug 2018 16:30:35  INFO test_api.py test_api [ line:57 ] 全值匹配模式
 Fri, 31 Aug 2018 16:30:35  INFO test_api.py test_api [ line:60 ] 结果比对成功，测试用例通过
 Fri, 31 Aug 2018 16:30:35  INFO test_api.py test_api [ line:81 ] 数据库里存在符合预期条件的数据,测试通过:()
 Fri, 31 Aug 2018 16:30:35  INFO test_api.py test_api [ line:84 ] ================结束一次接口请求===========
 Fri, 31 Aug 2018 16:30:35  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:30:35  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【散标转让】转让份额大于购买份额购买失败
 Fri, 31 Aug 2018 16:30:35  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.ProductCoreTranService
 Fri, 31 Aug 2018 16:30:35  INFO test_api.py test_api [ line:39 ] 接口请求method:transferApp
 Fri, 31 Aug 2018 16:30:35  INFO test_api.py test_api [ line:40 ] 接口请求data:{
"serialno":"201808311626320177ag",
"subquty":"100.00",
"custno":"1538943691",
"apkind":"055",
"subapkind":"055001",
"apdt":"20180726",
"aptm":"161324",
"workdate":"20180726",
"sharetype":"A",
"accptmd":"1",
"branchcode":"247000",
"distributorcode":"247",
"referno":"5B5980AB002Cbc84",
"tradeacco":"000621718538943694",
"taaccountid":"475A7D638769350988",
"productid":"732937",
"tano":"47",
"feetp":"06",
"feemode":"1",
"feevalue":"0.002",
"baseyield":"0.0900",
"yield":"0.0900",
"addyield":"0.0000",
"exyield":"0.0000",
"interestbegindate":"20180726",
"interestenddate":"20181016",
"selltype":1}
 Fri, 31 Aug 2018 16:30:35  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {}, 'errCode': '0000', 'errMsg': '申请成功', 'exObjFields': {}, 'key': None, 'status': 'Y'}
 Fri, 31 Aug 2018 16:30:35  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:{'extFields': {}, 'errCode': '0000', 'errMsg': '申请成功', 'exObjFields': {}, 'key': None, 'status': 'Y'}
 Fri, 31 Aug 2018 16:30:35  INFO test_api.py test_api [ line:56 ] =====开始比对检验返回结果=======
 Fri, 31 Aug 2018 16:30:35  INFO test_api.py test_api [ line:57 ] 全值匹配模式
 Fri, 31 Aug 2018 16:30:35  INFO test_api.py test_api [ line:60 ] 结果比对成功，测试用例通过
 Fri, 31 Aug 2018 16:30:35  INFO test_api.py test_api [ line:81 ] 数据库里存在符合预期条件的数据,测试通过:()
 Fri, 31 Aug 2018 16:30:35  INFO test_api.py test_api [ line:84 ] ================结束一次接口请求===========
 Fri, 31 Aug 2018 16:30:35  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:30:35  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【组合卖出】季季升产品提前卖出申请
 Fri, 31 Aug 2018 16:30:35  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.ProductCoreTradeService
 Fri, 31 Aug 2018 16:30:35  INFO test_api.py test_api [ line:39 ] 接口请求method:sellToVacco
 Fri, 31 Aug 2018 16:30:35  INFO test_api.py test_api [ line:40 ] 接口请求data:{"refercapno":"5B57DD261DFCbc4E",
        "reemFlag":"1",
        "selltype":1,
        "periodic":"true",
        "mixProd":"true",
        "bigVCustno":"1503257540",
        "honourFlag":"1",
        "newFlag":"0",
        "partPayment":"false",
        "subquty":"10.00",
        "feetp":"07",
        "feemode":"1",
        "feevalue":"0.01",
        "serialno":"201808311626320965bj",
        "custno":"1538943811",
        "apkind":"014",
        "subapkind":"014001",
        "apdt":"20180722",
        "aptm":"113344",
        "workdate":"20180722",
        "tradeacco":"000621718538943814",
        "taaccountid":"475A7FB19598436383",
        "tano":"47",
        "productid":"8901",
        "sharetype":"A",
        "accptmd":"1",
        "branchcode":"247000",
        "distributorcode":"247"}
 Fri, 31 Aug 2018 16:30:35  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:30:35  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:30:35  INFO test_api.py test_api [ line:56 ] =====开始比对检验返回结果=======
 Fri, 31 Aug 2018 16:30:35  INFO test_api.py test_api [ line:57 ] 全值匹配模式
 Fri, 31 Aug 2018 16:30:35  INFO test_api.py test_api [ line:60 ] 结果比对成功，测试用例通过
 Fri, 31 Aug 2018 16:30:36  INFO test_api.py test_api [ line:81 ] 数据库里存在符合预期条件的数据,测试通过:()
 Fri, 31 Aug 2018 16:30:36  INFO test_api.py test_api [ line:84 ] ================结束一次接口请求===========
 Fri, 31 Aug 2018 16:30:36  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:30:36  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【调用轮询接口处理交易请求】
 Fri, 31 Aug 2018 16:30:36  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.ProductCoreTradeService
 Fri, 31 Aug 2018 16:30:36  INFO test_api.py test_api [ line:39 ] 接口请求method:tradeContinueTask
 Fri, 31 Aug 2018 16:30:36  INFO test_api.py test_api [ line:40 ] 接口请求data:""
 Fri, 31 Aug 2018 16:30:37  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {}, 'errCode': '0000', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '申请成功', 'tradeCode': None, 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:30:37  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:None
 Fri, 31 Aug 2018 16:30:37  INFO test_api.py test_api [ line:81 ] 数据库里存在符合预期条件的数据,测试通过:()
 Fri, 31 Aug 2018 16:30:37  INFO test_api.py test_api [ line:84 ] ================结束一次接口请求===========
 Fri, 31 Aug 2018 16:30:37  INFO test_api.py test_api [ line:88 ] 需要等待时间60s发起后续请求
 Fri, 31 Aug 2018 16:31:07  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:31:07  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【卖出后续接口】季季升产品提前卖出成功
 Fri, 31 Aug 2018 16:31:07  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.ProductCoreTradeService
 Fri, 31 Aug 2018 16:31:07  INFO test_api.py test_api [ line:39 ] 接口请求method:tradeContinue
 Fri, 31 Aug 2018 16:31:07  INFO test_api.py test_api [ line:40 ] 接口请求data:{"serialno":"201808311540590448gQ","isSend":"1",'extFields':{"errCode":"0000", "errMsg":"交易成功", "tranSt":"Y"}}
 Fri, 31 Aug 2018 16:31:07  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {}, 'errCode': 'Q015', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '查询交易原单结果为空或失败', 'tradeCode': None, 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:31:07  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功！', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:31:07  INFO test_api.py test_api [ line:56 ] =====开始比对检验返回结果=======
 Fri, 31 Aug 2018 16:31:07  INFO test_api.py test_api [ line:57 ] 全值匹配模式
 Fri, 31 Aug 2018 16:31:07  ERROR test_api.py test_api [ line:62 ] 全值结果比对失败原因为："{'extFields': {}, 'errCode': 'Q015', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '查询交易原单结果为空或失败', 'tradeCode': None, 'exObjFields': {}, 'key': None}" not found in "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功！', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}"
Traceback (most recent call last):
  File "H:\python3_apiTest\TestCases\test_api.py", line 59, in test_api
    self.assertIn(str(res),case_data["expected_data"])
  File "F:\python36\lib\unittest\case.py", line 1089, in assertIn
    self.fail(self._formatMessage(msg, standardMsg))
  File "F:\python36\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: "{'extFields': {}, 'errCode': 'Q015', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '查询交易原单结果为空或失败', 'tradeCode': None, 'exObjFields': {}, 'key': None}" not found in "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功！', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}"
 Fri, 31 Aug 2018 16:31:07  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:31:07  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【组合卖出】季季升产品提前卖出申请
 Fri, 31 Aug 2018 16:31:07  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.ProductCoreTradeService
 Fri, 31 Aug 2018 16:31:07  INFO test_api.py test_api [ line:39 ] 接口请求method:sellToVacco
 Fri, 31 Aug 2018 16:31:07  INFO test_api.py test_api [ line:40 ] 接口请求data:{"refercapno":"5B57DD261DFCbc4E",
        "reemFlag":"1",
        "selltype":1,
        "periodic":"true",
        "mixProd":"true",
        "bigVCustno":"1503257540",
        "honourFlag":"1",
        "newFlag":"0",
        "partPayment":"false",
        "subquty":"10.00",
        "feetp":"07",
        "feemode":"1",
        "feevalue":"0.01",
        "serialno":"201808311626320464GI",
        "custno":"1538943811",
        "apkind":"014",
        "subapkind":"014001",
        "apdt":"20180722",
        "aptm":"113344",
        "workdate":"20180722",
        "tradeacco":"000621718538943814",
        "taaccountid":"475A7FB19598436383",
        "tano":"47",
        "productid":"8901",
        "sharetype":"A",
        "accptmd":"1",
        "branchcode":"247000",
        "distributorcode":"247"}
 Fri, 31 Aug 2018 16:31:07  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:31:07  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:31:07  INFO test_api.py test_api [ line:56 ] =====开始比对检验返回结果=======
 Fri, 31 Aug 2018 16:31:07  INFO test_api.py test_api [ line:57 ] 全值匹配模式
 Fri, 31 Aug 2018 16:31:07  INFO test_api.py test_api [ line:60 ] 结果比对成功，测试用例通过
 Fri, 31 Aug 2018 16:31:07  INFO test_api.py test_api [ line:81 ] 数据库里存在符合预期条件的数据,测试通过:()
 Fri, 31 Aug 2018 16:31:07  INFO test_api.py test_api [ line:84 ] ================结束一次接口请求===========
 Fri, 31 Aug 2018 16:31:07  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:31:07  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【调用轮询接口处理交易请求】
 Fri, 31 Aug 2018 16:31:07  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.ProductCoreTradeService
 Fri, 31 Aug 2018 16:31:07  INFO test_api.py test_api [ line:39 ] 接口请求method:tradeContinueTask
 Fri, 31 Aug 2018 16:31:07  INFO test_api.py test_api [ line:40 ] 接口请求data:""
 Fri, 31 Aug 2018 16:31:09  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {}, 'errCode': '0000', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '申请成功', 'tradeCode': None, 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:31:09  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:None
 Fri, 31 Aug 2018 16:31:09  INFO test_api.py test_api [ line:81 ] 数据库里存在符合预期条件的数据,测试通过:()
 Fri, 31 Aug 2018 16:31:09  INFO test_api.py test_api [ line:84 ] ================结束一次接口请求===========
 Fri, 31 Aug 2018 16:31:09  INFO test_api.py test_api [ line:88 ] 需要等待时间60s发起后续请求
 Fri, 31 Aug 2018 16:31:39  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:31:39  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【卖出后续接口】季季升产品提前卖出失败
 Fri, 31 Aug 2018 16:31:39  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.ProductCoreTradeService
 Fri, 31 Aug 2018 16:31:39  INFO test_api.py test_api [ line:39 ] 接口请求method:tradeContinue
 Fri, 31 Aug 2018 16:31:39  INFO test_api.py test_api [ line:40 ] 接口请求data:{"serialno":"201808311540590241VV","isSend":"1",'extFields':{"errCode":"0000", "errMsg":"交易成功", "tranSt":"Y"}}
 Fri, 31 Aug 2018 16:31:39  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {}, 'errCode': 'Q015', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '查询交易原单结果为空或失败', 'tradeCode': None, 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:31:39  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'F', 'tradeMsg': '浜ゆ槗澶辫触', 'errMsg': '申请成功', 'tradeCode': '0001', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:31:39  INFO test_api.py test_api [ line:56 ] =====开始比对检验返回结果=======
 Fri, 31 Aug 2018 16:31:39  INFO test_api.py test_api [ line:57 ] 全值匹配模式
 Fri, 31 Aug 2018 16:31:39  ERROR test_api.py test_api [ line:62 ] 全值结果比对失败原因为："{'extFields': {}, 'errCode': 'Q015', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '查询交易原单结果为空或失败', 'tradeCode': None, 'exObjFields': {}, 'key': None}" not found in "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'F', 'tradeMsg': '浜ゆ槗澶辫触', 'errMsg': '申请成功', 'tradeCode': '0001', 'exObjFields': {}, 'key': None}"
Traceback (most recent call last):
  File "H:\python3_apiTest\TestCases\test_api.py", line 59, in test_api
    self.assertIn(str(res),case_data["expected_data"])
  File "F:\python36\lib\unittest\case.py", line 1089, in assertIn
    self.fail(self._formatMessage(msg, standardMsg))
  File "F:\python36\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: "{'extFields': {}, 'errCode': 'Q015', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '查询交易原单结果为空或失败', 'tradeCode': None, 'exObjFields': {}, 'key': None}" not found in "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'F', 'tradeMsg': '浜ゆ槗澶辫触', 'errMsg': '申请成功', 'tradeCode': '0001', 'exObjFields': {}, 'key': None}"
 Fri, 31 Aug 2018 16:31:39  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:31:39  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【组合卖出】使用优惠券季季升产品提前卖出申请
 Fri, 31 Aug 2018 16:31:39  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.ProductCoreTradeService
 Fri, 31 Aug 2018 16:31:39  INFO test_api.py test_api [ line:39 ] 接口请求method:sellToVacco
 Fri, 31 Aug 2018 16:31:39  INFO test_api.py test_api [ line:40 ] 接口请求data:{"refercapno":"5B57DD261DFCbc4E",
        "sellCouponId":"5B569A9A006Abc55",
        "reemFlag":"1",
        "periodic":"true",
        "mixProd":"true",
        "bigVCustno":"1503257540",
        "honourFlag":"1",
        "newFlag":"0",
        "partPayment":"false",
        "subquty":"10.00",
        "feetp":"07",
        "feemode":"1",
        "feevalue":"0.01",
        "serialno":"201808311626320160dJ",
        "custno":"1538943811",
        "apkind":"014",
        "subapkind":"014001",
        "apdt":"20180722",
        "aptm":"113344",
        "workdate":"20180722",
        "tradeacco":"000621718538943814",
        "taaccountid":"475A7FB19598436383",
        "tano":"47",
        "productid":"8901",
        "sharetype":"A",
        "accptmd":"1",
        "branchcode":"247000",
        "distributorcode":"247"}
 Fri, 31 Aug 2018 16:31:39  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:31:39  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:31:39  INFO test_api.py test_api [ line:56 ] =====开始比对检验返回结果=======
 Fri, 31 Aug 2018 16:31:39  INFO test_api.py test_api [ line:57 ] 全值匹配模式
 Fri, 31 Aug 2018 16:31:39  INFO test_api.py test_api [ line:60 ] 结果比对成功，测试用例通过
 Fri, 31 Aug 2018 16:31:39  INFO test_api.py test_api [ line:81 ] 数据库里存在符合预期条件的数据,测试通过:()
 Fri, 31 Aug 2018 16:31:39  INFO test_api.py test_api [ line:84 ] ================结束一次接口请求===========
 Fri, 31 Aug 2018 16:31:39  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:31:39  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【调用轮询接口处理交易请求】
 Fri, 31 Aug 2018 16:31:39  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.ProductCoreTradeService
 Fri, 31 Aug 2018 16:31:39  INFO test_api.py test_api [ line:39 ] 接口请求method:tradeContinueTask
 Fri, 31 Aug 2018 16:31:39  INFO test_api.py test_api [ line:40 ] 接口请求data:""
 Fri, 31 Aug 2018 16:31:40  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {}, 'errCode': '0000', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '申请成功', 'tradeCode': None, 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:31:40  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:None
 Fri, 31 Aug 2018 16:31:40  INFO test_api.py test_api [ line:81 ] 数据库里存在符合预期条件的数据,测试通过:()
 Fri, 31 Aug 2018 16:31:40  INFO test_api.py test_api [ line:84 ] ================结束一次接口请求===========
 Fri, 31 Aug 2018 16:31:40  INFO test_api.py test_api [ line:88 ] 需要等待时间60s发起后续请求
 Fri, 31 Aug 2018 16:32:10  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:32:10  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【卖出后续接口】使用优惠券季季升产品提前卖出成功
 Fri, 31 Aug 2018 16:32:10  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.ProductCoreTradeService
 Fri, 31 Aug 2018 16:32:10  INFO test_api.py test_api [ line:39 ] 接口请求method:tradeContinue
 Fri, 31 Aug 2018 16:32:10  INFO test_api.py test_api [ line:40 ] 接口请求data:{"serialno":"201808311540590932eX","isSend":"1",'extFields':{"errCode":"0000", "errMsg":"交易成功", "tranSt":"Y"}}
 Fri, 31 Aug 2018 16:32:10  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {}, 'errCode': 'Q015', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '查询交易原单结果为空或失败', 'tradeCode': None, 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:32:10  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功！', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:32:10  INFO test_api.py test_api [ line:56 ] =====开始比对检验返回结果=======
 Fri, 31 Aug 2018 16:32:10  INFO test_api.py test_api [ line:57 ] 全值匹配模式
 Fri, 31 Aug 2018 16:32:10  ERROR test_api.py test_api [ line:62 ] 全值结果比对失败原因为："{'extFields': {}, 'errCode': 'Q015', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '查询交易原单结果为空或失败', 'tradeCode': None, 'exObjFields': {}, 'key': None}" not found in "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功！', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}"
Traceback (most recent call last):
  File "H:\python3_apiTest\TestCases\test_api.py", line 59, in test_api
    self.assertIn(str(res),case_data["expected_data"])
  File "F:\python36\lib\unittest\case.py", line 1089, in assertIn
    self.fail(self._formatMessage(msg, standardMsg))
  File "F:\python36\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: "{'extFields': {}, 'errCode': 'Q015', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '查询交易原单结果为空或失败', 'tradeCode': None, 'exObjFields': {}, 'key': None}" not found in "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功！', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}"
 Fri, 31 Aug 2018 16:32:10  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:32:10  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【组合卖出】使用优惠券季季升产品提前卖出申请
 Fri, 31 Aug 2018 16:32:10  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.ProductCoreTradeService
 Fri, 31 Aug 2018 16:32:10  INFO test_api.py test_api [ line:39 ] 接口请求method:sellToVacco
 Fri, 31 Aug 2018 16:32:10  INFO test_api.py test_api [ line:40 ] 接口请求data:{"refercapno":"5B57DD261DFCbc4E",
        "sellCouponId":"5B569A9A006Abc55",
        "reemFlag":"1",
        "selltype":1,
        "periodic":"true",
        "mixProd":"true",
        "bigVCustno":"1503257540",
        "honourFlag":"1",
        "newFlag":"0",
        "partPayment":"false",
        "subquty":"10.00",
        "feetp":"07",
        "feemode":"1",
        "feevalue":"0.01",
        "serialno":"201808311626320203hR",
        "custno":"1538943811",
        "apkind":"014",
        "subapkind":"014001",
        "apdt":"20180722",
        "aptm":"113344",
        "workdate":"20180722",
        "tradeacco":"000621718538943814",
        "taaccountid":"475A7FB19598436383",
        "tano":"47",
        "productid":"8901",
        "sharetype":"A",
        "accptmd":"1",
        "branchcode":"247000",
        "distributorcode":"247"}
 Fri, 31 Aug 2018 16:32:10  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:32:10  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:32:10  INFO test_api.py test_api [ line:56 ] =====开始比对检验返回结果=======
 Fri, 31 Aug 2018 16:32:10  INFO test_api.py test_api [ line:57 ] 全值匹配模式
 Fri, 31 Aug 2018 16:32:10  INFO test_api.py test_api [ line:60 ] 结果比对成功，测试用例通过
 Fri, 31 Aug 2018 16:32:10  INFO test_api.py test_api [ line:81 ] 数据库里存在符合预期条件的数据,测试通过:()
 Fri, 31 Aug 2018 16:32:10  INFO test_api.py test_api [ line:84 ] ================结束一次接口请求===========
 Fri, 31 Aug 2018 16:32:10  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:32:10  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【调用轮询接口处理交易请求】
 Fri, 31 Aug 2018 16:32:10  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.ProductCoreTradeService
 Fri, 31 Aug 2018 16:32:10  INFO test_api.py test_api [ line:39 ] 接口请求method:tradeContinueTask
 Fri, 31 Aug 2018 16:32:10  INFO test_api.py test_api [ line:40 ] 接口请求data:""
 Fri, 31 Aug 2018 16:32:12  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {}, 'errCode': '0000', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '申请成功', 'tradeCode': None, 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:32:12  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:None
 Fri, 31 Aug 2018 16:32:12  INFO test_api.py test_api [ line:81 ] 数据库里存在符合预期条件的数据,测试通过:()
 Fri, 31 Aug 2018 16:32:12  INFO test_api.py test_api [ line:84 ] ================结束一次接口请求===========
 Fri, 31 Aug 2018 16:32:12  INFO test_api.py test_api [ line:88 ] 需要等待时间60s发起后续请求
 Fri, 31 Aug 2018 16:32:42  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:32:42  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【卖出后续接口】使用优惠券季季升产品提前卖出失败
 Fri, 31 Aug 2018 16:32:42  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.ProductCoreTradeService
 Fri, 31 Aug 2018 16:32:42  INFO test_api.py test_api [ line:39 ] 接口请求method:tradeContinue
 Fri, 31 Aug 2018 16:32:42  INFO test_api.py test_api [ line:40 ] 接口请求data:{"serialno":"201808311540590912LN","isSend":"1",'extFields':{"errCode":"0000", "errMsg":"交易成功", "tranSt":"Y"}}
 Fri, 31 Aug 2018 16:32:42  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {}, 'errCode': 'Q015', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '查询交易原单结果为空或失败', 'tradeCode': None, 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:32:42  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'F', 'tradeMsg': '浜ゆ槗澶辫触', 'errMsg': '申请成功', 'tradeCode': '0001', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:32:42  INFO test_api.py test_api [ line:56 ] =====开始比对检验返回结果=======
 Fri, 31 Aug 2018 16:32:42  INFO test_api.py test_api [ line:57 ] 全值匹配模式
 Fri, 31 Aug 2018 16:32:42  ERROR test_api.py test_api [ line:62 ] 全值结果比对失败原因为："{'extFields': {}, 'errCode': 'Q015', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '查询交易原单结果为空或失败', 'tradeCode': None, 'exObjFields': {}, 'key': None}" not found in "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'F', 'tradeMsg': '浜ゆ槗澶辫触', 'errMsg': '申请成功', 'tradeCode': '0001', 'exObjFields': {}, 'key': None}"
Traceback (most recent call last):
  File "H:\python3_apiTest\TestCases\test_api.py", line 59, in test_api
    self.assertIn(str(res),case_data["expected_data"])
  File "F:\python36\lib\unittest\case.py", line 1089, in assertIn
    self.fail(self._formatMessage(msg, standardMsg))
  File "F:\python36\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: "{'extFields': {}, 'errCode': 'Q015', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '查询交易原单结果为空或失败', 'tradeCode': None, 'exObjFields': {}, 'key': None}" not found in "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'F', 'tradeMsg': '浜ゆ槗澶辫触', 'errMsg': '申请成功', 'tradeCode': '0001', 'exObjFields': {}, 'key': None}"
 Fri, 31 Aug 2018 16:32:42  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:32:42  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【组合卖出】月月盈产品提前卖出申请
 Fri, 31 Aug 2018 16:32:42  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.ProductCoreTradeService
 Fri, 31 Aug 2018 16:32:42  INFO test_api.py test_api [ line:39 ] 接口请求method:sellToVacco
 Fri, 31 Aug 2018 16:32:42  INFO test_api.py test_api [ line:40 ] 接口请求data:{"refercapno":"5B74EB0A001FbcAC",
        "reemFlag":"1",
        "selltype":1,
        "periodic":"true",
        "mixProd":"true",
        "bigVCustno":"1503136940",
        "honourFlag":"1",
        "newFlag":"0",
        "partPayment":"false",
        "subquty":"10.00",
        "feetp":"07",
        "feemode":"1",
        "feevalue":"0.01",
        "serialno":"201808311626320635bD",
        "custno":"1538943811",
        "apkind":"014",
        "subapkind":"014001",
        "apdt":"20180815",
        "aptm":"164500",
        "workdate":"20180815",
        "tradeacco":"000621718538943814",
        "taaccountid":"475A7FB19598436383",
        "tano":"47",
        "productid":"8802",
        "sharetype":"A",
        "accptmd":"1",
        "branchcode":"247000",
        "distributorcode":"247"}
 Fri, 31 Aug 2018 16:32:42  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:32:42  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:32:42  INFO test_api.py test_api [ line:56 ] =====开始比对检验返回结果=======
 Fri, 31 Aug 2018 16:32:42  INFO test_api.py test_api [ line:57 ] 全值匹配模式
 Fri, 31 Aug 2018 16:32:42  INFO test_api.py test_api [ line:60 ] 结果比对成功，测试用例通过
 Fri, 31 Aug 2018 16:32:42  INFO test_api.py test_api [ line:81 ] 数据库里存在符合预期条件的数据,测试通过:()
 Fri, 31 Aug 2018 16:32:42  INFO test_api.py test_api [ line:84 ] ================结束一次接口请求===========
 Fri, 31 Aug 2018 16:32:42  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:32:42  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【调用轮询接口处理交易请求】
 Fri, 31 Aug 2018 16:32:42  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.ProductCoreTradeService
 Fri, 31 Aug 2018 16:32:42  INFO test_api.py test_api [ line:39 ] 接口请求method:tradeContinueTask
 Fri, 31 Aug 2018 16:32:42  INFO test_api.py test_api [ line:40 ] 接口请求data:""
 Fri, 31 Aug 2018 16:32:43  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {}, 'errCode': '0000', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '申请成功', 'tradeCode': None, 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:32:43  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:None
 Fri, 31 Aug 2018 16:32:43  INFO test_api.py test_api [ line:81 ] 数据库里存在符合预期条件的数据,测试通过:()
 Fri, 31 Aug 2018 16:32:43  INFO test_api.py test_api [ line:84 ] ================结束一次接口请求===========
 Fri, 31 Aug 2018 16:32:43  INFO test_api.py test_api [ line:88 ] 需要等待时间60s发起后续请求
 Fri, 31 Aug 2018 16:33:13  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:33:13  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【卖出后续接口】月月盈产品提前卖出成功
 Fri, 31 Aug 2018 16:33:13  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.ProductCoreTradeService
 Fri, 31 Aug 2018 16:33:13  INFO test_api.py test_api [ line:39 ] 接口请求method:tradeContinue
 Fri, 31 Aug 2018 16:33:13  INFO test_api.py test_api [ line:40 ] 接口请求data:{"serialno":"201808311540590979tG","isSend":"1",'extFields':{"errCode":"0000", "errMsg":"交易成功", "tranSt":"Y"}}
 Fri, 31 Aug 2018 16:33:14  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {}, 'errCode': 'Q015', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '查询交易原单结果为空或失败', 'tradeCode': None, 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:33:14  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功！', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:33:14  INFO test_api.py test_api [ line:56 ] =====开始比对检验返回结果=======
 Fri, 31 Aug 2018 16:33:14  INFO test_api.py test_api [ line:57 ] 全值匹配模式
 Fri, 31 Aug 2018 16:33:14  ERROR test_api.py test_api [ line:62 ] 全值结果比对失败原因为："{'extFields': {}, 'errCode': 'Q015', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '查询交易原单结果为空或失败', 'tradeCode': None, 'exObjFields': {}, 'key': None}" not found in "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功！', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}"
Traceback (most recent call last):
  File "H:\python3_apiTest\TestCases\test_api.py", line 59, in test_api
    self.assertIn(str(res),case_data["expected_data"])
  File "F:\python36\lib\unittest\case.py", line 1089, in assertIn
    self.fail(self._formatMessage(msg, standardMsg))
  File "F:\python36\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: "{'extFields': {}, 'errCode': 'Q015', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '查询交易原单结果为空或失败', 'tradeCode': None, 'exObjFields': {}, 'key': None}" not found in "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功！', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}"
 Fri, 31 Aug 2018 16:33:14  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:33:14  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【组合卖出】月月盈产品提前卖出申请
 Fri, 31 Aug 2018 16:33:14  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.ProductCoreTradeService
 Fri, 31 Aug 2018 16:33:14  INFO test_api.py test_api [ line:39 ] 接口请求method:sellToVacco
 Fri, 31 Aug 2018 16:33:14  INFO test_api.py test_api [ line:40 ] 接口请求data:{"refercapno":"5B74EB0A001FbcAC",
        "reemFlag":"1",
        "selltype":1,
        "periodic":"true",
        "mixProd":"true",
        "bigVCustno":"1503136940",
        "honourFlag":"1",
        "newFlag":"0",
        "partPayment":"false",
        "subquty":"10.00",
        "feetp":"07",
        "feemode":"1",
        "feevalue":"0.01",
        "serialno":"201808311626320776oJ",
        "custno":"1538943811",
        "apkind":"014",
        "subapkind":"014001",
        "apdt":"20180815",
        "aptm":"164500",
        "workdate":"20180815",
        "tradeacco":"000621718538943814",
        "taaccountid":"475A7FB19598436383",
        "tano":"47",
        "productid":"8802",
        "sharetype":"A",
        "accptmd":"1",
        "branchcode":"247000",
        "distributorcode":"247"}
 Fri, 31 Aug 2018 16:33:14  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:33:14  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:33:14  INFO test_api.py test_api [ line:56 ] =====开始比对检验返回结果=======
 Fri, 31 Aug 2018 16:33:14  INFO test_api.py test_api [ line:57 ] 全值匹配模式
 Fri, 31 Aug 2018 16:33:14  INFO test_api.py test_api [ line:60 ] 结果比对成功，测试用例通过
 Fri, 31 Aug 2018 16:33:14  INFO test_api.py test_api [ line:81 ] 数据库里存在符合预期条件的数据,测试通过:()
 Fri, 31 Aug 2018 16:33:14  INFO test_api.py test_api [ line:84 ] ================结束一次接口请求===========
 Fri, 31 Aug 2018 16:33:14  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:33:14  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【调用轮询接口处理交易请求】
 Fri, 31 Aug 2018 16:33:14  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.ProductCoreTradeService
 Fri, 31 Aug 2018 16:33:14  INFO test_api.py test_api [ line:39 ] 接口请求method:tradeContinueTask
 Fri, 31 Aug 2018 16:33:14  INFO test_api.py test_api [ line:40 ] 接口请求data:""
 Fri, 31 Aug 2018 16:33:15  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {}, 'errCode': '0000', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '申请成功', 'tradeCode': None, 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:33:15  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:None
 Fri, 31 Aug 2018 16:33:15  INFO test_api.py test_api [ line:81 ] 数据库里存在符合预期条件的数据,测试通过:()
 Fri, 31 Aug 2018 16:33:15  INFO test_api.py test_api [ line:84 ] ================结束一次接口请求===========
 Fri, 31 Aug 2018 16:33:15  INFO test_api.py test_api [ line:88 ] 需要等待时间60s发起后续请求
 Fri, 31 Aug 2018 16:33:45  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:33:45  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【卖出后续接口】月月盈产品提前卖出失败
 Fri, 31 Aug 2018 16:33:45  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.ProductCoreTradeService
 Fri, 31 Aug 2018 16:33:45  INFO test_api.py test_api [ line:39 ] 接口请求method:tradeContinue
 Fri, 31 Aug 2018 16:33:45  INFO test_api.py test_api [ line:40 ] 接口请求data:{"serialno":"201808311540590310rg","isSend":"1",'extFields':{"errCode":"0000", "errMsg":"交易成功", "tranSt":"Y"}}
 Fri, 31 Aug 2018 16:33:45  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {}, 'errCode': 'Q015', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '查询交易原单结果为空或失败', 'tradeCode': None, 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:33:45  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'F', 'tradeMsg': '浜ゆ槗澶辫触', 'errMsg': '申请成功', 'tradeCode': '0001', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:33:45  INFO test_api.py test_api [ line:56 ] =====开始比对检验返回结果=======
 Fri, 31 Aug 2018 16:33:45  INFO test_api.py test_api [ line:57 ] 全值匹配模式
 Fri, 31 Aug 2018 16:33:45  ERROR test_api.py test_api [ line:62 ] 全值结果比对失败原因为："{'extFields': {}, 'errCode': 'Q015', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '查询交易原单结果为空或失败', 'tradeCode': None, 'exObjFields': {}, 'key': None}" not found in "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'F', 'tradeMsg': '浜ゆ槗澶辫触', 'errMsg': '申请成功', 'tradeCode': '0001', 'exObjFields': {}, 'key': None}"
Traceback (most recent call last):
  File "H:\python3_apiTest\TestCases\test_api.py", line 59, in test_api
    self.assertIn(str(res),case_data["expected_data"])
  File "F:\python36\lib\unittest\case.py", line 1089, in assertIn
    self.fail(self._formatMessage(msg, standardMsg))
  File "F:\python36\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: "{'extFields': {}, 'errCode': 'Q015', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '查询交易原单结果为空或失败', 'tradeCode': None, 'exObjFields': {}, 'key': None}" not found in "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'F', 'tradeMsg': '浜ゆ槗澶辫触', 'errMsg': '申请成功', 'tradeCode': '0001', 'exObjFields': {}, 'key': None}"
 Fri, 31 Aug 2018 16:33:45  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:33:45  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【组合卖出】使用优惠券季季升产品提前卖出申请
 Fri, 31 Aug 2018 16:33:45  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.ProductCoreTradeService
 Fri, 31 Aug 2018 16:33:45  INFO test_api.py test_api [ line:39 ] 接口请求method:sellToVacco
 Fri, 31 Aug 2018 16:33:45  INFO test_api.py test_api [ line:40 ] 接口请求data:{"refercapno":"5B74EB0A001FbcAC",
        "sellCouponId":"5B569A9A006Abc55",
        "reemFlag":"1",
        "selltype":1,
        "periodic":"true",
        "mixProd":"true",
        "bigVCustno":"1503136940",
        "honourFlag":"1",
        "newFlag":"0",
        "partPayment":"false",
        "subquty":"10.00",
        "feetp":"07",
        "feemode":"1",
        "feevalue":"0.01",
        "serialno":"zcvbr123s12sdf31",
        "custno":"1538943811",
        "apkind":"014",
        "subapkind":"014001",
        "apdt":"20180815",
        "aptm":"164500",
        "workdate":"20180815",
        "tradeacco":"000621718538943814",
        "taaccountid":"475A7FB19598436383",
        "tano":"47",
        "productid":"8802",
        "sharetype":"A",
        "accptmd":"1",
        "branchcode":"247000",
        "distributorcode":"247"}
 Fri, 31 Aug 2018 16:33:46  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'E', 'tradeMsg': '系统异常', 'errMsg': '申请成功', 'tradeCode': '9999', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:33:46  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:33:46  INFO test_api.py test_api [ line:56 ] =====开始比对检验返回结果=======
 Fri, 31 Aug 2018 16:33:46  INFO test_api.py test_api [ line:57 ] 全值匹配模式
 Fri, 31 Aug 2018 16:33:46  ERROR test_api.py test_api [ line:62 ] 全值结果比对失败原因为："{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'E', 'tradeMsg': '系统异常', 'errMsg': '申请成功', 'tradeCode': '9999', 'exObjFields': {}, 'key': None}" not found in "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}"
Traceback (most recent call last):
  File "H:\python3_apiTest\TestCases\test_api.py", line 59, in test_api
    self.assertIn(str(res),case_data["expected_data"])
  File "F:\python36\lib\unittest\case.py", line 1089, in assertIn
    self.fail(self._formatMessage(msg, standardMsg))
  File "F:\python36\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'E', 'tradeMsg': '系统异常', 'errMsg': '申请成功', 'tradeCode': '9999', 'exObjFields': {}, 'key': None}" not found in "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}"
 Fri, 31 Aug 2018 16:33:46  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:33:46  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【调用轮询接口处理交易请求】
 Fri, 31 Aug 2018 16:33:46  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.ProductCoreTradeService
 Fri, 31 Aug 2018 16:33:46  INFO test_api.py test_api [ line:39 ] 接口请求method:tradeContinueTask
 Fri, 31 Aug 2018 16:33:46  INFO test_api.py test_api [ line:40 ] 接口请求data:""
 Fri, 31 Aug 2018 16:33:47  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {}, 'errCode': '0000', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '申请成功', 'tradeCode': None, 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:33:47  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:None
 Fri, 31 Aug 2018 16:33:47  INFO test_api.py test_api [ line:81 ] 数据库里存在符合预期条件的数据,测试通过:()
 Fri, 31 Aug 2018 16:33:47  INFO test_api.py test_api [ line:84 ] ================结束一次接口请求===========
 Fri, 31 Aug 2018 16:33:47  INFO test_api.py test_api [ line:88 ] 需要等待时间60s发起后续请求
 Fri, 31 Aug 2018 16:34:17  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:34:17  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【卖出后续接口】使用优惠券月月盈产品提前卖出成功
 Fri, 31 Aug 2018 16:34:17  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.ProductCoreTradeService
 Fri, 31 Aug 2018 16:34:17  INFO test_api.py test_api [ line:39 ] 接口请求method:tradeContinue
 Fri, 31 Aug 2018 16:34:17  INFO test_api.py test_api [ line:40 ] 接口请求data:{"serialno":"zcvbr123s12sdf31","isSend":"1",'extFields':{"errCode":"0000", "errMsg":"交易成功", "tranSt":"Y"}}
 Fri, 31 Aug 2018 16:34:17  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {}, 'errCode': 'BC44', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '更新锁状态异常', 'tradeCode': None, 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:34:17  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功！', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:34:17  INFO test_api.py test_api [ line:56 ] =====开始比对检验返回结果=======
 Fri, 31 Aug 2018 16:34:17  INFO test_api.py test_api [ line:57 ] 全值匹配模式
 Fri, 31 Aug 2018 16:34:17  ERROR test_api.py test_api [ line:62 ] 全值结果比对失败原因为："{'extFields': {}, 'errCode': 'BC44', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '更新锁状态异常', 'tradeCode': None, 'exObjFields': {}, 'key': None}" not found in "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功！', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}"
Traceback (most recent call last):
  File "H:\python3_apiTest\TestCases\test_api.py", line 59, in test_api
    self.assertIn(str(res),case_data["expected_data"])
  File "F:\python36\lib\unittest\case.py", line 1089, in assertIn
    self.fail(self._formatMessage(msg, standardMsg))
  File "F:\python36\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: "{'extFields': {}, 'errCode': 'BC44', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '更新锁状态异常', 'tradeCode': None, 'exObjFields': {}, 'key': None}" not found in "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功！', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}"
 Fri, 31 Aug 2018 16:34:17  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:34:17  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【组合卖出】使用优惠券月月盈产品提前卖出申请
 Fri, 31 Aug 2018 16:34:17  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.ProductCoreTradeService
 Fri, 31 Aug 2018 16:34:17  INFO test_api.py test_api [ line:39 ] 接口请求method:sellToVacco
 Fri, 31 Aug 2018 16:34:17  INFO test_api.py test_api [ line:40 ] 接口请求data:{"refercapno":"5B74EB0A001FbcAC",
        "sellCouponId":"5B569A9A006Abc55",
        "reemFlag":"1",
        "selltype":1,
        "periodic":"true",
        "mixProd":"true",
        "bigVCustno":"1503136940",
        "honourFlag":"1",
        "newFlag":"0",
        "partPayment":"false",
        "subquty":"10.00",
        "feetp":"07",
        "feemode":"1",
        "feevalue":"0.01",
        "serialno":"zcvbr123s12sdf31",
        "custno":"1538943811",
        "apkind":"014",
        "subapkind":"014001",
        "apdt":"20180815",
        "aptm":"164500",
        "workdate":"20180815",
        "tradeacco":"000621718538943814",
        "taaccountid":"475A7FB19598436383",
        "tano":"47",
        "productid":"8802",
        "sharetype":"A",
        "accptmd":"1",
        "branchcode":"247000",
        "distributorcode":"247"}
 Fri, 31 Aug 2018 16:34:17  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'E', 'tradeMsg': '系统异常', 'errMsg': '申请成功', 'tradeCode': '9999', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:34:17  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:34:17  INFO test_api.py test_api [ line:56 ] =====开始比对检验返回结果=======
 Fri, 31 Aug 2018 16:34:17  INFO test_api.py test_api [ line:57 ] 全值匹配模式
 Fri, 31 Aug 2018 16:34:17  ERROR test_api.py test_api [ line:62 ] 全值结果比对失败原因为："{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'E', 'tradeMsg': '系统异常', 'errMsg': '申请成功', 'tradeCode': '9999', 'exObjFields': {}, 'key': None}" not found in "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}"
Traceback (most recent call last):
  File "H:\python3_apiTest\TestCases\test_api.py", line 59, in test_api
    self.assertIn(str(res),case_data["expected_data"])
  File "F:\python36\lib\unittest\case.py", line 1089, in assertIn
    self.fail(self._formatMessage(msg, standardMsg))
  File "F:\python36\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'E', 'tradeMsg': '系统异常', 'errMsg': '申请成功', 'tradeCode': '9999', 'exObjFields': {}, 'key': None}" not found in "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}"
 Fri, 31 Aug 2018 16:34:17  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:34:17  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【调用轮询接口处理交易请求】
 Fri, 31 Aug 2018 16:34:17  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.ProductCoreTradeService
 Fri, 31 Aug 2018 16:34:17  INFO test_api.py test_api [ line:39 ] 接口请求method:tradeContinueTask
 Fri, 31 Aug 2018 16:34:17  INFO test_api.py test_api [ line:40 ] 接口请求data:""
 Fri, 31 Aug 2018 16:34:18  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {}, 'errCode': '0000', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '申请成功', 'tradeCode': None, 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:34:18  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:None
 Fri, 31 Aug 2018 16:34:18  INFO test_api.py test_api [ line:81 ] 数据库里存在符合预期条件的数据,测试通过:()
 Fri, 31 Aug 2018 16:34:18  INFO test_api.py test_api [ line:84 ] ================结束一次接口请求===========
 Fri, 31 Aug 2018 16:34:18  INFO test_api.py test_api [ line:88 ] 需要等待时间60s发起后续请求
 Fri, 31 Aug 2018 16:34:48  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:34:48  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【卖出后续接口】使用优惠券月月盈产品提前卖出失败
 Fri, 31 Aug 2018 16:34:48  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.ProductCoreTradeService
 Fri, 31 Aug 2018 16:34:48  INFO test_api.py test_api [ line:39 ] 接口请求method:tradeContinue
 Fri, 31 Aug 2018 16:34:48  INFO test_api.py test_api [ line:40 ] 接口请求data:{"serialno":"zcvbr123s12sdf31","isSend":"1",'extFields':{"errCode":"0000", "errMsg":"交易成功", "tranSt":"Y"}}
 Fri, 31 Aug 2018 16:34:48  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {}, 'errCode': 'BC44', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '更新锁状态异常', 'tradeCode': None, 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:34:48  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'F', 'tradeMsg': '浜ゆ槗澶辫触', 'errMsg': '申请成功', 'tradeCode': '0001', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:34:48  INFO test_api.py test_api [ line:56 ] =====开始比对检验返回结果=======
 Fri, 31 Aug 2018 16:34:48  INFO test_api.py test_api [ line:57 ] 全值匹配模式
 Fri, 31 Aug 2018 16:34:48  ERROR test_api.py test_api [ line:62 ] 全值结果比对失败原因为："{'extFields': {}, 'errCode': 'BC44', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '更新锁状态异常', 'tradeCode': None, 'exObjFields': {}, 'key': None}" not found in "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'F', 'tradeMsg': '浜ゆ槗澶辫触', 'errMsg': '申请成功', 'tradeCode': '0001', 'exObjFields': {}, 'key': None}"
Traceback (most recent call last):
  File "H:\python3_apiTest\TestCases\test_api.py", line 59, in test_api
    self.assertIn(str(res),case_data["expected_data"])
  File "F:\python36\lib\unittest\case.py", line 1089, in assertIn
    self.fail(self._formatMessage(msg, standardMsg))
  File "F:\python36\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: "{'extFields': {}, 'errCode': 'BC44', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '更新锁状态异常', 'tradeCode': None, 'exObjFields': {}, 'key': None}" not found in "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'F', 'tradeMsg': '浜ゆ槗澶辫触', 'errMsg': '申请成功', 'tradeCode': '0001', 'exObjFields': {}, 'key': None}"
 Fri, 31 Aug 2018 16:34:48  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:34:48  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【组合卖出】四季甄选产品提前卖出申请
 Fri, 31 Aug 2018 16:34:48  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.ProductCoreTradeService
 Fri, 31 Aug 2018 16:34:48  INFO test_api.py test_api [ line:39 ] 接口请求method:sellToVacco
 Fri, 31 Aug 2018 16:34:48  INFO test_api.py test_api [ line:40 ] 接口请求data:{"refercapno":"5B57DE5B20F7bc4E",
        "reemFlag":"1",
        "selltype":1,
        "periodic":"true",
        "mixProd":"true",
        "bigVCustno":"1597219235",
        "honourFlag":"1",
        "newFlag":"0",
        "partPayment":"false",
        "subquty":"10.00",
        "feetp":"07",
        "feemode":"1",
        "feevalue":"0.01",
        "serialno":"201808311626320454Tk",
        "custno":"1538943811",
        "apkind":"014",
        "subapkind":"014001",
        "apdt":"20180815",
        "aptm":"164500",
        "workdate":"20180815",
        "tradeacco":"000621718538943814",
        "taaccountid":"475A7FB19598436383",
        "tano":"47",
        "productid":"8904",
        "sharetype":"A",
        "accptmd":"1",
        "branchcode":"247000",
        "distributorcode":"247"}
 Fri, 31 Aug 2018 16:34:48  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:34:48  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:34:48  INFO test_api.py test_api [ line:56 ] =====开始比对检验返回结果=======
 Fri, 31 Aug 2018 16:34:48  INFO test_api.py test_api [ line:57 ] 全值匹配模式
 Fri, 31 Aug 2018 16:34:48  INFO test_api.py test_api [ line:60 ] 结果比对成功，测试用例通过
 Fri, 31 Aug 2018 16:34:48  INFO test_api.py test_api [ line:81 ] 数据库里存在符合预期条件的数据,测试通过:()
 Fri, 31 Aug 2018 16:34:48  INFO test_api.py test_api [ line:84 ] ================结束一次接口请求===========
 Fri, 31 Aug 2018 16:34:48  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:34:48  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【调用轮询接口处理交易请求】
 Fri, 31 Aug 2018 16:34:48  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.ProductCoreTradeService
 Fri, 31 Aug 2018 16:34:48  INFO test_api.py test_api [ line:39 ] 接口请求method:tradeContinueTask
 Fri, 31 Aug 2018 16:34:48  INFO test_api.py test_api [ line:40 ] 接口请求data:""
 Fri, 31 Aug 2018 16:34:50  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {}, 'errCode': '0000', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '申请成功', 'tradeCode': None, 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:34:50  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:None
 Fri, 31 Aug 2018 16:34:50  INFO test_api.py test_api [ line:81 ] 数据库里存在符合预期条件的数据,测试通过:()
 Fri, 31 Aug 2018 16:34:50  INFO test_api.py test_api [ line:84 ] ================结束一次接口请求===========
 Fri, 31 Aug 2018 16:34:50  INFO test_api.py test_api [ line:88 ] 需要等待时间60s发起后续请求
 Fri, 31 Aug 2018 16:35:20  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:35:20  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【卖出后续接口】四季甄选产品提前卖出成功
 Fri, 31 Aug 2018 16:35:20  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.ProductCoreTradeService
 Fri, 31 Aug 2018 16:35:20  INFO test_api.py test_api [ line:39 ] 接口请求method:tradeContinue
 Fri, 31 Aug 2018 16:35:20  INFO test_api.py test_api [ line:40 ] 接口请求data:{"serialno":"201808311540590841HD","isSend":"1",'extFields':{"errCode":"0000", "errMsg":"交易成功", "tranSt":"Y"}}
 Fri, 31 Aug 2018 16:35:20  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {}, 'errCode': 'Q015', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '查询交易原单结果为空或失败', 'tradeCode': None, 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:35:20  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功！', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:35:20  INFO test_api.py test_api [ line:56 ] =====开始比对检验返回结果=======
 Fri, 31 Aug 2018 16:35:20  INFO test_api.py test_api [ line:57 ] 全值匹配模式
 Fri, 31 Aug 2018 16:35:20  ERROR test_api.py test_api [ line:62 ] 全值结果比对失败原因为："{'extFields': {}, 'errCode': 'Q015', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '查询交易原单结果为空或失败', 'tradeCode': None, 'exObjFields': {}, 'key': None}" not found in "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功！', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}"
Traceback (most recent call last):
  File "H:\python3_apiTest\TestCases\test_api.py", line 59, in test_api
    self.assertIn(str(res),case_data["expected_data"])
  File "F:\python36\lib\unittest\case.py", line 1089, in assertIn
    self.fail(self._formatMessage(msg, standardMsg))
  File "F:\python36\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: "{'extFields': {}, 'errCode': 'Q015', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '查询交易原单结果为空或失败', 'tradeCode': None, 'exObjFields': {}, 'key': None}" not found in "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功！', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}"
 Fri, 31 Aug 2018 16:35:20  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:35:20  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【组合卖出】四季甄选产品提前卖出申请
 Fri, 31 Aug 2018 16:35:20  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.ProductCoreTradeService
 Fri, 31 Aug 2018 16:35:20  INFO test_api.py test_api [ line:39 ] 接口请求method:sellToVacco
 Fri, 31 Aug 2018 16:35:20  INFO test_api.py test_api [ line:40 ] 接口请求data:{"refercapno":"5B57DE5B20F7bc4E",
        "reemFlag":"1",
        "selltype":1,
        "periodic":"true",
        "mixProd":"true",
        "bigVCustno":"1597219235",
        "honourFlag":"1",
        "newFlag":"0",
        "partPayment":"false",
        "subquty":"10.00",
        "feetp":"07",
        "feemode":"1",
        "feevalue":"0.01",
        "serialno":"201808311626320878Tp",
        "custno":"1538943811",
        "apkind":"014",
        "subapkind":"014001",
        "apdt":"20180815",
        "aptm":"164500",
        "workdate":"20180815",
        "tradeacco":"000621718538943814",
        "taaccountid":"475A7FB19598436383",
        "tano":"47",
        "productid":"8904",
        "sharetype":"A",
        "accptmd":"1",
        "branchcode":"247000",
        "distributorcode":"247"}
 Fri, 31 Aug 2018 16:35:20  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:35:20  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:35:20  INFO test_api.py test_api [ line:56 ] =====开始比对检验返回结果=======
 Fri, 31 Aug 2018 16:35:20  INFO test_api.py test_api [ line:57 ] 全值匹配模式
 Fri, 31 Aug 2018 16:35:20  INFO test_api.py test_api [ line:60 ] 结果比对成功，测试用例通过
 Fri, 31 Aug 2018 16:35:20  INFO test_api.py test_api [ line:81 ] 数据库里存在符合预期条件的数据,测试通过:()
 Fri, 31 Aug 2018 16:35:20  INFO test_api.py test_api [ line:84 ] ================结束一次接口请求===========
 Fri, 31 Aug 2018 16:35:20  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:35:20  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【调用轮询接口处理交易请求】
 Fri, 31 Aug 2018 16:35:20  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.ProductCoreTradeService
 Fri, 31 Aug 2018 16:35:20  INFO test_api.py test_api [ line:39 ] 接口请求method:tradeContinueTask
 Fri, 31 Aug 2018 16:35:20  INFO test_api.py test_api [ line:40 ] 接口请求data:""
 Fri, 31 Aug 2018 16:35:22  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {}, 'errCode': '0000', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '申请成功', 'tradeCode': None, 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:35:22  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:None
 Fri, 31 Aug 2018 16:35:22  INFO test_api.py test_api [ line:81 ] 数据库里存在符合预期条件的数据,测试通过:()
 Fri, 31 Aug 2018 16:35:22  INFO test_api.py test_api [ line:84 ] ================结束一次接口请求===========
 Fri, 31 Aug 2018 16:35:22  INFO test_api.py test_api [ line:88 ] 需要等待时间60s发起后续请求
 Fri, 31 Aug 2018 16:35:52  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:35:52  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【卖出后续接口】四季甄选产品提前卖出失败
 Fri, 31 Aug 2018 16:35:52  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.ProductCoreTradeService
 Fri, 31 Aug 2018 16:35:52  INFO test_api.py test_api [ line:39 ] 接口请求method:tradeContinue
 Fri, 31 Aug 2018 16:35:52  INFO test_api.py test_api [ line:40 ] 接口请求data:{"serialno":"201808311540590273Kt","isSend":"1",'extFields':{"errCode":"0000", "errMsg":"交易成功", "tranSt":"Y"}}
 Fri, 31 Aug 2018 16:35:52  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {}, 'errCode': 'Q015', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '查询交易原单结果为空或失败', 'tradeCode': None, 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:35:52  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'F', 'tradeMsg': '浜ゆ槗澶辫触', 'errMsg': '申请成功', 'tradeCode': '0001', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:35:52  INFO test_api.py test_api [ line:56 ] =====开始比对检验返回结果=======
 Fri, 31 Aug 2018 16:35:52  INFO test_api.py test_api [ line:57 ] 全值匹配模式
 Fri, 31 Aug 2018 16:35:52  ERROR test_api.py test_api [ line:62 ] 全值结果比对失败原因为："{'extFields': {}, 'errCode': 'Q015', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '查询交易原单结果为空或失败', 'tradeCode': None, 'exObjFields': {}, 'key': None}" not found in "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'F', 'tradeMsg': '浜ゆ槗澶辫触', 'errMsg': '申请成功', 'tradeCode': '0001', 'exObjFields': {}, 'key': None}"
Traceback (most recent call last):
  File "H:\python3_apiTest\TestCases\test_api.py", line 59, in test_api
    self.assertIn(str(res),case_data["expected_data"])
  File "F:\python36\lib\unittest\case.py", line 1089, in assertIn
    self.fail(self._formatMessage(msg, standardMsg))
  File "F:\python36\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: "{'extFields': {}, 'errCode': 'Q015', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '查询交易原单结果为空或失败', 'tradeCode': None, 'exObjFields': {}, 'key': None}" not found in "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'F', 'tradeMsg': '浜ゆ槗澶辫触', 'errMsg': '申请成功', 'tradeCode': '0001', 'exObjFields': {}, 'key': None}"
 Fri, 31 Aug 2018 16:35:52  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:35:52  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【组合卖出】使用优惠券四季甄选产品提前卖出申请
 Fri, 31 Aug 2018 16:35:52  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.ProductCoreTradeService
 Fri, 31 Aug 2018 16:35:52  INFO test_api.py test_api [ line:39 ] 接口请求method:sellToVacco
 Fri, 31 Aug 2018 16:35:52  INFO test_api.py test_api [ line:40 ] 接口请求data:{"refercapno":"5B57DE5B20F7bc4E",
        "sellCouponId":"5B569A9A006Abc55",
        "reemFlag":"1",
        "selltype":1,
        "periodic":"true",
        "mixProd":"true",
        "bigVCustno":"1597219235",
        "honourFlag":"1",
        "newFlag":"0",
        "partPayment":"false",
        "subquty":"10.00",
        "feetp":"07",
        "feemode":"1",
        "feevalue":"0.01",
        "serialno":"201808311626320262tN",
        "custno":"1538943811",
        "apkind":"014",
        "subapkind":"014001",
        "apdt":"20180815",
        "aptm":"164500",
        "workdate":"20180815",
        "tradeacco":"000621718538943814",
        "taaccountid":"475A7FB19598436383",
        "tano":"47",
        "productid":"8904",
        "sharetype":"A",
        "accptmd":"1",
        "branchcode":"247000",
        "distributorcode":"247"}
 Fri, 31 Aug 2018 16:35:52  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:35:52  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:35:52  INFO test_api.py test_api [ line:56 ] =====开始比对检验返回结果=======
 Fri, 31 Aug 2018 16:35:52  INFO test_api.py test_api [ line:57 ] 全值匹配模式
 Fri, 31 Aug 2018 16:35:52  INFO test_api.py test_api [ line:60 ] 结果比对成功，测试用例通过
 Fri, 31 Aug 2018 16:35:52  INFO test_api.py test_api [ line:81 ] 数据库里存在符合预期条件的数据,测试通过:()
 Fri, 31 Aug 2018 16:35:52  INFO test_api.py test_api [ line:84 ] ================结束一次接口请求===========
 Fri, 31 Aug 2018 16:35:52  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:35:52  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【调用轮询接口处理交易请求】
 Fri, 31 Aug 2018 16:35:52  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.ProductCoreTradeService
 Fri, 31 Aug 2018 16:35:52  INFO test_api.py test_api [ line:39 ] 接口请求method:tradeContinueTask
 Fri, 31 Aug 2018 16:35:52  INFO test_api.py test_api [ line:40 ] 接口请求data:""
 Fri, 31 Aug 2018 16:35:53  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {}, 'errCode': '0000', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '申请成功', 'tradeCode': None, 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:35:53  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:None
 Fri, 31 Aug 2018 16:35:53  INFO test_api.py test_api [ line:81 ] 数据库里存在符合预期条件的数据,测试通过:()
 Fri, 31 Aug 2018 16:35:53  INFO test_api.py test_api [ line:84 ] ================结束一次接口请求===========
 Fri, 31 Aug 2018 16:35:53  INFO test_api.py test_api [ line:88 ] 需要等待时间60s发起后续请求
 Fri, 31 Aug 2018 16:36:23  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:36:23  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【卖出后续接口】使用优惠券四季甄选产品提前卖出成功
 Fri, 31 Aug 2018 16:36:23  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.ProductCoreTradeService
 Fri, 31 Aug 2018 16:36:23  INFO test_api.py test_api [ line:39 ] 接口请求method:tradeContinue
 Fri, 31 Aug 2018 16:36:23  INFO test_api.py test_api [ line:40 ] 接口请求data:{"serialno":"201808311540590511FT","isSend":"1",'extFields':{"errCode":"0000", "errMsg":"交易成功", "tranSt":"Y"}}
 Fri, 31 Aug 2018 16:36:23  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {}, 'errCode': 'Q015', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '查询交易原单结果为空或失败', 'tradeCode': None, 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:36:23  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功！', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:36:23  INFO test_api.py test_api [ line:56 ] =====开始比对检验返回结果=======
 Fri, 31 Aug 2018 16:36:23  INFO test_api.py test_api [ line:57 ] 全值匹配模式
 Fri, 31 Aug 2018 16:36:23  ERROR test_api.py test_api [ line:62 ] 全值结果比对失败原因为："{'extFields': {}, 'errCode': 'Q015', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '查询交易原单结果为空或失败', 'tradeCode': None, 'exObjFields': {}, 'key': None}" not found in "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功！', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}"
Traceback (most recent call last):
  File "H:\python3_apiTest\TestCases\test_api.py", line 59, in test_api
    self.assertIn(str(res),case_data["expected_data"])
  File "F:\python36\lib\unittest\case.py", line 1089, in assertIn
    self.fail(self._formatMessage(msg, standardMsg))
  File "F:\python36\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: "{'extFields': {}, 'errCode': 'Q015', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '查询交易原单结果为空或失败', 'tradeCode': None, 'exObjFields': {}, 'key': None}" not found in "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功！', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}"
 Fri, 31 Aug 2018 16:36:23  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:36:23  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【组合卖出】使用优惠券四季甄选产品提前卖出申请
 Fri, 31 Aug 2018 16:36:23  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.ProductCoreTradeService
 Fri, 31 Aug 2018 16:36:23  INFO test_api.py test_api [ line:39 ] 接口请求method:sellToVacco
 Fri, 31 Aug 2018 16:36:23  INFO test_api.py test_api [ line:40 ] 接口请求data:{"refercapno":"5B57DE5B20F7bc4E",
        "sellCouponId":"5B569A9A006Abc55",
        "reemFlag":"1",
        "selltype":1,
        "periodic":"true",
        "mixProd":"true",
        "bigVCustno":"1597219235",
        "honourFlag":"1",
        "newFlag":"0",
        "partPayment":"false",
        "subquty":"10.00",
        "feetp":"07",
        "feemode":"1",
        "feevalue":"0.01",
        "serialno":"201808311626320948TK",
        "custno":"1538943811",
        "apkind":"014",
        "subapkind":"014001",
        "apdt":"20180815",
        "aptm":"164500",
        "workdate":"20180815",
        "tradeacco":"000621718538943814",
        "taaccountid":"475A7FB19598436383",
        "tano":"47",
        "productid":"8904",
        "sharetype":"A",
        "accptmd":"1",
        "branchcode":"247000",
        "distributorcode":"247"}
 Fri, 31 Aug 2018 16:36:23  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:36:23  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:36:23  INFO test_api.py test_api [ line:56 ] =====开始比对检验返回结果=======
 Fri, 31 Aug 2018 16:36:23  INFO test_api.py test_api [ line:57 ] 全值匹配模式
 Fri, 31 Aug 2018 16:36:23  INFO test_api.py test_api [ line:60 ] 结果比对成功，测试用例通过
 Fri, 31 Aug 2018 16:36:23  INFO test_api.py test_api [ line:81 ] 数据库里存在符合预期条件的数据,测试通过:()
 Fri, 31 Aug 2018 16:36:23  INFO test_api.py test_api [ line:84 ] ================结束一次接口请求===========
 Fri, 31 Aug 2018 16:36:23  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:36:23  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【调用轮询接口处理交易请求】
 Fri, 31 Aug 2018 16:36:23  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.ProductCoreTradeService
 Fri, 31 Aug 2018 16:36:23  INFO test_api.py test_api [ line:39 ] 接口请求method:tradeContinueTask
 Fri, 31 Aug 2018 16:36:23  INFO test_api.py test_api [ line:40 ] 接口请求data:""
 Fri, 31 Aug 2018 16:36:25  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {}, 'errCode': '0000', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '申请成功', 'tradeCode': None, 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:36:25  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:None
 Fri, 31 Aug 2018 16:36:25  INFO test_api.py test_api [ line:81 ] 数据库里存在符合预期条件的数据,测试通过:()
 Fri, 31 Aug 2018 16:36:25  INFO test_api.py test_api [ line:84 ] ================结束一次接口请求===========
 Fri, 31 Aug 2018 16:36:25  INFO test_api.py test_api [ line:88 ] 需要等待时间60s发起后续请求
 Fri, 31 Aug 2018 16:36:55  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:36:55  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【卖出后续接口】使用优惠券四季甄选产品提前卖出失败
 Fri, 31 Aug 2018 16:36:55  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.ProductCoreTradeService
 Fri, 31 Aug 2018 16:36:55  INFO test_api.py test_api [ line:39 ] 接口请求method:tradeContinue
 Fri, 31 Aug 2018 16:36:55  INFO test_api.py test_api [ line:40 ] 接口请求data:{"serialno":"201808311540590315UC","isSend":"1",'extFields':{"errCode":"0000", "errMsg":"交易成功", "tranSt":"Y"}}
 Fri, 31 Aug 2018 16:36:55  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {}, 'errCode': 'Q015', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '查询交易原单结果为空或失败', 'tradeCode': None, 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:36:55  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'F', 'tradeMsg': '浜ゆ槗澶辫触', 'errMsg': '申请成功', 'tradeCode': '0001', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:36:55  INFO test_api.py test_api [ line:56 ] =====开始比对检验返回结果=======
 Fri, 31 Aug 2018 16:36:55  INFO test_api.py test_api [ line:57 ] 全值匹配模式
 Fri, 31 Aug 2018 16:36:55  ERROR test_api.py test_api [ line:62 ] 全值结果比对失败原因为："{'extFields': {}, 'errCode': 'Q015', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '查询交易原单结果为空或失败', 'tradeCode': None, 'exObjFields': {}, 'key': None}" not found in "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'F', 'tradeMsg': '浜ゆ槗澶辫触', 'errMsg': '申请成功', 'tradeCode': '0001', 'exObjFields': {}, 'key': None}"
Traceback (most recent call last):
  File "H:\python3_apiTest\TestCases\test_api.py", line 59, in test_api
    self.assertIn(str(res),case_data["expected_data"])
  File "F:\python36\lib\unittest\case.py", line 1089, in assertIn
    self.fail(self._formatMessage(msg, standardMsg))
  File "F:\python36\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: "{'extFields': {}, 'errCode': 'Q015', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '查询交易原单结果为空或失败', 'tradeCode': None, 'exObjFields': {}, 'key': None}" not found in "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'F', 'tradeMsg': '浜ゆ槗澶辫触', 'errMsg': '申请成功', 'tradeCode': '0001', 'exObjFields': {}, 'key': None}"
 Fri, 31 Aug 2018 16:36:55  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:36:55  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【组合卖出】月月盈产品开放日卖出申请
 Fri, 31 Aug 2018 16:36:55  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.ProductCoreTradeService
 Fri, 31 Aug 2018 16:36:55  INFO test_api.py test_api [ line:39 ] 接口请求method:sellToVacco
 Fri, 31 Aug 2018 16:36:55  INFO test_api.py test_api [ line:40 ] 接口请求data:{"refercapno":"5B569C0E0225bc08",
        "sellCouponId":"5B569A9A006Abc55",
        "reemFlag":"0",
        "selltype":1,
        "periodic":"true",
        "mixProd":"true",
        "bigVCustno":"1503136940",
        "honourFlag":"1",
        "newFlag":"0",
        "partPayment":"false",
        "subquty":"10.00",
        "feetp":"07",
        "feemode":"1",
        "feevalue":"0.0",
        "serialno":"201808311626320710hS",
        "custno":"1538943811",
        "apkind":"014",
        "subapkind":"014001",
        "apdt":"20180831",
        "aptm":"164500",
        "workdate":"20180831",
        "tradeacco":"000621718538943814",
        "taaccountid":"475A7FB19598436383",
        "tano":"47",
        "productid":"8802",
        "sharetype":"A",
        "accptmd":"1",
        "branchcode":"247000",
        "distributorcode":"247"}
 Fri, 31 Aug 2018 16:36:55  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'F', 'tradeMsg': '客户持有的该产品不在开放日之内', 'errMsg': '申请成功', 'tradeCode': 'B006', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:36:55  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:36:55  INFO test_api.py test_api [ line:56 ] =====开始比对检验返回结果=======
 Fri, 31 Aug 2018 16:36:55  INFO test_api.py test_api [ line:57 ] 全值匹配模式
 Fri, 31 Aug 2018 16:36:55  ERROR test_api.py test_api [ line:62 ] 全值结果比对失败原因为："{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'F', 'tradeMsg': '客户持有的该产品不在开放日之内', 'errMsg': '申请成功', 'tradeCode': 'B006', 'exObjFields': {}, 'key': None}" not found in "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}"
Traceback (most recent call last):
  File "H:\python3_apiTest\TestCases\test_api.py", line 59, in test_api
    self.assertIn(str(res),case_data["expected_data"])
  File "F:\python36\lib\unittest\case.py", line 1089, in assertIn
    self.fail(self._formatMessage(msg, standardMsg))
  File "F:\python36\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'F', 'tradeMsg': '客户持有的该产品不在开放日之内', 'errMsg': '申请成功', 'tradeCode': 'B006', 'exObjFields': {}, 'key': None}" not found in "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}"
 Fri, 31 Aug 2018 16:36:55  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:36:55  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【调用轮询接口处理交易请求】
 Fri, 31 Aug 2018 16:36:55  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.ProductCoreTradeService
 Fri, 31 Aug 2018 16:36:55  INFO test_api.py test_api [ line:39 ] 接口请求method:tradeContinueTask
 Fri, 31 Aug 2018 16:36:55  INFO test_api.py test_api [ line:40 ] 接口请求data:""
 Fri, 31 Aug 2018 16:36:56  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {}, 'errCode': '0000', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '申请成功', 'tradeCode': None, 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:36:56  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:None
 Fri, 31 Aug 2018 16:36:56  INFO test_api.py test_api [ line:81 ] 数据库里存在符合预期条件的数据,测试通过:()
 Fri, 31 Aug 2018 16:36:56  INFO test_api.py test_api [ line:84 ] ================结束一次接口请求===========
 Fri, 31 Aug 2018 16:36:56  INFO test_api.py test_api [ line:88 ] 需要等待时间60s发起后续请求
 Fri, 31 Aug 2018 16:37:26  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:37:26  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【卖出后续接口】月月盈产品开放日卖出成功
 Fri, 31 Aug 2018 16:37:26  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.ProductCoreTradeService
 Fri, 31 Aug 2018 16:37:26  INFO test_api.py test_api [ line:39 ] 接口请求method:tradeContinue
 Fri, 31 Aug 2018 16:37:26  INFO test_api.py test_api [ line:40 ] 接口请求data:{"serialno":"201808311540590277bT","isSend":"1",'extFields':{"errCode":"0000", "errMsg":"交易成功", "tranSt":"Y"}}
 Fri, 31 Aug 2018 16:37:26  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {}, 'errCode': 'Q015', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '查询交易原单结果为空或失败', 'tradeCode': None, 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:37:26  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功！', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:37:26  INFO test_api.py test_api [ line:56 ] =====开始比对检验返回结果=======
 Fri, 31 Aug 2018 16:37:26  INFO test_api.py test_api [ line:57 ] 全值匹配模式
 Fri, 31 Aug 2018 16:37:26  ERROR test_api.py test_api [ line:62 ] 全值结果比对失败原因为："{'extFields': {}, 'errCode': 'Q015', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '查询交易原单结果为空或失败', 'tradeCode': None, 'exObjFields': {}, 'key': None}" not found in "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功！', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}"
Traceback (most recent call last):
  File "H:\python3_apiTest\TestCases\test_api.py", line 59, in test_api
    self.assertIn(str(res),case_data["expected_data"])
  File "F:\python36\lib\unittest\case.py", line 1089, in assertIn
    self.fail(self._formatMessage(msg, standardMsg))
  File "F:\python36\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: "{'extFields': {}, 'errCode': 'Q015', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '查询交易原单结果为空或失败', 'tradeCode': None, 'exObjFields': {}, 'key': None}" not found in "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功！', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}"
 Fri, 31 Aug 2018 16:37:26  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:37:26  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【组合卖出】月月盈产品开放日卖出申请
 Fri, 31 Aug 2018 16:37:26  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.ProductCoreTradeService
 Fri, 31 Aug 2018 16:37:26  INFO test_api.py test_api [ line:39 ] 接口请求method:sellToVacco
 Fri, 31 Aug 2018 16:37:26  INFO test_api.py test_api [ line:40 ] 接口请求data:{"refercapno":"5B569C0E0225bc08",
        "sellCouponId":"5B569A9A006Abc55",
        "reemFlag":"0",
        "selltype":1,
        "periodic":"true",
        "mixProd":"true",
        "bigVCustno":"1503136940",
        "honourFlag":"1",
        "newFlag":"0",
        "partPayment":"false",
        "subquty":"10.00",
        "feetp":"07",
        "feemode":"1",
        "feevalue":"0.0",
        "serialno":"201808311626320133tc",
        "custno":"1538943811",
        "apkind":"014",
        "subapkind":"014001",
        "apdt":"20180831",
        "aptm":"164500",
        "workdate":"20180831",
        "tradeacco":"000621718538943814",
        "taaccountid":"475A7FB19598436383",
        "tano":"47",
        "productid":"8802",
        "sharetype":"A",
        "accptmd":"1",
        "branchcode":"247000",
        "distributorcode":"247"}
 Fri, 31 Aug 2018 16:37:26  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'F', 'tradeMsg': '客户持有的该产品不在开放日之内', 'errMsg': '申请成功', 'tradeCode': 'B006', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:37:26  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:37:26  INFO test_api.py test_api [ line:56 ] =====开始比对检验返回结果=======
 Fri, 31 Aug 2018 16:37:26  INFO test_api.py test_api [ line:57 ] 全值匹配模式
 Fri, 31 Aug 2018 16:37:26  ERROR test_api.py test_api [ line:62 ] 全值结果比对失败原因为："{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'F', 'tradeMsg': '客户持有的该产品不在开放日之内', 'errMsg': '申请成功', 'tradeCode': 'B006', 'exObjFields': {}, 'key': None}" not found in "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}"
Traceback (most recent call last):
  File "H:\python3_apiTest\TestCases\test_api.py", line 59, in test_api
    self.assertIn(str(res),case_data["expected_data"])
  File "F:\python36\lib\unittest\case.py", line 1089, in assertIn
    self.fail(self._formatMessage(msg, standardMsg))
  File "F:\python36\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'F', 'tradeMsg': '客户持有的该产品不在开放日之内', 'errMsg': '申请成功', 'tradeCode': 'B006', 'exObjFields': {}, 'key': None}" not found in "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}"
 Fri, 31 Aug 2018 16:37:26  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:37:26  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【调用轮询接口处理交易请求】
 Fri, 31 Aug 2018 16:37:26  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.ProductCoreTradeService
 Fri, 31 Aug 2018 16:37:26  INFO test_api.py test_api [ line:39 ] 接口请求method:tradeContinueTask
 Fri, 31 Aug 2018 16:37:26  INFO test_api.py test_api [ line:40 ] 接口请求data:""
 Fri, 31 Aug 2018 16:37:28  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {}, 'errCode': '0000', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '申请成功', 'tradeCode': None, 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:37:28  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:None
 Fri, 31 Aug 2018 16:37:28  INFO test_api.py test_api [ line:81 ] 数据库里存在符合预期条件的数据,测试通过:()
 Fri, 31 Aug 2018 16:37:28  INFO test_api.py test_api [ line:84 ] ================结束一次接口请求===========
 Fri, 31 Aug 2018 16:37:28  INFO test_api.py test_api [ line:88 ] 需要等待时间60s发起后续请求
 Fri, 31 Aug 2018 16:37:58  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:37:58  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【卖出后续接口】月月盈产品开放日卖出失败
 Fri, 31 Aug 2018 16:37:58  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.ProductCoreTradeService
 Fri, 31 Aug 2018 16:37:58  INFO test_api.py test_api [ line:39 ] 接口请求method:tradeContinue
 Fri, 31 Aug 2018 16:37:58  INFO test_api.py test_api [ line:40 ] 接口请求data:{"serialno":"${}","isSend":"1",'extFields':{"errCode":"0000", "errMsg":"交易成功", "tranSt":"Y"}}
 Fri, 31 Aug 2018 16:37:58  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {}, 'errCode': 'Q015', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '查询交易原单结果为空或失败', 'tradeCode': None, 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:37:58  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'F', 'tradeMsg': '浜ゆ槗澶辫触', 'errMsg': '申请成功', 'tradeCode': '0001', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:37:58  INFO test_api.py test_api [ line:56 ] =====开始比对检验返回结果=======
 Fri, 31 Aug 2018 16:37:58  INFO test_api.py test_api [ line:57 ] 全值匹配模式
 Fri, 31 Aug 2018 16:37:58  ERROR test_api.py test_api [ line:62 ] 全值结果比对失败原因为："{'extFields': {}, 'errCode': 'Q015', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '查询交易原单结果为空或失败', 'tradeCode': None, 'exObjFields': {}, 'key': None}" not found in "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'F', 'tradeMsg': '浜ゆ槗澶辫触', 'errMsg': '申请成功', 'tradeCode': '0001', 'exObjFields': {}, 'key': None}"
Traceback (most recent call last):
  File "H:\python3_apiTest\TestCases\test_api.py", line 59, in test_api
    self.assertIn(str(res),case_data["expected_data"])
  File "F:\python36\lib\unittest\case.py", line 1089, in assertIn
    self.fail(self._formatMessage(msg, standardMsg))
  File "F:\python36\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: "{'extFields': {}, 'errCode': 'Q015', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '查询交易原单结果为空或失败', 'tradeCode': None, 'exObjFields': {}, 'key': None}" not found in "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'F', 'tradeMsg': '浜ゆ槗澶辫触', 'errMsg': '申请成功', 'tradeCode': '0001', 'exObjFields': {}, 'key': None}"
 Fri, 31 Aug 2018 16:37:58  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:37:58  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【组合卖出】月月盈产品不在开放日卖出
 Fri, 31 Aug 2018 16:37:58  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.ProductCoreTradeService
 Fri, 31 Aug 2018 16:37:58  INFO test_api.py test_api [ line:39 ] 接口请求method:sellToVacco
 Fri, 31 Aug 2018 16:37:58  INFO test_api.py test_api [ line:40 ] 接口请求data:{"refercapno":"5B569C0E0225bc08",
        "sellCouponId":"5B569A9A006Abc55",
        "reemFlag":"0",
        "selltype":1,
        "periodic":"true",
        "mixProd":"true",
        "bigVCustno":"1503136940",
        "honourFlag":"1",
        "newFlag":"0",
        "partPayment":"false",
        "subquty":"10.00",
        "feetp":"07",
        "feemode":"1",
        "feevalue":"0.0",
        "serialno":"201808311626320824Lt",
        "custno":"1538943811",
        "apkind":"014",
        "subapkind":"014001",
        "apdt":"20170820",
        "aptm":"164500",
        "workdate":"20170820",
        "tradeacco":"000621718538943814",
        "taaccountid":"475A7FB19598436383",
        "tano":"47",
        "productid":"8802",
        "sharetype":"A",
        "accptmd":"1",
        "branchcode":"247000",
        "distributorcode":"247"}
 Fri, 31 Aug 2018 16:37:58  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'F', 'tradeMsg': '客户持有的该产品不在开放日之内', 'errMsg': '申请成功', 'tradeCode': 'B006', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:37:58  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'F', 'tradeMsg': '客户持有的该产品不在开放日之内', 'errMsg': '申请成功', 'tradeCode': 'B006', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:37:58  INFO test_api.py test_api [ line:56 ] =====开始比对检验返回结果=======
 Fri, 31 Aug 2018 16:37:58  INFO test_api.py test_api [ line:57 ] 全值匹配模式
 Fri, 31 Aug 2018 16:37:58  INFO test_api.py test_api [ line:60 ] 结果比对成功，测试用例通过
 Fri, 31 Aug 2018 16:37:58  INFO test_api.py test_api [ line:81 ] 数据库里存在符合预期条件的数据,测试通过:()
 Fri, 31 Aug 2018 16:37:58  INFO test_api.py test_api [ line:84 ] ================结束一次接口请求===========
 Fri, 31 Aug 2018 16:37:58  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:37:58  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【组合卖出】季季升产品开放日卖出申请
 Fri, 31 Aug 2018 16:37:58  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.ProductCoreTradeService
 Fri, 31 Aug 2018 16:37:58  INFO test_api.py test_api [ line:39 ] 接口请求method:sellToVacco
 Fri, 31 Aug 2018 16:37:58  INFO test_api.py test_api [ line:40 ] 接口请求data:{"refercapno":"5B57DD261DFCbc4E",
        "reemFlag":"0",
        "selltype":1,
        "periodic":"true",
        "mixProd":"true",
        "bigVCustno":"1503257540",
        "honourFlag":"1",
        "newFlag":"0",
        "partPayment":"false",
        "subquty":"10.00",
        "feetp":"07",
        "feemode":"1",
        "feevalue":"0.0",
        "serialno":"201808311626320740qI",
        "custno":"1538943811",
        "apkind":"014",
        "subapkind":"014001",
        "apdt":"20180831",
        "aptm":"164500",
        "workdate":"20180831",
        "tradeacco":"000621718538943814",
        "taaccountid":"475A7FB19598436383",
        "tano":"47",
        "productid":"8901",
        "sharetype":"A",
        "accptmd":"1",
        "branchcode":"247000",
        "distributorcode":"247"}
 Fri, 31 Aug 2018 16:37:58  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'F', 'tradeMsg': '客户持有的该产品不在开放日之内', 'errMsg': '申请成功', 'tradeCode': 'B006', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:37:58  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:37:58  INFO test_api.py test_api [ line:56 ] =====开始比对检验返回结果=======
 Fri, 31 Aug 2018 16:37:58  INFO test_api.py test_api [ line:57 ] 全值匹配模式
 Fri, 31 Aug 2018 16:37:58  ERROR test_api.py test_api [ line:62 ] 全值结果比对失败原因为："{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'F', 'tradeMsg': '客户持有的该产品不在开放日之内', 'errMsg': '申请成功', 'tradeCode': 'B006', 'exObjFields': {}, 'key': None}" not found in "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}"
Traceback (most recent call last):
  File "H:\python3_apiTest\TestCases\test_api.py", line 59, in test_api
    self.assertIn(str(res),case_data["expected_data"])
  File "F:\python36\lib\unittest\case.py", line 1089, in assertIn
    self.fail(self._formatMessage(msg, standardMsg))
  File "F:\python36\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'F', 'tradeMsg': '客户持有的该产品不在开放日之内', 'errMsg': '申请成功', 'tradeCode': 'B006', 'exObjFields': {}, 'key': None}" not found in "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}"
 Fri, 31 Aug 2018 16:37:58  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:37:58  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【调用轮询接口处理交易请求】
 Fri, 31 Aug 2018 16:37:58  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.ProductCoreTradeService
 Fri, 31 Aug 2018 16:37:58  INFO test_api.py test_api [ line:39 ] 接口请求method:tradeContinueTask
 Fri, 31 Aug 2018 16:37:58  INFO test_api.py test_api [ line:40 ] 接口请求data:""
 Fri, 31 Aug 2018 16:37:59  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {}, 'errCode': '0000', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '申请成功', 'tradeCode': None, 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:37:59  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:None
 Fri, 31 Aug 2018 16:37:59  INFO test_api.py test_api [ line:81 ] 数据库里存在符合预期条件的数据,测试通过:()
 Fri, 31 Aug 2018 16:37:59  INFO test_api.py test_api [ line:84 ] ================结束一次接口请求===========
 Fri, 31 Aug 2018 16:37:59  INFO test_api.py test_api [ line:88 ] 需要等待时间60s发起后续请求
 Fri, 31 Aug 2018 16:38:29  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:38:29  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【卖出后续接口】季季升产品开放日卖出成功
 Fri, 31 Aug 2018 16:38:29  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.ProductCoreTradeService
 Fri, 31 Aug 2018 16:38:29  INFO test_api.py test_api [ line:39 ] 接口请求method:tradeContinue
 Fri, 31 Aug 2018 16:38:29  INFO test_api.py test_api [ line:40 ] 接口请求data:{"serialno":"20180831154059010bC","isSend":"1",'extFields':{"errCode":"0000", "errMsg":"交易成功", "tranSt":"Y"}}
 Fri, 31 Aug 2018 16:38:29  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {}, 'errCode': 'Q015', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '查询交易原单结果为空或失败', 'tradeCode': None, 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:38:29  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功！', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:38:29  INFO test_api.py test_api [ line:56 ] =====开始比对检验返回结果=======
 Fri, 31 Aug 2018 16:38:29  INFO test_api.py test_api [ line:57 ] 全值匹配模式
 Fri, 31 Aug 2018 16:38:29  ERROR test_api.py test_api [ line:62 ] 全值结果比对失败原因为："{'extFields': {}, 'errCode': 'Q015', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '查询交易原单结果为空或失败', 'tradeCode': None, 'exObjFields': {}, 'key': None}" not found in "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功！', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}"
Traceback (most recent call last):
  File "H:\python3_apiTest\TestCases\test_api.py", line 59, in test_api
    self.assertIn(str(res),case_data["expected_data"])
  File "F:\python36\lib\unittest\case.py", line 1089, in assertIn
    self.fail(self._formatMessage(msg, standardMsg))
  File "F:\python36\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: "{'extFields': {}, 'errCode': 'Q015', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '查询交易原单结果为空或失败', 'tradeCode': None, 'exObjFields': {}, 'key': None}" not found in "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功！', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}"
 Fri, 31 Aug 2018 16:38:29  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:38:29  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【组合卖出】季季升产品开放日卖出申请
 Fri, 31 Aug 2018 16:38:29  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.ProductCoreTradeService
 Fri, 31 Aug 2018 16:38:29  INFO test_api.py test_api [ line:39 ] 接口请求method:sellToVacco
 Fri, 31 Aug 2018 16:38:29  INFO test_api.py test_api [ line:40 ] 接口请求data:{"refercapno":"5B57DD261DFCbc4E",
        "reemFlag":"0",
        "selltype":1,
        "periodic":"true",
        "mixProd":"true",
        "bigVCustno":"1503257540",
        "honourFlag":"1",
        "newFlag":"0",
        "partPayment":"false",
        "subquty":"10.00",
        "feetp":"07",
        "feemode":"1",
        "feevalue":"0.0",
        "serialno":"201808311626320846jT",
        "custno":"1538943811",
        "apkind":"014",
        "subapkind":"014001",
        "apdt":"20180831",
        "aptm":"164500",
        "workdate":"20180831",
        "tradeacco":"000621718538943814",
        "taaccountid":"475A7FB19598436383",
        "tano":"47",
        "productid":"8901",
        "sharetype":"A",
        "accptmd":"1",
        "branchcode":"247000",
        "distributorcode":"247"}
 Fri, 31 Aug 2018 16:38:29  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'F', 'tradeMsg': '客户持有的该产品不在开放日之内', 'errMsg': '申请成功', 'tradeCode': 'B006', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:38:29  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:38:29  INFO test_api.py test_api [ line:56 ] =====开始比对检验返回结果=======
 Fri, 31 Aug 2018 16:38:29  INFO test_api.py test_api [ line:57 ] 全值匹配模式
 Fri, 31 Aug 2018 16:38:29  ERROR test_api.py test_api [ line:62 ] 全值结果比对失败原因为："{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'F', 'tradeMsg': '客户持有的该产品不在开放日之内', 'errMsg': '申请成功', 'tradeCode': 'B006', 'exObjFields': {}, 'key': None}" not found in "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}"
Traceback (most recent call last):
  File "H:\python3_apiTest\TestCases\test_api.py", line 59, in test_api
    self.assertIn(str(res),case_data["expected_data"])
  File "F:\python36\lib\unittest\case.py", line 1089, in assertIn
    self.fail(self._formatMessage(msg, standardMsg))
  File "F:\python36\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'F', 'tradeMsg': '客户持有的该产品不在开放日之内', 'errMsg': '申请成功', 'tradeCode': 'B006', 'exObjFields': {}, 'key': None}" not found in "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}"
 Fri, 31 Aug 2018 16:38:29  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:38:29  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【调用轮询接口处理交易请求】
 Fri, 31 Aug 2018 16:38:29  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.ProductCoreTradeService
 Fri, 31 Aug 2018 16:38:29  INFO test_api.py test_api [ line:39 ] 接口请求method:tradeContinueTask
 Fri, 31 Aug 2018 16:38:29  INFO test_api.py test_api [ line:40 ] 接口请求data:""
 Fri, 31 Aug 2018 16:38:31  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {}, 'errCode': '0000', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '申请成功', 'tradeCode': None, 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:38:31  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:None
 Fri, 31 Aug 2018 16:38:31  INFO test_api.py test_api [ line:81 ] 数据库里存在符合预期条件的数据,测试通过:()
 Fri, 31 Aug 2018 16:38:31  INFO test_api.py test_api [ line:84 ] ================结束一次接口请求===========
 Fri, 31 Aug 2018 16:38:31  INFO test_api.py test_api [ line:88 ] 需要等待时间60s发起后续请求
 Fri, 31 Aug 2018 16:39:01  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:39:01  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【卖出后续接口】季季升产品开放日卖出失败
 Fri, 31 Aug 2018 16:39:01  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.ProductCoreTradeService
 Fri, 31 Aug 2018 16:39:01  INFO test_api.py test_api [ line:39 ] 接口请求method:tradeContinue
 Fri, 31 Aug 2018 16:39:01  INFO test_api.py test_api [ line:40 ] 接口请求data:{"serialno":"201808311540590445Uc","isSend":"1",'extFields':{"errCode":"0000", "errMsg":"交易成功", "tranSt":"Y"}}
 Fri, 31 Aug 2018 16:39:01  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {}, 'errCode': 'Q015', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '查询交易原单结果为空或失败', 'tradeCode': None, 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:39:01  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'F', 'tradeMsg': '浜ゆ槗澶辫触', 'errMsg': '申请成功', 'tradeCode': '0001', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:39:01  INFO test_api.py test_api [ line:56 ] =====开始比对检验返回结果=======
 Fri, 31 Aug 2018 16:39:01  INFO test_api.py test_api [ line:57 ] 全值匹配模式
 Fri, 31 Aug 2018 16:39:01  ERROR test_api.py test_api [ line:62 ] 全值结果比对失败原因为："{'extFields': {}, 'errCode': 'Q015', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '查询交易原单结果为空或失败', 'tradeCode': None, 'exObjFields': {}, 'key': None}" not found in "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'F', 'tradeMsg': '浜ゆ槗澶辫触', 'errMsg': '申请成功', 'tradeCode': '0001', 'exObjFields': {}, 'key': None}"
Traceback (most recent call last):
  File "H:\python3_apiTest\TestCases\test_api.py", line 59, in test_api
    self.assertIn(str(res),case_data["expected_data"])
  File "F:\python36\lib\unittest\case.py", line 1089, in assertIn
    self.fail(self._formatMessage(msg, standardMsg))
  File "F:\python36\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: "{'extFields': {}, 'errCode': 'Q015', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '查询交易原单结果为空或失败', 'tradeCode': None, 'exObjFields': {}, 'key': None}" not found in "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'F', 'tradeMsg': '浜ゆ槗澶辫触', 'errMsg': '申请成功', 'tradeCode': '0001', 'exObjFields': {}, 'key': None}"
 Fri, 31 Aug 2018 16:39:01  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:39:01  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【组合卖出】季季升产品不在开放日卖出
 Fri, 31 Aug 2018 16:39:01  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.ProductCoreTradeService
 Fri, 31 Aug 2018 16:39:01  INFO test_api.py test_api [ line:39 ] 接口请求method:sellToVacco
 Fri, 31 Aug 2018 16:39:01  INFO test_api.py test_api [ line:40 ] 接口请求data:{"refercapno":"5B57DD261DFCbc4E",
        "reemFlag":"0",
        "selltype":1,
        "periodic":"true",
        "mixProd":"true",
        "bigVCustno":"1503257540",
        "honourFlag":"1",
        "newFlag":"0",
        "partPayment":"false",
        "subquty":"10.00",
        "feetp":"07",
        "feemode":"1",
        "feevalue":"0.0",
        "serialno":"201808311626320677LS",
        "custno":"1538943811",
        "apkind":"014",
        "subapkind":"014001",
        "apdt":"20170820",
        "aptm":"164500",
        "workdate":"20170820",
        "tradeacco":"000621718538943814",
        "taaccountid":"475A7FB19598436383",
        "tano":"47",
        "productid":"8901",
        "sharetype":"A",
        "accptmd":"1",
        "branchcode":"247000",
        "distributorcode":"247"}
 Fri, 31 Aug 2018 16:39:01  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'F', 'tradeMsg': '客户持有的该产品不在开放日之内', 'errMsg': '申请成功', 'tradeCode': 'B006', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:39:01  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'F', 'tradeMsg': '客户持有的该产品不在开放日之内', 'errMsg': '申请成功', 'tradeCode': 'B006', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:39:01  INFO test_api.py test_api [ line:56 ] =====开始比对检验返回结果=======
 Fri, 31 Aug 2018 16:39:01  INFO test_api.py test_api [ line:57 ] 全值匹配模式
 Fri, 31 Aug 2018 16:39:01  INFO test_api.py test_api [ line:60 ] 结果比对成功，测试用例通过
 Fri, 31 Aug 2018 16:39:01  INFO test_api.py test_api [ line:81 ] 数据库里存在符合预期条件的数据,测试通过:()
 Fri, 31 Aug 2018 16:39:01  INFO test_api.py test_api [ line:84 ] ================结束一次接口请求===========
 Fri, 31 Aug 2018 16:39:01  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:39:01  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【组合卖出】四季甄选产品开放日卖出申请
 Fri, 31 Aug 2018 16:39:01  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.ProductCoreTradeService
 Fri, 31 Aug 2018 16:39:01  INFO test_api.py test_api [ line:39 ] 接口请求method:sellToVacco
 Fri, 31 Aug 2018 16:39:01  INFO test_api.py test_api [ line:40 ] 接口请求data:{"refercapno":"5B7A57C6008EbcA4",
        "reemFlag":"0",
        "selltype":1,
        "periodic":"true",
        "mixProd":"true",
        "bigVCustno":"1597219235",
        "honourFlag":"1",
        "newFlag":"0",
        "partPayment":"false",
        "subquty":"10.00",
        "feetp":"07",
        "feemode":"1",
        "feevalue":"0.0",
        "serialno":"201808311626320615RH",
        "custno":"1538943811",
        "apkind":"014",
        "subapkind":"014001",
        "apdt":"20180831",
        "aptm":"164500",
        "workdate":"20180831",
        "tradeacco":"000621718538943814",
        "taaccountid":"475A7FB19598436383",
        "tano":"47",
        "productid":"8904",
        "sharetype":"A",
        "accptmd":"1",
        "branchcode":"247000",
        "distributorcode":"247"}
 Fri, 31 Aug 2018 16:39:01  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'F', 'tradeMsg': '客户持有的该产品不在开放日之内', 'errMsg': '申请成功', 'tradeCode': 'B006', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:39:01  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:39:01  INFO test_api.py test_api [ line:56 ] =====开始比对检验返回结果=======
 Fri, 31 Aug 2018 16:39:01  INFO test_api.py test_api [ line:57 ] 全值匹配模式
 Fri, 31 Aug 2018 16:39:01  ERROR test_api.py test_api [ line:62 ] 全值结果比对失败原因为："{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'F', 'tradeMsg': '客户持有的该产品不在开放日之内', 'errMsg': '申请成功', 'tradeCode': 'B006', 'exObjFields': {}, 'key': None}" not found in "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}"
Traceback (most recent call last):
  File "H:\python3_apiTest\TestCases\test_api.py", line 59, in test_api
    self.assertIn(str(res),case_data["expected_data"])
  File "F:\python36\lib\unittest\case.py", line 1089, in assertIn
    self.fail(self._formatMessage(msg, standardMsg))
  File "F:\python36\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'F', 'tradeMsg': '客户持有的该产品不在开放日之内', 'errMsg': '申请成功', 'tradeCode': 'B006', 'exObjFields': {}, 'key': None}" not found in "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}"
 Fri, 31 Aug 2018 16:39:01  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:39:01  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【调用轮询接口处理交易请求】
 Fri, 31 Aug 2018 16:39:01  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.ProductCoreTradeService
 Fri, 31 Aug 2018 16:39:01  INFO test_api.py test_api [ line:39 ] 接口请求method:tradeContinueTask
 Fri, 31 Aug 2018 16:39:01  INFO test_api.py test_api [ line:40 ] 接口请求data:""
 Fri, 31 Aug 2018 16:39:02  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {}, 'errCode': '0000', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '申请成功', 'tradeCode': None, 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:39:02  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:None
 Fri, 31 Aug 2018 16:39:02  INFO test_api.py test_api [ line:81 ] 数据库里存在符合预期条件的数据,测试通过:()
 Fri, 31 Aug 2018 16:39:02  INFO test_api.py test_api [ line:84 ] ================结束一次接口请求===========
 Fri, 31 Aug 2018 16:39:02  INFO test_api.py test_api [ line:88 ] 需要等待时间60s发起后续请求
 Fri, 31 Aug 2018 16:39:32  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:39:32  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【卖出后续接口】四季甄选产品开放日卖出成功
 Fri, 31 Aug 2018 16:39:32  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.ProductCoreTradeService
 Fri, 31 Aug 2018 16:39:32  INFO test_api.py test_api [ line:39 ] 接口请求method:tradeContinue
 Fri, 31 Aug 2018 16:39:32  INFO test_api.py test_api [ line:40 ] 接口请求data:{"serialno":"20180831154059072Lw","isSend":"1",'extFields':{"errCode":"0000", "errMsg":"交易成功", "tranSt":"Y"}}
 Fri, 31 Aug 2018 16:39:32  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {}, 'errCode': 'Q015', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '查询交易原单结果为空或失败', 'tradeCode': None, 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:39:32  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功！', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:39:32  INFO test_api.py test_api [ line:56 ] =====开始比对检验返回结果=======
 Fri, 31 Aug 2018 16:39:32  INFO test_api.py test_api [ line:57 ] 全值匹配模式
 Fri, 31 Aug 2018 16:39:32  ERROR test_api.py test_api [ line:62 ] 全值结果比对失败原因为："{'extFields': {}, 'errCode': 'Q015', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '查询交易原单结果为空或失败', 'tradeCode': None, 'exObjFields': {}, 'key': None}" not found in "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功！', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}"
Traceback (most recent call last):
  File "H:\python3_apiTest\TestCases\test_api.py", line 59, in test_api
    self.assertIn(str(res),case_data["expected_data"])
  File "F:\python36\lib\unittest\case.py", line 1089, in assertIn
    self.fail(self._formatMessage(msg, standardMsg))
  File "F:\python36\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: "{'extFields': {}, 'errCode': 'Q015', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '查询交易原单结果为空或失败', 'tradeCode': None, 'exObjFields': {}, 'key': None}" not found in "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功！', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}"
 Fri, 31 Aug 2018 16:39:32  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:39:32  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【组合卖出】四季甄选产品开放日卖出申请
 Fri, 31 Aug 2018 16:39:32  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.ProductCoreTradeService
 Fri, 31 Aug 2018 16:39:32  INFO test_api.py test_api [ line:39 ] 接口请求method:sellToVacco
 Fri, 31 Aug 2018 16:39:32  INFO test_api.py test_api [ line:40 ] 接口请求data:{"refercapno":"5B7A57C6008EbcA4",
        "reemFlag":"0",
        "selltype":1,
        "periodic":"true",
        "mixProd":"true",
        "bigVCustno":"1597219235",
        "honourFlag":"1",
        "newFlag":"0",
        "partPayment":"false",
        "subquty":"10.00",
        "feetp":"07",
        "feemode":"1",
        "feevalue":"0.0",
        "serialno":"201808311626320667uN",
        "custno":"1538943811",
        "apkind":"014",
        "subapkind":"014001",
        "apdt":"20180831",
        "aptm":"164500",
        "workdate":"20180831",
        "tradeacco":"000621718538943814",
        "taaccountid":"475A7FB19598436383",
        "tano":"47",
        "productid":"8904",
        "sharetype":"A",
        "accptmd":"1",
        "branchcode":"247000",
        "distributorcode":"247"}
 Fri, 31 Aug 2018 16:39:32  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'F', 'tradeMsg': '客户持有的该产品不在开放日之内', 'errMsg': '申请成功', 'tradeCode': 'B006', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:39:32  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:39:32  INFO test_api.py test_api [ line:56 ] =====开始比对检验返回结果=======
 Fri, 31 Aug 2018 16:39:32  INFO test_api.py test_api [ line:57 ] 全值匹配模式
 Fri, 31 Aug 2018 16:39:32  ERROR test_api.py test_api [ line:62 ] 全值结果比对失败原因为："{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'F', 'tradeMsg': '客户持有的该产品不在开放日之内', 'errMsg': '申请成功', 'tradeCode': 'B006', 'exObjFields': {}, 'key': None}" not found in "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}"
Traceback (most recent call last):
  File "H:\python3_apiTest\TestCases\test_api.py", line 59, in test_api
    self.assertIn(str(res),case_data["expected_data"])
  File "F:\python36\lib\unittest\case.py", line 1089, in assertIn
    self.fail(self._formatMessage(msg, standardMsg))
  File "F:\python36\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'F', 'tradeMsg': '客户持有的该产品不在开放日之内', 'errMsg': '申请成功', 'tradeCode': 'B006', 'exObjFields': {}, 'key': None}" not found in "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'Y', 'tradeMsg': '申请成功', 'errMsg': '申请成功', 'tradeCode': '0000', 'exObjFields': {}, 'key': None}"
 Fri, 31 Aug 2018 16:39:32  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:39:32  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【调用轮询接口处理交易请求】
 Fri, 31 Aug 2018 16:39:32  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.ProductCoreTradeService
 Fri, 31 Aug 2018 16:39:32  INFO test_api.py test_api [ line:39 ] 接口请求method:tradeContinueTask
 Fri, 31 Aug 2018 16:39:32  INFO test_api.py test_api [ line:40 ] 接口请求data:""
 Fri, 31 Aug 2018 16:39:34  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {}, 'errCode': '0000', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '申请成功', 'tradeCode': None, 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:39:34  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:None
 Fri, 31 Aug 2018 16:39:34  INFO test_api.py test_api [ line:81 ] 数据库里存在符合预期条件的数据,测试通过:()
 Fri, 31 Aug 2018 16:39:34  INFO test_api.py test_api [ line:84 ] ================结束一次接口请求===========
 Fri, 31 Aug 2018 16:39:34  INFO test_api.py test_api [ line:88 ] 需要等待时间60s发起后续请求
 Fri, 31 Aug 2018 16:40:04  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:40:04  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【卖出后续接口】四季甄选产品开放日卖出失败
 Fri, 31 Aug 2018 16:40:04  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.ProductCoreTradeService
 Fri, 31 Aug 2018 16:40:04  INFO test_api.py test_api [ line:39 ] 接口请求method:tradeContinue
 Fri, 31 Aug 2018 16:40:04  INFO test_api.py test_api [ line:40 ] 接口请求data:{"serialno":"201808311540590157Fn","isSend":"1",'extFields':{"errCode":"0000", "errMsg":"交易成功", "tranSt":"Y"}}
 Fri, 31 Aug 2018 16:40:04  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {}, 'errCode': 'Q015', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '查询交易原单结果为空或失败', 'tradeCode': None, 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:40:04  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'F', 'tradeMsg': '浜ゆ槗澶辫触', 'errMsg': '申请成功', 'tradeCode': '0001', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:40:04  INFO test_api.py test_api [ line:56 ] =====开始比对检验返回结果=======
 Fri, 31 Aug 2018 16:40:04  INFO test_api.py test_api [ line:57 ] 全值匹配模式
 Fri, 31 Aug 2018 16:40:04  ERROR test_api.py test_api [ line:62 ] 全值结果比对失败原因为："{'extFields': {}, 'errCode': 'Q015', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '查询交易原单结果为空或失败', 'tradeCode': None, 'exObjFields': {}, 'key': None}" not found in "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'F', 'tradeMsg': '浜ゆ槗澶辫触', 'errMsg': '申请成功', 'tradeCode': '0001', 'exObjFields': {}, 'key': None}"
Traceback (most recent call last):
  File "H:\python3_apiTest\TestCases\test_api.py", line 59, in test_api
    self.assertIn(str(res),case_data["expected_data"])
  File "F:\python36\lib\unittest\case.py", line 1089, in assertIn
    self.fail(self._formatMessage(msg, standardMsg))
  File "F:\python36\lib\unittest\case.py", line 670, in fail
    raise self.failureException(msg)
AssertionError: "{'extFields': {}, 'errCode': 'Q015', 'tradeStatus': None, 'tradeMsg': None, 'errMsg': '查询交易原单结果为空或失败', 'tradeCode': None, 'exObjFields': {}, 'key': None}" not found in "{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'F', 'tradeMsg': '浜ゆ槗澶辫触', 'errMsg': '申请成功', 'tradeCode': '0001', 'exObjFields': {}, 'key': None}"
 Fri, 31 Aug 2018 16:40:04  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:40:04  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【组合卖出】四季甄选产品不在开放日卖出
 Fri, 31 Aug 2018 16:40:04  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cts.service.ProductCoreTradeService
 Fri, 31 Aug 2018 16:40:04  INFO test_api.py test_api [ line:39 ] 接口请求method:sellToVacco
 Fri, 31 Aug 2018 16:40:04  INFO test_api.py test_api [ line:40 ] 接口请求data:{"refercapno":"5B7A57C6008EbcA4",
        "reemFlag":"0",
        "selltype":1,
        "periodic":"true",
        "mixProd":"true",
        "bigVCustno":"1597219235",
        "honourFlag":"1",
        "newFlag":"0",
        "partPayment":"false",
        "subquty":"10.00",
        "feetp":"07",
        "feemode":"1",
        "feevalue":"0.0",
        "serialno":"201808311626320211Ne",
        "custno":"1538943811",
        "apkind":"014",
        "subapkind":"014001",
        "apdt":"20170820",
        "aptm":"164500",
        "workdate":"20170820",
        "tradeacco":"000621718538943814",
        "taaccountid":"475A7FB19598436383",
        "tano":"47",
        "productid":"8904",
        "sharetype":"A",
        "accptmd":"1",
        "branchcode":"247000",
        "distributorcode":"247"}
 Fri, 31 Aug 2018 16:40:04  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'F', 'tradeMsg': '客户持有的该产品不在开放日之内', 'errMsg': '申请成功', 'tradeCode': 'B006', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:40:04  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:{'extFields': {}, 'errCode': '0000', 'tradeStatus': 'F', 'tradeMsg': '客户持有的该产品不在开放日之内', 'errMsg': '申请成功', 'tradeCode': 'B006', 'exObjFields': {}, 'key': None}
 Fri, 31 Aug 2018 16:40:04  INFO test_api.py test_api [ line:56 ] =====开始比对检验返回结果=======
 Fri, 31 Aug 2018 16:40:04  INFO test_api.py test_api [ line:57 ] 全值匹配模式
 Fri, 31 Aug 2018 16:40:04  INFO test_api.py test_api [ line:60 ] 结果比对成功，测试用例通过
 Fri, 31 Aug 2018 16:40:04  INFO test_api.py test_api [ line:81 ] 数据库里存在符合预期条件的数据,测试通过:()
 Fri, 31 Aug 2018 16:40:04  INFO test_api.py test_api [ line:84 ] ================结束一次接口请求===========
 Fri, 31 Aug 2018 16:40:04  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:40:04  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【账户注册】企业客户有推荐人成功注册
 Fri, 31 Aug 2018 16:40:04  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cif.service.CifCustService
 Fri, 31 Aug 2018 16:40:04  INFO test_api.py test_api [ line:39 ] 接口请求method:openAccount
 Fri, 31 Aug 2018 16:40:04  INFO test_api.py test_api [ line:40 ] 接口请求data:{"serialno":"20180831162632098YM",
        "invTp":"1",
        "mobileNo":"13760200147",
        "loginPasswd":"202cb962ac59075b964b07152d234b70",
        "phoneCode":"1111",
        "refererMobile":"15021996508",
        "accofrom":"1",
        "distributorCode":"247",
        "branchcode":"24700",
        "email":"744700813@qq.com",
        "oneRecommend":"1"
}
 Fri, 31 Aug 2018 16:40:07  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {}, 'custNo': '1573723258', 'headImgUrl': None, 'openId': None, 'nickName': None, 'errCode': '0000', 'errMsg': '交易成功', 'mobileNo': '13760200147', 'key': None, 'token': None, 'status': 'Y'}
 Fri, 31 Aug 2018 16:40:07  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:{.*'errCode': '0000', 'errMsg': '交易成功'.* 'status': 'Y'}
 Fri, 31 Aug 2018 16:40:07  INFO test_api.py test_api [ line:65 ] =====开始比对检验返回结果=======
 Fri, 31 Aug 2018 16:40:07  INFO test_api.py test_api [ line:66 ] 正则表达式匹配模式
 Fri, 31 Aug 2018 16:40:07  INFO test_api.py test_api [ line:69 ] 结果匹配，测试用例通过
 Fri, 31 Aug 2018 16:40:07  INFO test_api.py test_api [ line:81 ] 数据库里存在符合预期条件的数据,测试通过:[{'CUSTNO': '1573723258', 'INVTP': '1', 'INVNM': None, 'IDTP': None, 'IDNO': None, 'MOBILENO': '13760200147', 'EMAIL': '744700813@qq.com', 'CUSTST': 'N', 'OPENDT': '20180831', 'INSERTTIMESTAMP': datetime.datetime(2018, 8, 31, 16, 40, 7), 'UPDATETIMESTAMP': datetime.datetime(2018, 8, 31, 16, 40, 7)}]
 Fri, 31 Aug 2018 16:40:07  INFO test_api.py test_api [ line:84 ] ================结束一次接口请求===========
 Fri, 31 Aug 2018 16:40:07  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:40:07  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【账户注册】个人客户无推荐人成功注册
 Fri, 31 Aug 2018 16:40:07  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cif.service.CifCustService
 Fri, 31 Aug 2018 16:40:07  INFO test_api.py test_api [ line:39 ] 接口请求method:openAccount
 Fri, 31 Aug 2018 16:40:07  INFO test_api.py test_api [ line:40 ] 接口请求data:{"serialno":"201808311626320892qU",
        "invTp":"2",
        "mobileNo":"13760200148",
        "loginPasswd":"202cb962ac59075b964b07152d234b70",
        "phoneCode":"1111",
        "accofrom":"1",
        "distributorCode":"247",
        "branchcode":"24700",
        "email":"744700813@qq.com",
        "oneRecommend":"0"
}
 Fri, 31 Aug 2018 16:40:08  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {}, 'custNo': '1573723264', 'headImgUrl': None, 'openId': None, 'nickName': None, 'errCode': '0000', 'errMsg': '交易成功', 'mobileNo': '13760200148', 'key': None, 'token': None, 'status': 'Y'}
 Fri, 31 Aug 2018 16:40:08  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:{.*'errCode': '0000', 'errMsg': '交易成功'.* 'status': 'Y'}
 Fri, 31 Aug 2018 16:40:08  INFO test_api.py test_api [ line:65 ] =====开始比对检验返回结果=======
 Fri, 31 Aug 2018 16:40:08  INFO test_api.py test_api [ line:66 ] 正则表达式匹配模式
 Fri, 31 Aug 2018 16:40:08  INFO test_api.py test_api [ line:69 ] 结果匹配，测试用例通过
 Fri, 31 Aug 2018 16:40:08  INFO test_api.py test_api [ line:81 ] 数据库里存在符合预期条件的数据,测试通过:[{'CUSTNO': '1573723264', 'INVTP': '2', 'INVNM': None, 'IDTP': None, 'IDNO': None, 'MOBILENO': '13760200148', 'EMAIL': '744700813@qq.com', 'CUSTST': 'N', 'OPENDT': '20180831', 'INSERTTIMESTAMP': datetime.datetime(2018, 8, 31, 16, 40, 9), 'UPDATETIMESTAMP': datetime.datetime(2018, 8, 31, 16, 40, 9)}]
 Fri, 31 Aug 2018 16:40:08  INFO test_api.py test_api [ line:84 ] ================结束一次接口请求===========
 Fri, 31 Aug 2018 16:40:08  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:40:08  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【账户注册】注册手机号为空
 Fri, 31 Aug 2018 16:40:08  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cif.service.CifCustService
 Fri, 31 Aug 2018 16:40:08  INFO test_api.py test_api [ line:39 ] 接口请求method:openAccount
 Fri, 31 Aug 2018 16:40:08  INFO test_api.py test_api [ line:40 ] 接口请求data:{"serialno":"201808311626320864Em",
        "invTp":"1",
        "mobileNo":"",
        "loginPasswd":"202cb962ac59075b964b07152d234b70",
        "phoneCode":"1111",
        "refererMobile":"15021996508",
        "accofrom":"1",
        "distributorCode":"247",
        "branchcode":"24700",
        "email":"744700813@qq.com",
        "oneRecommend":"1"
}
 Fri, 31 Aug 2018 16:40:08  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {}, 'custNo': None, 'headImgUrl': None, 'openId': None, 'nickName': None, 'errCode': 'A030', 'errMsg': '开户入参验证参数为空[手机号码]', 'mobileNo': None, 'key': None, 'token': None, 'status': 'F'}
 Fri, 31 Aug 2018 16:40:08  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:{'extFields': {}, 'custNo': None, 'headImgUrl': None, 'openId': None, 'nickName': None, 'errCode': 'A030', 'errMsg': '开户入参验证参数为空[手机号码]', 'mobileNo': None, 'key': None, 'token': None, 'status': 'F'}
 Fri, 31 Aug 2018 16:40:08  INFO test_api.py test_api [ line:56 ] =====开始比对检验返回结果=======
 Fri, 31 Aug 2018 16:40:08  INFO test_api.py test_api [ line:57 ] 全值匹配模式
 Fri, 31 Aug 2018 16:40:08  INFO test_api.py test_api [ line:60 ] 结果比对成功，测试用例通过
 Fri, 31 Aug 2018 16:40:08  INFO test_api.py test_api [ line:84 ] ================结束一次接口请求===========
 Fri, 31 Aug 2018 16:40:08  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:40:08  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【账户注册】登录密码为空
 Fri, 31 Aug 2018 16:40:08  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cif.service.CifCustService
 Fri, 31 Aug 2018 16:40:08  INFO test_api.py test_api [ line:39 ] 接口请求method:openAccount
 Fri, 31 Aug 2018 16:40:08  INFO test_api.py test_api [ line:40 ] 接口请求data:{"serialno":"201808311626320878vm",
        "invTp":"1",
        "mobileNo":"13760200149",
        "loginPasswd":"",
        "phoneCode":"1111",
        "refererMobile":"15021996508",
        "accofrom":"1",
        "distributorCode":"247",
        "branchcode":"24700",
        "email":"744700813@qq.com",
        "oneRecommend":"1"
}
 Fri, 31 Aug 2018 16:40:11  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {}, 'custNo': None, 'headImgUrl': None, 'openId': None, 'nickName': None, 'errCode': 'A050', 'errMsg': '开户入参验证参数为空[登录密码]', 'mobileNo': None, 'key': None, 'token': None, 'status': 'F'}
 Fri, 31 Aug 2018 16:40:11  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:{'extFields': {}, 'custNo': None, 'headImgUrl': None, 'openId': None, 'nickName': None, 'errCode': 'A050', 'errMsg': '开户入参验证参数为空[登录密码]', 'mobileNo': None, 'key': None, 'token': None, 'status': 'F'}
 Fri, 31 Aug 2018 16:40:11  INFO test_api.py test_api [ line:56 ] =====开始比对检验返回结果=======
 Fri, 31 Aug 2018 16:40:11  INFO test_api.py test_api [ line:57 ] 全值匹配模式
 Fri, 31 Aug 2018 16:40:11  INFO test_api.py test_api [ line:60 ] 结果比对成功，测试用例通过
 Fri, 31 Aug 2018 16:40:11  INFO test_api.py test_api [ line:84 ] ================结束一次接口请求===========
 Fri, 31 Aug 2018 16:40:11  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:40:11  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【账户注册】注册手机号少于11位
 Fri, 31 Aug 2018 16:40:11  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cif.service.CifCustService
 Fri, 31 Aug 2018 16:40:11  INFO test_api.py test_api [ line:39 ] 接口请求method:openAccount
 Fri, 31 Aug 2018 16:40:11  INFO test_api.py test_api [ line:40 ] 接口请求data:{"serialno":"201808311626320623xL",
        "invTp":"1",
        "mobileNo":"1502199644",
        "loginPasswd":"202cb962ac59075b964b07152d234b70",
        "phoneCode":"1111",
        "refererMobile":"15021996508",
        "accofrom":"1",
        "distributorCode":"247",
        "branchcode":"24700",
        "email":"744700813@qq.com",
        "oneRecommend":"1"
}
 Fri, 31 Aug 2018 16:40:11  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {}, 'custNo': None, 'headImgUrl': None, 'openId': None, 'nickName': None, 'errCode': 'A013', 'errMsg': '开户入参验证参数错误[手机号码]', 'mobileNo': None, 'key': None, 'token': None, 'status': 'F'}
 Fri, 31 Aug 2018 16:40:11  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:{'extFields': {}, 'custNo': None, 'headImgUrl': None, 'openId': None, 'nickName': None, 'errCode': 'A013', 'errMsg': '开户入参验证参数错误[手机号码]', 'mobileNo': None, 'key': None, 'token': None, 'status': 'F'}
 Fri, 31 Aug 2018 16:40:11  INFO test_api.py test_api [ line:56 ] =====开始比对检验返回结果=======
 Fri, 31 Aug 2018 16:40:11  INFO test_api.py test_api [ line:57 ] 全值匹配模式
 Fri, 31 Aug 2018 16:40:11  INFO test_api.py test_api [ line:60 ] 结果比对成功，测试用例通过
 Fri, 31 Aug 2018 16:40:11  INFO test_api.py test_api [ line:84 ] ================结束一次接口请求===========
 Fri, 31 Aug 2018 16:40:11  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:40:11  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【账户注册】注册手机号大于11位
 Fri, 31 Aug 2018 16:40:11  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cif.service.CifCustService
 Fri, 31 Aug 2018 16:40:11  INFO test_api.py test_api [ line:39 ] 接口请求method:openAccount
 Fri, 31 Aug 2018 16:40:11  INFO test_api.py test_api [ line:40 ] 接口请求data:{"serialno":"201808311626320466qi",
        "invTp":"1",
        "mobileNo":"150219964489",
        "loginPasswd":"202cb962ac59075b964b07152d234b70",
        "phoneCode":"1111",
        "refererMobile":"15021996508",
        "accofrom":"1",
        "distributorCode":"247",
        "branchcode":"24700",
        "email":"744700813@qq.com",
        "oneRecommend":"1"
}
 Fri, 31 Aug 2018 16:40:11  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {}, 'custNo': None, 'headImgUrl': None, 'openId': None, 'nickName': None, 'errCode': 'A013', 'errMsg': '开户入参验证参数错误[手机号码]', 'mobileNo': None, 'key': None, 'token': None, 'status': 'F'}
 Fri, 31 Aug 2018 16:40:11  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:{'extFields': {}, 'custNo': None, 'headImgUrl': None, 'openId': None, 'nickName': None, 'errCode': 'A013', 'errMsg': '开户入参验证参数错误[手机号码]', 'mobileNo': None, 'key': None, 'token': None, 'status': 'F'}
 Fri, 31 Aug 2018 16:40:11  INFO test_api.py test_api [ line:56 ] =====开始比对检验返回结果=======
 Fri, 31 Aug 2018 16:40:11  INFO test_api.py test_api [ line:57 ] 全值匹配模式
 Fri, 31 Aug 2018 16:40:11  INFO test_api.py test_api [ line:60 ] 结果比对成功，测试用例通过
 Fri, 31 Aug 2018 16:40:11  INFO test_api.py test_api [ line:84 ] ================结束一次接口请求===========
 Fri, 31 Aug 2018 16:40:11  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:40:11  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【账户注册】注册手机号含特殊字符
 Fri, 31 Aug 2018 16:40:11  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cif.service.CifCustService
 Fri, 31 Aug 2018 16:40:11  INFO test_api.py test_api [ line:39 ] 接口请求method:openAccount
 Fri, 31 Aug 2018 16:40:11  INFO test_api.py test_api [ line:40 ] 接口请求data:{"serialno":"20180831162632051Ws",
        "invTp":"1",
        "mobileNo":"15021996@44",
        "loginPasswd":"202cb962ac59075b964b07152d234b70",
        "phoneCode":"1111",
        "refererMobile":"15021996508",
        "accofrom":"1",
        "distributorCode":"247",
        "branchcode":"24700",
        "email":"744700813@qq.com",
        "oneRecommend":"1"
}
 Fri, 31 Aug 2018 16:40:11  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {}, 'custNo': None, 'headImgUrl': None, 'openId': None, 'nickName': None, 'errCode': 'A013', 'errMsg': '开户入参验证参数错误[手机号码]', 'mobileNo': None, 'key': None, 'token': None, 'status': 'F'}
 Fri, 31 Aug 2018 16:40:11  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:{'extFields': {}, 'custNo': None, 'headImgUrl': None, 'openId': None, 'nickName': None, 'errCode': 'A013', 'errMsg': '开户入参验证参数错误[手机号码]', 'mobileNo': None, 'key': None, 'token': None, 'status': 'F'}
 Fri, 31 Aug 2018 16:40:11  INFO test_api.py test_api [ line:56 ] =====开始比对检验返回结果=======
 Fri, 31 Aug 2018 16:40:11  INFO test_api.py test_api [ line:57 ] 全值匹配模式
 Fri, 31 Aug 2018 16:40:11  INFO test_api.py test_api [ line:60 ] 结果比对成功，测试用例通过
 Fri, 31 Aug 2018 16:40:11  INFO test_api.py test_api [ line:84 ] ================结束一次接口请求===========
 Fri, 31 Aug 2018 16:40:11  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:40:11  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【账户注册】注册手机号含空格
 Fri, 31 Aug 2018 16:40:11  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cif.service.CifCustService
 Fri, 31 Aug 2018 16:40:11  INFO test_api.py test_api [ line:39 ] 接口请求method:openAccount
 Fri, 31 Aug 2018 16:40:11  INFO test_api.py test_api [ line:40 ] 接口请求data:{"serialno":"201808311626320201Xm",
        "invTp":"1",
        "mobileNo":"15021996 44",
        "loginPasswd":"202cb962ac59075b964b07152d234b70",
        "phoneCode":"1111",
        "refererMobile":"15021996508",
        "accofrom":"1",
        "distributorCode":"247",
        "branchcode":"24700",
        "email":"744700813@qq.com",
        "oneRecommend":"1"
}
 Fri, 31 Aug 2018 16:40:11  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {}, 'custNo': None, 'headImgUrl': None, 'openId': None, 'nickName': None, 'errCode': 'A013', 'errMsg': '开户入参验证参数错误[手机号码]', 'mobileNo': None, 'key': None, 'token': None, 'status': 'F'}
 Fri, 31 Aug 2018 16:40:11  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:{'extFields': {}, 'custNo': None, 'headImgUrl': None, 'openId': None, 'nickName': None, 'errCode': 'A013', 'errMsg': '开户入参验证参数错误[手机号码]', 'mobileNo': None, 'key': None, 'token': None, 'status': 'F'}
 Fri, 31 Aug 2018 16:40:11  INFO test_api.py test_api [ line:56 ] =====开始比对检验返回结果=======
 Fri, 31 Aug 2018 16:40:11  INFO test_api.py test_api [ line:57 ] 全值匹配模式
 Fri, 31 Aug 2018 16:40:11  INFO test_api.py test_api [ line:60 ] 结果比对成功，测试用例通过
 Fri, 31 Aug 2018 16:40:11  INFO test_api.py test_api [ line:84 ] ================结束一次接口请求===========
 Fri, 31 Aug 2018 16:40:11  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:40:11  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【账户注册】用户已注册
 Fri, 31 Aug 2018 16:40:11  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cif.service.CifCustService
 Fri, 31 Aug 2018 16:40:11  INFO test_api.py test_api [ line:39 ] 接口请求method:openAccount
 Fri, 31 Aug 2018 16:40:11  INFO test_api.py test_api [ line:40 ] 接口请求data:{"serialno":"201808311626320971QU",
        "invTp":"1",
        "mobileNo":"13760200147",
        "loginPasswd":"202cb962ac59075b964b07152d234b70",
        "phoneCode":"1111",
        "refererMobile":"15021996508",
        "accofrom":"1",
        "distributorCode":"247",
        "branchcode":"24700",
        "email":"744700813@qq.com",
        "oneRecommend":"1"
}
 Fri, 31 Aug 2018 16:40:11  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'extFields': {}, 'custNo': None, 'headImgUrl': None, 'openId': None, 'nickName': None, 'errCode': 'B011', 'errMsg': '开户业务验证失败[该手机号已注册]', 'mobileNo': None, 'key': None, 'token': None, 'status': 'F'}
 Fri, 31 Aug 2018 16:40:11  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:{'extFields': {}, 'custNo': None, 'headImgUrl': None, 'openId': None, 'nickName': None, 'errCode': 'B011', 'errMsg': '开户业务验证失败[该手机号已注册]', 'mobileNo': None, 'key': None, 'token': None, 'status': 'F'}
 Fri, 31 Aug 2018 16:40:11  INFO test_api.py test_api [ line:56 ] =====开始比对检验返回结果=======
 Fri, 31 Aug 2018 16:40:11  INFO test_api.py test_api [ line:57 ] 全值匹配模式
 Fri, 31 Aug 2018 16:40:11  INFO test_api.py test_api [ line:60 ] 结果比对成功，测试用例通过
 Fri, 31 Aug 2018 16:40:11  INFO test_api.py test_api [ line:84 ] ================结束一次接口请求===========
 Fri, 31 Aug 2018 16:40:11  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:40:11  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【账户登录】账户官网登录成功
 Fri, 31 Aug 2018 16:40:11  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cif.service.CifPassportService
 Fri, 31 Aug 2018 16:40:11  INFO test_api.py test_api [ line:39 ] 接口请求method:passportLogin
 Fri, 31 Aug 2018 16:40:11  INFO test_api.py test_api [ line:40 ] 接口请求data:{"loginName":"13760200147",
        "loginPwd":"202cb962ac59075b964b07152d234b70",
        "accoFrom":"1",
}
 Fri, 31 Aug 2018 16:40:12  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'custNo': '1573723258', 'openId': None, 'nickName': None, 'loginpwdErrMax': 5, 'errMsg': '交易成功', 'mobileNo': '13760200147', 'loginpwdErr': 1, 'token': None, 'extFields': {}, 'headImgUrl': None, 'invtp': '1', 'errCode': '0000', 'key': None, 'status': 'Y'}
 Fri, 31 Aug 2018 16:40:12  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:{.*'errMsg': '交易成功'.* 'errCode': '0000'.*'status': 'Y'}
 Fri, 31 Aug 2018 16:40:12  INFO test_api.py test_api [ line:65 ] =====开始比对检验返回结果=======
 Fri, 31 Aug 2018 16:40:12  INFO test_api.py test_api [ line:66 ] 正则表达式匹配模式
 Fri, 31 Aug 2018 16:40:12  INFO test_api.py test_api [ line:69 ] 结果匹配，测试用例通过
 Fri, 31 Aug 2018 16:40:12  INFO test_api.py test_api [ line:84 ] ================结束一次接口请求===========
 Fri, 31 Aug 2018 16:40:12  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:40:12  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【账户登录】账户柜台登录成功
 Fri, 31 Aug 2018 16:40:12  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cif.service.CifPassportService
 Fri, 31 Aug 2018 16:40:12  INFO test_api.py test_api [ line:39 ] 接口请求method:passportLogin
 Fri, 31 Aug 2018 16:40:12  INFO test_api.py test_api [ line:40 ] 接口请求data:{"loginName":"13760200148",
        "loginPwd":"202cb962ac59075b964b07152d234b70",
        "accoFrom":"1",
}
 Fri, 31 Aug 2018 16:40:12  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'custNo': '1573723264', 'openId': None, 'nickName': None, 'loginpwdErrMax': 5, 'errMsg': '交易成功', 'mobileNo': '13760200148', 'loginpwdErr': 1, 'token': None, 'extFields': {}, 'headImgUrl': None, 'invtp': '2', 'errCode': '0000', 'key': None, 'status': 'Y'}
 Fri, 31 Aug 2018 16:40:12  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:{.*'errMsg': '交易成功'.* 'errCode': '0000'.*'status': 'Y'}
 Fri, 31 Aug 2018 16:40:12  INFO test_api.py test_api [ line:65 ] =====开始比对检验返回结果=======
 Fri, 31 Aug 2018 16:40:12  INFO test_api.py test_api [ line:66 ] 正则表达式匹配模式
 Fri, 31 Aug 2018 16:40:12  INFO test_api.py test_api [ line:69 ] 结果匹配，测试用例通过
 Fri, 31 Aug 2018 16:40:12  INFO test_api.py test_api [ line:84 ] ================结束一次接口请求===========
 Fri, 31 Aug 2018 16:40:12  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:40:12  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【账户登录】账户手机登录成功
 Fri, 31 Aug 2018 16:40:12  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cif.service.CifPassportService
 Fri, 31 Aug 2018 16:40:12  INFO test_api.py test_api [ line:39 ] 接口请求method:passportLogin
 Fri, 31 Aug 2018 16:40:12  INFO test_api.py test_api [ line:40 ] 接口请求data:{"loginName":"13760200147",
        "loginPwd":"202cb962ac59075b964b07152d234b70",
        "accoFrom":"1",
}
 Fri, 31 Aug 2018 16:40:12  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'custNo': '1573723258', 'openId': None, 'nickName': None, 'loginpwdErrMax': 5, 'errMsg': '交易成功', 'mobileNo': '13760200147', 'loginpwdErr': 1, 'token': None, 'extFields': {}, 'headImgUrl': None, 'invtp': '1', 'errCode': '0000', 'key': None, 'status': 'Y'}
 Fri, 31 Aug 2018 16:40:12  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:{.*'errMsg': '交易成功'.* 'errCode': '0000'.*'status': 'Y'}
 Fri, 31 Aug 2018 16:40:12  INFO test_api.py test_api [ line:65 ] =====开始比对检验返回结果=======
 Fri, 31 Aug 2018 16:40:12  INFO test_api.py test_api [ line:66 ] 正则表达式匹配模式
 Fri, 31 Aug 2018 16:40:12  INFO test_api.py test_api [ line:69 ] 结果匹配，测试用例通过
 Fri, 31 Aug 2018 16:40:12  INFO test_api.py test_api [ line:84 ] ================结束一次接口请求===========
 Fri, 31 Aug 2018 16:40:12  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:40:12  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【账户登录】账户企业版登录成功
 Fri, 31 Aug 2018 16:40:12  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cif.service.CifPassportService
 Fri, 31 Aug 2018 16:40:12  INFO test_api.py test_api [ line:39 ] 接口请求method:passportLogin
 Fri, 31 Aug 2018 16:40:12  INFO test_api.py test_api [ line:40 ] 接口请求data:{"loginName":"13760200147",
        "loginPwd":"202cb962ac59075b964b07152d234b70",
        "accoFrom":"1",
}
 Fri, 31 Aug 2018 16:40:12  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'custNo': '1573723258', 'openId': None, 'nickName': None, 'loginpwdErrMax': 5, 'errMsg': '交易成功', 'mobileNo': '13760200147', 'loginpwdErr': 1, 'token': None, 'extFields': {}, 'headImgUrl': None, 'invtp': '1', 'errCode': '0000', 'key': None, 'status': 'Y'}
 Fri, 31 Aug 2018 16:40:12  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:{.*'errMsg': '交易成功'.* 'errCode': '0000'.*'status': 'Y'}
 Fri, 31 Aug 2018 16:40:12  INFO test_api.py test_api [ line:65 ] =====开始比对检验返回结果=======
 Fri, 31 Aug 2018 16:40:12  INFO test_api.py test_api [ line:66 ] 正则表达式匹配模式
 Fri, 31 Aug 2018 16:40:12  INFO test_api.py test_api [ line:69 ] 结果匹配，测试用例通过
 Fri, 31 Aug 2018 16:40:12  INFO test_api.py test_api [ line:84 ] ================结束一次接口请求===========
 Fri, 31 Aug 2018 16:40:12  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:40:12  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【账户登录】账户微信登录成功
 Fri, 31 Aug 2018 16:40:12  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cif.service.CifPassportService
 Fri, 31 Aug 2018 16:40:12  INFO test_api.py test_api [ line:39 ] 接口请求method:passportLogin
 Fri, 31 Aug 2018 16:40:12  INFO test_api.py test_api [ line:40 ] 接口请求data:{"loginName":"13760200147",
        "loginPwd":"202cb962ac59075b964b07152d234b70",
        "accoFrom":"1",
}
 Fri, 31 Aug 2018 16:40:12  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'custNo': '1573723258', 'openId': None, 'nickName': None, 'loginpwdErrMax': 5, 'errMsg': '交易成功', 'mobileNo': '13760200147', 'loginpwdErr': 1, 'token': None, 'extFields': {}, 'headImgUrl': None, 'invtp': '1', 'errCode': '0000', 'key': None, 'status': 'Y'}
 Fri, 31 Aug 2018 16:40:12  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:{.*'errMsg': '交易成功'.* 'errCode': '0000'.*'status': 'Y'}
 Fri, 31 Aug 2018 16:40:12  INFO test_api.py test_api [ line:65 ] =====开始比对检验返回结果=======
 Fri, 31 Aug 2018 16:40:12  INFO test_api.py test_api [ line:66 ] 正则表达式匹配模式
 Fri, 31 Aug 2018 16:40:12  INFO test_api.py test_api [ line:69 ] 结果匹配，测试用例通过
 Fri, 31 Aug 2018 16:40:12  INFO test_api.py test_api [ line:84 ] ================结束一次接口请求===========
 Fri, 31 Aug 2018 16:40:12  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:40:12  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【账户登录】用户名为空
 Fri, 31 Aug 2018 16:40:12  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cif.service.CifPassportService
 Fri, 31 Aug 2018 16:40:12  INFO test_api.py test_api [ line:39 ] 接口请求method:passportLogin
 Fri, 31 Aug 2018 16:40:12  INFO test_api.py test_api [ line:40 ] 接口请求data:{"loginName":"",
        "loginPwd":"202cb962ac59075b964b07152d234b70",
        "accoFrom":"1",
}
 Fri, 31 Aug 2018 16:40:12  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'custNo': None, 'openId': None, 'nickName': None, 'loginpwdErrMax': 0, 'errMsg': '通行证登陆入参验证参数为空[登陆账号]', 'mobileNo': None, 'loginpwdErr': 0, 'token': None, 'extFields': {}, 'headImgUrl': None, 'invtp': None, 'errCode': 'A112', 'key': None, 'status': 'F'}
 Fri, 31 Aug 2018 16:40:12  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:{'custNo': None, 'openId': None, 'nickName': None, 'loginpwdErrMax': 0, 'errMsg': '通行证登陆入参验证参数为空[登陆账号]', 'mobileNo': None, 'loginpwdErr': 0, 'token': None, 'extFields': {}, 'headImgUrl': None, 'invtp': None, 'errCode': 'A112', 'key': None, 'status': 'F'}
 Fri, 31 Aug 2018 16:40:12  INFO test_api.py test_api [ line:56 ] =====开始比对检验返回结果=======
 Fri, 31 Aug 2018 16:40:12  INFO test_api.py test_api [ line:57 ] 全值匹配模式
 Fri, 31 Aug 2018 16:40:12  INFO test_api.py test_api [ line:60 ] 结果比对成功，测试用例通过
 Fri, 31 Aug 2018 16:40:12  INFO test_api.py test_api [ line:84 ] ================结束一次接口请求===========
 Fri, 31 Aug 2018 16:40:12  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:40:12  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【账户登录】密码为空
 Fri, 31 Aug 2018 16:40:12  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cif.service.CifPassportService
 Fri, 31 Aug 2018 16:40:12  INFO test_api.py test_api [ line:39 ] 接口请求method:passportLogin
 Fri, 31 Aug 2018 16:40:12  INFO test_api.py test_api [ line:40 ] 接口请求data:{"loginName":"13760200147",
        "loginPwd":"",
        "accoFrom":"1",
}
 Fri, 31 Aug 2018 16:40:12  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'custNo': None, 'openId': None, 'nickName': None, 'loginpwdErrMax': 0, 'errMsg': '通行证登陆入参验证参数为空[登陆密码]', 'mobileNo': None, 'loginpwdErr': 0, 'token': None, 'extFields': {}, 'headImgUrl': None, 'invtp': None, 'errCode': 'A113', 'key': None, 'status': 'F'}
 Fri, 31 Aug 2018 16:40:12  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:{'custNo': None, 'openId': None, 'nickName': None, 'loginpwdErrMax': 0, 'errMsg': '通行证登陆入参验证参数为空[登陆密码]', 'mobileNo': None, 'loginpwdErr': 0, 'token': None, 'extFields': {}, 'headImgUrl': None, 'invtp': None, 'errCode': 'A113', 'key': None, 'status': 'F'}
 Fri, 31 Aug 2018 16:40:12  INFO test_api.py test_api [ line:56 ] =====开始比对检验返回结果=======
 Fri, 31 Aug 2018 16:40:12  INFO test_api.py test_api [ line:57 ] 全值匹配模式
 Fri, 31 Aug 2018 16:40:12  INFO test_api.py test_api [ line:60 ] 结果比对成功，测试用例通过
 Fri, 31 Aug 2018 16:40:12  INFO test_api.py test_api [ line:84 ] ================结束一次接口请求===========
 Fri, 31 Aug 2018 16:40:12  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:40:12  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【账户登录】用户名错误
 Fri, 31 Aug 2018 16:40:12  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cif.service.CifPassportService
 Fri, 31 Aug 2018 16:40:12  INFO test_api.py test_api [ line:39 ] 接口请求method:passportLogin
 Fri, 31 Aug 2018 16:40:12  INFO test_api.py test_api [ line:40 ] 接口请求data:{"loginName":"13760200011",
        "loginPwd":"202cb962ac59075b964b07152d234b70",
        "accoFrom":"1",
}
 Fri, 31 Aug 2018 16:40:12  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'custNo': None, 'openId': None, 'nickName': None, 'loginpwdErrMax': 0, 'errMsg': '业务验证失败[客户不存在]', 'mobileNo': None, 'loginpwdErr': 0, 'token': None, 'extFields': {}, 'headImgUrl': None, 'invtp': None, 'errCode': 'B023', 'key': None, 'status': 'F'}
 Fri, 31 Aug 2018 16:40:12  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:{'custNo': None, 'openId': None, 'nickName': None, 'loginpwdErrMax': 0, 'errMsg': '业务验证失败[客户不存在]', 'mobileNo': None, 'loginpwdErr': 0, 'token': None, 'extFields': {}, 'headImgUrl': None, 'invtp': None, 'errCode': 'B023', 'key': None, 'status': 'F'}
 Fri, 31 Aug 2018 16:40:12  INFO test_api.py test_api [ line:56 ] =====开始比对检验返回结果=======
 Fri, 31 Aug 2018 16:40:12  INFO test_api.py test_api [ line:57 ] 全值匹配模式
 Fri, 31 Aug 2018 16:40:12  INFO test_api.py test_api [ line:60 ] 结果比对成功，测试用例通过
 Fri, 31 Aug 2018 16:40:12  INFO test_api.py test_api [ line:84 ] ================结束一次接口请求===========
 Fri, 31 Aug 2018 16:40:12  INFO test_api.py test_api [ line:36 ] ================开始发送一次接口请求，请求信息如下===========
 Fri, 31 Aug 2018 16:40:12  INFO test_api.py test_api [ line:37 ] 接口请求apiName：【账户登录】密码错误
 Fri, 31 Aug 2018 16:40:12  INFO test_api.py test_api [ line:38 ] 接口请求interface:com.wt.cif.service.CifPassportService
 Fri, 31 Aug 2018 16:40:12  INFO test_api.py test_api [ line:39 ] 接口请求method:passportLogin
 Fri, 31 Aug 2018 16:40:12  INFO test_api.py test_api [ line:40 ] 接口请求data:{"loginName":"13760200147",
        "loginPwd":"202cb962ac59075b964b07152d23",
        "accoFrom":"1",
}
 Fri, 31 Aug 2018 16:40:13  INFO test_api.py test_api [ line:49 ] 接口请求response data为：{'custNo': None, 'openId': None, 'nickName': None, 'loginpwdErrMax': 5, 'errMsg': '通行证登陆业务验证失败[登录密码不匹配]', 'mobileNo': None, 'loginpwdErr': 1, 'token': None, 'extFields': {}, 'headImgUrl': None, 'invtp': None, 'errCode': 'A003', 'key': None, 'status': 'F'}
 Fri, 31 Aug 2018 16:40:13  INFO test_api.py test_api [ line:50 ] 接口请求expected data为:{'custNo': None, 'openId': None, 'nickName': None, 'loginpwdErrMax': 5, 'errMsg': '通行证登陆业务验证失败[登录密码不匹配]', 'mobileNo': None, 'loginpwdErr': 1, 'token': None, 'extFields': {}, 'headImgUrl': None, 'invtp': None, 'errCode': 'A003', 'key': None, 'status': 'F'}
 Fri, 31 Aug 2018 16:40:13  INFO test_api.py test_api [ line:56 ] =====开始比对检验返回结果=======
 Fri, 31 Aug 2018 16:40:13  INFO test_api.py test_api [ line:57 ] 全值匹配模式
 Fri, 31 Aug 2018 16:40:13  INFO test_api.py test_api [ line:60 ] 结果比对成功，测试用例通过
 Fri, 31 Aug 2018 16:40:13  INFO test_api.py test_api [ line:84 ] ================结束一次接口请求===========
